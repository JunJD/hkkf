{"version":3,"file":"static/js/735.00e654a5.chunk.js","mappings":"qGAEAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAGX,IAEIC,EAAmBC,EAFAC,EAAQ,OAM3BC,EAAeF,EAFAC,EAAQ,OAMvBE,EAUJ,SAAiCC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAc,IAAIE,EAAS,GAAI,GAAW,MAAPF,EAAe,IAAK,IAAIG,KAAOH,EAAWT,OAAOa,UAAUC,eAAeC,KAAKN,EAAKG,KAAMD,EAAOC,GAAOH,EAAIG,IAAmC,OAAzBD,EAAM,QAAcF,EAAYE,EAVzPK,CAFCV,EAAQ,OAMjBW,EAAoBZ,EAFDC,EAAQ,OAM3BY,EAASb,EAFDC,EAAQ,OAMpB,SAASD,EAAuBI,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAE,QAAWA,GAEzF,IACIU,EAAU,CACVC,SAFQ,EAGRC,MAAM,GAENC,OAAkB,EAClBC,EAAY,WAChB,SAASC,EAAmBH,EAAMI,GAC9B,IAAIC,EAEAJ,IACAA,EAAgBK,UAChBL,EAAkB,MAEtBL,EAAiB,QAAYW,YAAY,CACrCL,UAAWA,EACXM,MAAO,GACPC,eAAgB,UAChBC,WAAW,EAAIxB,EAAY,UAAcmB,EAAc,IAAI,EAAItB,EAAgB,SAAasB,EAAaH,gBAAqBF,IAAO,EAAIjB,EAAgB,SAAasB,EAAaH,mBAAwBF,GAAOK,MACnN,SAAUM,GACT,OAAOP,GAAYA,EAASO,MAGpC,SAASC,EAAOC,EAASC,GACrB,IAAIf,EAAWgB,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAKjB,EAAQC,SACvFmB,EAAWH,UAAU,GACrBf,EAAOe,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAKjB,EAAQE,KAEnFmB,EAAY,CACZC,KAAM,GACNC,QAAS,UACTC,KAAM,OACNC,QAAS,UACTC,QAAS,WAETC,EAAWN,EAAUL,GACzBX,EAAmBH,GAAM,SAAUW,GAC/BV,EAAkBU,EAClBA,EAAaC,OAAO,CAChBb,SAAUA,EACVS,MAAO,GACPK,QAAWY,EAAWtC,EAAMuC,cACxB,MACA,CAAEhB,UAAWR,mCAAiDyB,KAAM,QAAS,YAAa,aAC1FxC,EAAMuC,cAAc7B,EAAM,QAAa,CAAEiB,KAAMW,EAAUG,KAAM,OAC/DzC,EAAMuC,cACF,MACA,CAAEhB,UAAWR,sBACbW,IAEJ1B,EAAMuC,cACN,MACA,CAAEhB,UAAWR,gBAAqByB,KAAM,QAAS,YAAa,aAC9DxC,EAAMuC,cACF,MACA,KACAb,IAGRgB,UAAU,EACVC,QAAS,WACDZ,GACAA,IAEJP,EAAaL,UACbK,EAAe,KACfV,EAAkB,WAKlCpB,EAAAA,QAAqB,CACjBkD,MAxEQ,EAyERC,KAAM,EACNC,KAAM,SAAcpB,EAASd,EAAUC,GACnC,OAAOY,EAAOC,EAAS,OAAQd,GAAU,cAAgBC,IAE7DoB,KAAM,SAAcP,EAASd,EAAU+B,EAAS9B,GAC5C,OAAOY,EAAOC,EAAS,OAAQd,EAAU+B,EAAS9B,IAEtDqB,QAAS,SAAiBR,EAASd,EAAU+B,EAAS9B,GAClD,OAAOY,EAAOC,EAAS,UAAWd,EAAU+B,EAAS9B,IAEzDsB,KAAM,SAAcT,EAASd,EAAU+B,EAAS9B,GAC5C,OAAOY,EAAOC,EAAS,OAAQd,EAAU+B,EAAS9B,IAEtDuB,QAAS,SAAiBV,EAASd,EAAU+B,EAAS9B,GAClD,OAAOY,EAAOC,EAAS,UAAWd,EAAU+B,EAAS9B,IAEzDwB,QAAS,SAAiBX,EAASd,EAAU+B,EAAS9B,GAClD,OAAOY,EAAOC,EAAS,UAAWd,EAAU+B,EAAS9B,IAEzDkC,KAAM,WACEjC,IACAA,EAAgBK,UAChBL,EAAkB,OAG1BkC,OAAQ,WACJ,IAAIC,EAAOrB,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC3EsB,EAAiBD,EAAKrC,SACtBA,OAA8BkB,IAAnBoB,EArGX,EAqGkDA,EAClDrC,EAAOoC,EAAKpC,KAEhBF,EAAQC,SAAWA,GACN,IAATC,IACAF,EAAQE,MAAO,KAI3BsC,EAAOzD,QAAUA,EAAO,S,qBC1IxBI,EAAQ,MAERA,EAAQ,MAERA,EAAQ,O,mBCFRJ,EAAQ,EAAU,SAAUO,EAAKmD,GAC/B,IAAIC,EAAS,GAEb,IAAK,IAAIC,KAAKrD,EACRmD,EAAKG,QAAQD,IAAM,GAClB9D,OAAOa,UAAUC,eAAeC,KAAKN,EAAKqD,KAC/CD,EAAOC,GAAKrD,EAAIqD,IAGlB,OAAOD,I,qNCNT,SAASG,IAEP,IAAIC,EAAQC,KAAKC,YAAYC,yBAAyBF,KAAKG,MAAOH,KAAKD,OACzD,OAAVA,QAA4B3B,IAAV2B,GACpBC,KAAKI,SAASL,GAIlB,SAASM,EAA0BC,GAQjCN,KAAKI,SALL,SAAiBG,GACf,IAAIR,EAAQC,KAAKC,YAAYC,yBAAyBI,EAAWC,GACjE,OAAiB,OAAVR,QAA4B3B,IAAV2B,EAAsBA,EAAQ,MAGnCS,KAAKR,OAG7B,SAASS,EAAoBH,EAAWI,GACtC,IACE,IAAIC,EAAYX,KAAKG,MACjBI,EAAYP,KAAKD,MACrBC,KAAKG,MAAQG,EACbN,KAAKD,MAAQW,EACbV,KAAKY,6BAA8B,EACnCZ,KAAKa,wBAA0Bb,KAAKc,wBAClCH,EACAJ,GARJ,QAWEP,KAAKG,MAAQQ,EACbX,KAAKD,MAAQQ,GAUjB,SAASQ,EAASC,GAChB,IAAIrE,EAAYqE,EAAUrE,UAE1B,IAAKA,IAAcA,EAAUsE,iBAC3B,MAAM,IAAIC,MAAM,sCAGlB,GACgD,oBAAvCF,EAAUd,0BAC4B,oBAAtCvD,EAAUmE,wBAEjB,OAAOE,EAMT,IAAIG,EAAqB,KACrBC,EAA4B,KAC5BC,EAAsB,KAgB1B,GAf4C,oBAAjC1E,EAAUmD,mBACnBqB,EAAqB,qBACmC,oBAAxCxE,EAAU2E,4BAC1BH,EAAqB,6BAE4B,oBAAxCxE,EAAU0D,0BACnBe,EAA4B,4BACmC,oBAA/CzE,EAAU4E,mCAC1BH,EAA4B,oCAEe,oBAAlCzE,EAAU8D,oBACnBY,EAAsB,sBACmC,oBAAzC1E,EAAU6E,6BAC1BH,EAAsB,8BAGC,OAAvBF,GAC8B,OAA9BC,GACwB,OAAxBC,EACA,CACA,IAAII,EAAgBT,EAAUU,aAAeV,EAAUW,KACnDC,EAC4C,oBAAvCZ,EAAUd,yBACb,6BACA,4BAEN,MAAMgB,MACJ,2FACEO,EACA,SACAG,EACA,uDACwB,OAAvBT,EAA8B,OAASA,EAAqB,KAC9B,OAA9BC,EACG,OAASA,EACT,KACqB,OAAxBC,EAA+B,OAASA,EAAsB,IATjE,wIA0BJ,GARkD,oBAAvCL,EAAUd,2BACnBvD,EAAUmD,mBAAqBA,EAC/BnD,EAAU0D,0BAA4BA,GAMS,oBAAtC1D,EAAUmE,wBAAwC,CAC3D,GAA4C,oBAAjCnE,EAAUkF,mBACnB,MAAM,IAAIX,MACR,qHAIJvE,EAAU8D,oBAAsBA,EAEhC,IAAIoB,EAAqBlF,EAAUkF,mBAEnClF,EAAUkF,mBAAqB,SAC7BlB,EACAJ,EACAuB,GAUA,IAAIC,EAAW/B,KAAKY,4BAChBZ,KAAKa,wBACLiB,EAEJD,EAAmBhF,KAAKmD,KAAMW,EAAWJ,EAAWwB,IAIxD,OAAOf,EA7GTlB,EAAmBkC,8BAA+B,EAClD3B,EAA0B2B,8BAA+B,EACzDvB,EAAoBuB,8BAA+B,E,cC/CnD,SAASC,EAAMC,GACd,IAAIC,EAAGC,EAAGC,EAAI,GAEd,GAAmB,kBAARH,GAAmC,kBAARA,EACrCG,GAAOH,OACD,GAAmB,kBAARA,EACjB,GAAII,MAAMC,QAAQL,GACjB,IAAKC,EAAE,EAAGA,EAAID,EAAI/D,OAAQgE,IACrBD,EAAIC,KACHC,EAAIH,EAAMC,EAAIC,OACjBE,IAAQA,GAAO,KACfA,GAAOD,QAKV,IAAKD,KAAKD,EACLA,EAAIC,KACPE,IAAQA,GAAO,KACfA,GAAOF,GAMX,OAAOE,EAGO,SAAS,IAEvB,IADA,IAASG,EAAKC,EAAV7C,EAAE,EAAWyC,EAAI,GACdzC,EAAI1B,UAAUC,SAChBqE,EAAMtE,UAAU0B,QACf6C,EAAIR,EAAMO,MACbH,IAAQA,GAAO,KACfA,GAAOI,GAIV,OAAOJ,ECnCO,SAASK,EAAkDC,GACxE,IAAIC,EAAYD,EAAKC,UACjBC,EAAWF,EAAKE,SAChBC,EAA0BH,EAAKG,wBAC/BC,EAA+BJ,EAAKI,6BACpCC,EAAiBL,EAAKK,eACtBC,EAAeN,EAAKM,aACpBC,EAAoBP,EAAKO,kBACzBC,EAAgBR,EAAKQ,cACrBC,EAAqCT,EAAKS,mCAI1CR,IAAcI,IAAuC,kBAAbH,GAAiD,kBAAjBI,GAA8BJ,IAAaI,KACrHH,EAAwBC,GAGpBI,GAAiB,GAAKA,IAAkBD,GAC1CE,K,cCpBS,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACI5G,EAAKkD,EADLD,GAAS,EAAA6D,EAAA,SAA6BF,EAAQC,GAGlD,GAAIzH,OAAO2H,sBAAuB,CAChC,IAAIC,EAAmB5H,OAAO2H,sBAAsBH,GAEpD,IAAK1D,EAAI,EAAGA,EAAI8D,EAAiBvF,OAAQyB,IACvClD,EAAMgH,EAAiB9D,GACnB2D,EAAS1D,QAAQnD,IAAQ,GACxBZ,OAAOa,UAAUgH,qBAAqB9G,KAAKyG,EAAQ5G,KACxDiD,EAAOjD,GAAO4G,EAAO5G,IAIzB,OAAOiD,ECfT,ICKIiE,EAEJ,WAKE,SAASA,EAA2BjB,GAClC,IAAIC,EAAYD,EAAKC,UACjBiB,EAAiBlB,EAAKkB,eACtBC,EAAoBnB,EAAKmB,mBAE7BC,EAAAA,EAAAA,GAAgB/D,KAAM4D,IAEtBI,EAAAA,EAAAA,GAAgBhE,KAAM,2BAA4B,KAElDgE,EAAAA,EAAAA,GAAgBhE,KAAM,sBAAuB,IAE7CgE,EAAAA,EAAAA,GAAgBhE,KAAM,qBAAsB,IAE5CgE,EAAAA,EAAAA,GAAgBhE,KAAM,kBAAc,IAEpCgE,EAAAA,EAAAA,GAAgBhE,KAAM,uBAAmB,IAEzCgE,EAAAA,EAAAA,GAAgBhE,KAAM,0BAAsB,GAE5CA,KAAKiE,gBAAkBJ,EACvB7D,KAAKkE,WAAatB,EAClB5C,KAAKmE,mBAAqBL,EAsQ5B,OAnQAM,EAAAA,EAAAA,GAAaR,EAA4B,CAAC,CACxClH,IAAK,qBACLT,MAAO,WACL,OAAO,IAER,CACDS,IAAK,YACLT,MAAO,SAAmBoI,GACxB,IAAIzB,EAAYyB,EAAMzB,UAClBkB,EAAoBO,EAAMP,kBAC1BD,EAAiBQ,EAAMR,eAC3B7D,KAAKkE,WAAatB,EAClB5C,KAAKmE,mBAAqBL,EAC1B9D,KAAKiE,gBAAkBJ,IAExB,CACDnH,IAAK,eACLT,MAAO,WACL,OAAO+D,KAAKkE,aAEb,CACDxH,IAAK,uBACLT,MAAO,WACL,OAAO+D,KAAKmE,qBAEb,CACDzH,IAAK,uBACLT,MAAO,WACL,OAAO+D,KAAKsE,qBAEb,CACD5H,IAAK,sBACLT,MAAO,WACL,OAAO,IAOR,CACDS,IAAK,2BACLT,MAAO,SAAkCsI,GACvC,GAAIA,EAAQ,GAAKA,GAASvE,KAAKkE,WAC7B,MAAMhD,MAAM,mBAAmBsD,OAAOD,EAAO,4BAA4BC,OAAOxE,KAAKkE,aAGvF,GAAIK,EAAQvE,KAAKsE,mBAIf,IAHA,IAAIG,EAAkCzE,KAAK0E,uCACvCC,EAASF,EAAgCE,OAASF,EAAgC1F,KAE7Ea,EAAII,KAAKsE,mBAAqB,EAAG1E,GAAK2E,EAAO3E,IAAK,CACzD,IAAIb,EAAOiB,KAAKiE,gBAAgB,CAC9BM,MAAO3E,IAKT,QAAaxB,IAATW,GAAsB6F,MAAM7F,GAC9B,MAAMmC,MAAM,kCAAkCsD,OAAO5E,EAAG,cAAc4E,OAAOzF,IAC3D,OAATA,GACTiB,KAAK6E,yBAAyBjF,GAAK,CACjC+E,OAAQA,EACR5F,KAAM,GAERiB,KAAK8E,kBAAoBP,IAEzBvE,KAAK6E,yBAAyBjF,GAAK,CACjC+E,OAAQA,EACR5F,KAAMA,GAER4F,GAAU5F,EACViB,KAAKsE,mBAAqBC,GAKhC,OAAOvE,KAAK6E,yBAAyBN,KAEtC,CACD7H,IAAK,uCACLT,MAAO,WACL,OAAO+D,KAAKsE,oBAAsB,EAAItE,KAAK6E,yBAAyB7E,KAAKsE,oBAAsB,CAC7FK,OAAQ,EACR5F,KAAM,KAST,CACDrC,IAAK,eACLT,MAAO,WACL,IAAIwI,EAAkCzE,KAAK0E,uCAI3C,OAH+BD,EAAgCE,OAASF,EAAgC1F,MAC/EiB,KAAKkE,WAAalE,KAAKsE,mBAAqB,GACftE,KAAKmE,qBAe5D,CACDzH,IAAK,2BACLT,MAAO,SAAkC8I,GACvC,IAAIC,EAAcD,EAAME,MACpBA,OAAwB,IAAhBD,EAAyB,OAASA,EAC1CE,EAAgBH,EAAMG,cACtBC,EAAgBJ,EAAMI,cACtBC,EAAcL,EAAMK,YAExB,GAAIF,GAAiB,EACnB,OAAO,EAGT,IAGIG,EAHAC,EAAQtF,KAAKuF,yBAAyBH,GACtCI,EAAYF,EAAMX,OAClBc,EAAYD,EAAYN,EAAgBI,EAAMvG,KAGlD,OAAQkG,GACN,IAAK,QACHI,EAAcG,EACd,MAEF,IAAK,MACHH,EAAcI,EACd,MAEF,IAAK,SACHJ,EAAcG,GAAaN,EAAgBI,EAAMvG,MAAQ,EACzD,MAEF,QACEsG,EAAcK,KAAKC,IAAIF,EAAWC,KAAKE,IAAIJ,EAAWL,IAI1D,IAAIU,EAAY7F,KAAK8F,eACrB,OAAOJ,KAAKC,IAAI,EAAGD,KAAKE,IAAIC,EAAYX,EAAeG,MAExD,CACD3I,IAAK,sBACLT,MAAO,SAA6B8J,GAClC,IAAIb,EAAgBa,EAAOb,cACvBP,EAASoB,EAAOpB,OAGpB,GAAkB,IAFF3E,KAAK8F,eAGnB,MAAO,GAGT,IAAIN,EAAYb,EAASO,EAErBc,EAAQhG,KAAKiG,iBAAiBtB,GAE9BW,EAAQtF,KAAKuF,yBAAyBS,GAC1CrB,EAASW,EAAMX,OAASW,EAAMvG,KAG9B,IAFA,IAAImH,EAAOF,EAEJrB,EAASa,GAAaU,EAAOlG,KAAKkE,WAAa,GACpDgC,IACAvB,GAAU3E,KAAKuF,yBAAyBW,GAAMnH,KAGhD,MAAO,CACLiH,MAAOA,EACPE,KAAMA,KAST,CACDxJ,IAAK,YACLT,MAAO,SAAmBsI,GACxBvE,KAAKsE,mBAAqBoB,KAAKE,IAAI5F,KAAKsE,mBAAoBC,EAAQ,KAErE,CACD7H,IAAK,gBACLT,MAAO,SAAuBkK,EAAMC,EAAKzB,GACvC,KAAOyB,GAAOD,GAAM,CAClB,IAAIE,EAASD,EAAMV,KAAKY,OAAOH,EAAOC,GAAO,GACzCjB,EAAgBnF,KAAKuF,yBAAyBc,GAAQ1B,OAE1D,GAAIQ,IAAkBR,EACpB,OAAO0B,EACElB,EAAgBR,EACzByB,EAAMC,EAAS,EACNlB,EAAgBR,IACzBwB,EAAOE,EAAS,GAIpB,OAAID,EAAM,EACDA,EAAM,EAEN,IAGV,CACD1J,IAAK,qBACLT,MAAO,SAA4BsI,EAAOI,GAGxC,IAFA,IAAI4B,EAAW,EAERhC,EAAQvE,KAAKkE,YAAclE,KAAKuF,yBAAyBhB,GAAOI,OAASA,GAC9EJ,GAASgC,EACTA,GAAY,EAGd,OAAOvG,KAAKwG,cAAcd,KAAKE,IAAIrB,EAAOvE,KAAKkE,WAAa,GAAIwB,KAAKY,MAAM/B,EAAQ,GAAII,KASxF,CACDjI,IAAK,mBACLT,MAAO,SAA0B0I,GAC/B,GAAIC,MAAMD,GACR,MAAMzD,MAAM,kBAAkBsD,OAAOG,EAAQ,eAK/CA,EAASe,KAAKC,IAAI,EAAGhB,GACrB,IAAIF,EAAkCzE,KAAK0E,uCACvC+B,EAAoBf,KAAKC,IAAI,EAAG3F,KAAKsE,oBAEzC,OAAIG,EAAgCE,QAAUA,EAErC3E,KAAKwG,cAAcC,EAAmB,EAAG9B,GAKzC3E,KAAK0G,mBAAmBD,EAAmB9B,OAKjDf,EAhST,GCEW+C,EAAoB,WAC7B,MARyB,qBAAXC,QAILA,OAAOC,OAPY,SADC,MCU3BC,EAEJ,WACE,SAASA,EAAkCnE,GACzC,IAAIoE,EAAqBpE,EAAKqE,cAC1BA,OAAuC,IAAvBD,EAAgCJ,IAAsBI,EACtEhB,EAAS1C,EAAyBV,EAAM,CAAC,mBAE7CoB,EAAAA,EAAAA,GAAgB/D,KAAM8G,IAEtB9C,EAAAA,EAAAA,GAAgBhE,KAAM,mCAA+B,IAErDgE,EAAAA,EAAAA,GAAgBhE,KAAM,sBAAkB,GAGxCA,KAAKiH,4BAA8B,IAAIrD,EAA2BmC,GAClE/F,KAAKkH,eAAiBF,EA0KxB,OAvKA5C,EAAAA,EAAAA,GAAa0C,EAAmC,CAAC,CAC/CpK,IAAK,qBACLT,MAAO,WACL,OAAO+D,KAAKiH,4BAA4BnB,eAAiB9F,KAAKkH,iBAE/D,CACDxK,IAAK,YACLT,MAAO,SAAmB8J,GACxB/F,KAAKiH,4BAA4BE,UAAUpB,KAE5C,CACDrJ,IAAK,eACLT,MAAO,WACL,OAAO+D,KAAKiH,4BAA4BG,iBAEzC,CACD1K,IAAK,uBACLT,MAAO,WACL,OAAO+D,KAAKiH,4BAA4BI,yBAEzC,CACD3K,IAAK,uBACLT,MAAO,WACL,OAAO+D,KAAKiH,4BAA4BK,yBAOzC,CACD5K,IAAK,sBACLT,MAAO,SAA6BoI,GAClC,IAAIa,EAAgBb,EAAMa,cACtBP,EAASN,EAAMM,OAEfkB,EAAY7F,KAAKiH,4BAA4BnB,eAE7CyB,EAAgBvH,KAAK8F,eAErB0B,EAAmBxH,KAAKyH,qBAAqB,CAC/CvC,cAAeA,EACfP,OAAQA,EACRkB,UAAW0B,IAGb,OAAO7B,KAAKgC,MAAMF,GAAoBD,EAAgB1B,MAEvD,CACDnJ,IAAK,2BACLT,MAAO,SAAkCsI,GACvC,OAAOvE,KAAKiH,4BAA4B1B,yBAAyBhB,KAElE,CACD7H,IAAK,uCACLT,MAAO,WACL,OAAO+D,KAAKiH,4BAA4BvC,yCAIzC,CACDhI,IAAK,eACLT,MAAO,WACL,OAAOyJ,KAAKE,IAAI5F,KAAKkH,eAAgBlH,KAAKiH,4BAA4BnB,kBAIvE,CACDpJ,IAAK,2BACLT,MAAO,SAAkC8I,GACvC,IAAIC,EAAcD,EAAME,MACpBA,OAAwB,IAAhBD,EAAyB,OAASA,EAC1CE,EAAgBH,EAAMG,cACtBC,EAAgBJ,EAAMI,cACtBC,EAAcL,EAAMK,YACxBD,EAAgBnF,KAAK2H,oBAAoB,CACvCzC,cAAeA,EACfP,OAAQQ,IAGV,IAAIR,EAAS3E,KAAKiH,4BAA4BW,yBAAyB,CACrE3C,MAAOA,EACPC,cAAeA,EACfC,cAAeA,EACfC,YAAaA,IAGf,OAAOpF,KAAK6H,oBAAoB,CAC9B3C,cAAeA,EACfP,OAAQA,MAKX,CACDjI,IAAK,sBACLT,MAAO,SAA6B6L,GAClC,IAAI5C,EAAgB4C,EAAM5C,cACtBP,EAASmD,EAAMnD,OAKnB,OAJAA,EAAS3E,KAAK2H,oBAAoB,CAChCzC,cAAeA,EACfP,OAAQA,IAEH3E,KAAKiH,4BAA4Bc,oBAAoB,CAC1D7C,cAAeA,EACfP,OAAQA,MAGX,CACDjI,IAAK,YACLT,MAAO,SAAmBsI,GACxBvE,KAAKiH,4BAA4Be,UAAUzD,KAE5C,CACD7H,IAAK,uBACLT,MAAO,SAA8BgM,GACnC,IAAI/C,EAAgB+C,EAAM/C,cACtBP,EAASsD,EAAMtD,OACfkB,EAAYoC,EAAMpC,UACtB,OAAOA,GAAaX,EAAgB,EAAIP,GAAUkB,EAAYX,KAE/D,CACDxI,IAAK,sBACLT,MAAO,SAA6BiM,GAClC,IAAIhD,EAAgBgD,EAAMhD,cACtBP,EAASuD,EAAMvD,OAEfkB,EAAY7F,KAAKiH,4BAA4BnB,eAE7CyB,EAAgBvH,KAAK8F,eAEzB,GAAID,IAAc0B,EAChB,OAAO5C,EAEP,IAAI6C,EAAmBxH,KAAKyH,qBAAqB,CAC/CvC,cAAeA,EACfP,OAAQA,EACRkB,UAAWA,IAGb,OAAOH,KAAKgC,MAAMF,GAAoBD,EAAgBrC,MAGzD,CACDxI,IAAK,sBACLT,MAAO,SAA6BkM,GAClC,IAAIjD,EAAgBiD,EAAMjD,cACtBP,EAASwD,EAAMxD,OAEfkB,EAAY7F,KAAKiH,4BAA4BnB,eAE7CyB,EAAgBvH,KAAK8F,eAEzB,GAAID,IAAc0B,EAChB,OAAO5C,EAEP,IAAI6C,EAAmBxH,KAAKyH,qBAAqB,CAC/CvC,cAAeA,EACfP,OAAQA,EACRkB,UAAW0B,IAGb,OAAO7B,KAAKgC,MAAMF,GAAoB3B,EAAYX,QAKjD4B,EAxLT,GCTe,SAASsB,IACtB,IAAIC,IAAiBnK,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,KAAmBA,UAAU,GAChFoK,EAAgB,GACpB,OAAO,SAAU3F,GACf,IAAIpF,EAAWoF,EAAKpF,SAChBgL,EAAU5F,EAAK4F,QACf7I,EAAO5D,OAAO4D,KAAK6I,GACnBC,GAAkBH,GAAkB3I,EAAK+I,OAAM,SAAU/L,GAC3D,IAAIT,EAAQsM,EAAQ7L,GACpB,OAAO4F,MAAMC,QAAQtG,GAASA,EAAMkC,OAAS,EAAIlC,GAAS,KAExDyM,EAAehJ,EAAKvB,SAAWrC,OAAO4D,KAAK4I,GAAenK,QAAUuB,EAAKiJ,MAAK,SAAUjM,GAC1F,IAAIkM,EAAcN,EAAc5L,GAC5BT,EAAQsM,EAAQ7L,GACpB,OAAO4F,MAAMC,QAAQtG,GAAS2M,EAAYC,KAAK,OAAS5M,EAAM4M,KAAK,KAAOD,IAAgB3M,KAE5FqM,EAAgBC,EAEZC,GAAkBE,GACpBnL,EAASgL,IChBA,SAASO,EAAwBnG,GAC9C,IAAIE,EAAWF,EAAKE,SAChBkG,EAA6BpG,EAAKoG,2BAClCC,EAAqBrG,EAAKqG,mBAC1BC,EAAmBtG,EAAKsG,iBACxBC,EAA4BvG,EAAKuG,0BACjCC,EAAwBxG,EAAKwG,sBAC7BC,EAAezG,EAAKyG,aACpBC,EAAe1G,EAAK0G,aACpBC,EAAoB3G,EAAK2G,kBACzBnG,EAAgBR,EAAKQ,cACrBpE,EAAO4D,EAAK5D,KACZwK,EAA4B5G,EAAK4G,0BACjCC,EAA4B7G,EAAK6G,0BACjC5G,EAAYmG,EAA2B3B,eACvCqC,EAAmBtG,GAAiB,GAAKA,EAAgBP,EAIzD6G,IAHiB1K,IAASqK,GAAgBG,IAA8BN,GAAwC,kBAAbpG,GAAyBA,IAAaoG,GAGlGK,IAAsBJ,GAA6B/F,IAAkBgG,GAC9GK,EAA0BrG,IAEhBsG,GAAoB7G,EAAY,IAAM7D,EAAOqK,GAAgBxG,EAAYoG,IAK/EK,EAAeN,EAA2BjD,eAAiB/G,GAC7DyK,EAA0B5G,EAAY,GClC5C,ICCI7D,ECAA2K,EFDJ,IAAoC,qBAAX9C,SAA0BA,OAAO+C,WAAY/C,OAAO+C,SAAS9K,eCEvE,SAAS+K,EAAcC,GACpC,KAAK9K,GAAiB,IAATA,GAAc8K,IACrBC,EAAW,CACb,IAAIC,EAAYJ,SAAS9K,cAAc,OACvCkL,EAAUpM,MAAMqM,SAAW,WAC3BD,EAAUpM,MAAMsM,IAAM,UACtBF,EAAUpM,MAAMuM,MAAQ,OACxBH,EAAUpM,MAAMwM,OAAS,OACzBJ,EAAUpM,MAAMyM,SAAW,SAC3BT,SAASU,KAAKC,YAAYP,GAC1BhL,EAAOgL,EAAUQ,YAAcR,EAAUS,YACzCb,SAASU,KAAKI,YAAYV,GAI9B,OAAOhL,ECJT,ICJI2L,EAAQC,EDIRC,GATFlB,EADoB,qBAAX9C,OACHA,OACmB,qBAATiE,KACVA,KAEA,IAKUC,uBAAyBpB,EAAIqB,6BAA+BrB,EAAIsB,0BAA4BtB,EAAIuB,wBAA0BvB,EAAIwB,yBAA2B,SAAU3N,GACnL,OAAOmM,EAAIyB,WAAW5N,EAAU,IAAO,KAGrC6N,EAAS1B,EAAI2B,sBAAwB3B,EAAI4B,4BAA8B5B,EAAI6B,yBAA2B7B,EAAI8B,uBAAyB9B,EAAI+B,wBAA0B,SAAUC,GAC7KhC,EAAIiC,aAAaD,IAGRE,EAAMhB,EACNiB,EAAMT,EElBNU,EAAyB,SAAgCC,GAClE,OAAOF,EAAIE,EAAML,KASRM,EAA0B,SAAiCzO,EAAU0O,GAC9E,IAAIjG,EAEJkG,QAAQC,UAAUC,MAAK,WACrBpG,EAAQqG,KAAKC,SAGf,IAQIP,EAAQ,CACVL,GAAIE,GATQ,SAASW,IACjBF,KAAKC,MAAQtG,GAASiG,EACxB1O,EAASV,OAETkP,EAAML,GAAKE,EAAIW,OAOnB,OAAOR,GDrBT,SAASS,EAAQC,EAAQC,GAAkB,IAAIhN,EAAO5D,OAAO4D,KAAK+M,GAAS,GAAI3Q,OAAO2H,sBAAuB,CAAE,IAAIkJ,EAAU7Q,OAAO2H,sBAAsBgJ,GAAaC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO/Q,OAAOgR,yBAAyBL,EAAQI,GAAKE,eAAgBrN,EAAKsN,KAAKC,MAAMvN,EAAMiN,GAAY,OAAOjN,EAE9U,SAASwN,EAAcvN,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,UAAUC,OAAQyB,IAAK,CAAE,IAAI0D,EAAyB,MAAhBpF,UAAU0B,GAAa1B,UAAU0B,GAAK,GAAQA,EAAI,EAAK4M,EAAQlJ,GAAQ,GAAM6J,SAAQ,SAAUzQ,IAAOsH,EAAAA,EAAAA,GAAgBrE,EAAQjD,EAAK4G,EAAO5G,OAAsBZ,OAAOsR,0BAA6BtR,OAAOuR,iBAAiB1N,EAAQ7D,OAAOsR,0BAA0B9J,IAAmBkJ,EAAQlJ,GAAQ6J,SAAQ,SAAUzQ,GAAOZ,OAAOC,eAAe4D,EAAQjD,EAAKZ,OAAOgR,yBAAyBxJ,EAAQ5G,OAAe,OAAOiD,EAkBtf,IAMH2N,EACQ,WADRA,EAES,YAWTC,GAAQ5C,EAAQD,EAEpB,SAAU8C,GAIR,SAASD,EAAKpN,GACZ,IAAIsN,GAEJ1J,EAAAA,EAAAA,GAAgB/D,KAAMuN,GAEtBE,GAAQC,EAAAA,EAAAA,GAA2B1N,MAAM2N,EAAAA,EAAAA,GAAgBJ,GAAM1Q,KAAKmD,KAAMG,KAE1E6D,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,0BAA2BrF,MAE1EpE,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,oBAAqBrF,GAAuB,KAE3FpE,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,iCAAkC,OAEjFzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,8BAA+B,OAE9EzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,4BAA4B,IAE3EzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,2BAA2B,IAE1EzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,2BAA4B,IAE3EzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,yBAA0B,IAEzEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,6BAA6B,IAE5EzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,2BAAuB,IAEtEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,0BAAsB,IAErEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,yBAAqB,IAEpEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,wBAAoB,IAEnEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,sBAAkB,IAEjEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,qBAAiB,IAEhEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,4BAA6B,IAE5EzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,2BAA4B,IAE3EzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,yBAA0B,IAEzEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,wBAAyB,IAExEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,yBAAqB,IAEpEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,0BAAsB,IAErEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,sCAAkC,IAEjFzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,cAAe,KAE9DzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,aAAc,KAE7DzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,gCAAgC,WAC7EA,EAAMI,+BAAiC,KAEvCJ,EAAMrN,SAAS,CACb0N,aAAa,EACbC,uBAAuB,QAI3B/J,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,+BAA+B,WAC5E,IAAIO,EAAoBP,EAAMtN,MAAM6N,kBAEpCP,EAAMQ,wBAAwB,CAC5B1Q,SAAUyQ,EACVzF,QAAS,CACP2F,yBAA0BT,EAAMU,kBAChCC,wBAAyBX,EAAMY,iBAC/BC,iBAAkBb,EAAMc,0BACxBC,gBAAiBf,EAAMgB,yBACvBC,sBAAuBjB,EAAMkB,eAC7BC,qBAAsBnB,EAAMoB,cAC5BC,cAAerB,EAAMsB,uBACrBC,aAAcvB,EAAMwB,6BAK1BjL,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,6BAA6B,SAAUyB,GACpFzB,EAAM0B,oBAAsBD,MAG9BlL,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,aAAa,SAAU2B,GAIhEA,EAAMzP,SAAW8N,EAAM0B,qBACzB1B,EAAM4B,kBAAkBD,EAAMzP,WAIlC,IAAI2P,EAA+B,IAAIxI,EAAkC,CACvElE,UAAWzC,EAAMoP,YACjB1L,eAAgB,SAAwBkC,GACtC,OAAOwH,EAAKiC,gBAAgBrP,EAAMsP,YAA3BlC,CAAwCxH,IAEjDjC,kBAAmByJ,EAAKmC,wBAAwBvP,KAE9CwP,EAA4B,IAAI7I,EAAkC,CACpElE,UAAWzC,EAAMyP,SACjB/L,eAAgB,SAAwBkC,GACtC,OAAOwH,EAAKiC,gBAAgBrP,EAAM0P,UAA3BtC,CAAsCxH,IAE/CjC,kBAAmByJ,EAAKuC,qBAAqB3P,KAiC/C,OA/BAsN,EAAM1N,MAAQ,CACZgQ,cAAe,CACbT,6BAA8BA,EAC9BK,0BAA2BA,EAC3BK,gBAAiB7P,EAAMsP,YACvBQ,cAAe9P,EAAM0P,UACrBK,gBAAiB/P,EAAMoP,YACvBY,aAAchQ,EAAMyP,SACpBQ,iBAAuC,IAAtBjQ,EAAM2N,YACvBuC,mBAAoBlQ,EAAMmQ,eAC1BC,gBAAiBpQ,EAAMqQ,YACvB5G,cAAe,EACf6G,uBAAuB,GAEzB3C,aAAa,EACb4C,0BEnLgC,EFoLhCC,wBEpLgC,EFqLhCC,WAAY,EACZC,UAAW,EACXC,2BAA4B,KAC5B/C,uBAAuB,GAGrB5N,EAAMqQ,YAAc,IACtB/C,EAAMsD,kBAAoBtD,EAAMuD,wBAAwB7Q,EAAOsN,EAAM1N,QAGnEI,EAAMmQ,eAAiB,IACzB7C,EAAMwD,mBAAqBxD,EAAMyD,yBAAyB/Q,EAAOsN,EAAM1N,QAGlE0N,EA4iCT,OA3rCA0D,EAAAA,EAAAA,GAAU5D,EAAMC,IAsJhBpJ,EAAAA,EAAAA,GAAamJ,EAAM,CAAC,CAClB7Q,IAAK,mBACLT,MAAO,WACL,IAAI0G,EAAOzE,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC3EkT,EAAiBzO,EAAK0O,UACtBA,OAA+B,IAAnBD,EAA4BpR,KAAKG,MAAMmJ,kBAAoB8H,EACvEE,EAAmB3O,EAAK4O,YACxBA,OAAmC,IAArBD,EAA8BtR,KAAKG,MAAMmQ,eAAiBgB,EACxEE,EAAgB7O,EAAK8O,SACrBA,OAA6B,IAAlBD,EAA2BxR,KAAKG,MAAMqQ,YAAcgB,EAE/DE,EAAcxE,EAAc,GAAIlN,KAAKG,MAAO,CAC9CmJ,kBAAmB+H,EACnBf,eAAgBiB,EAChBf,YAAaiB,IAGf,MAAO,CACLb,WAAY5Q,KAAKkR,yBAAyBQ,GAC1Cb,UAAW7Q,KAAKgR,wBAAwBU,MAO3C,CACDhV,IAAK,qBACLT,MAAO,WACL,OAAO+D,KAAKD,MAAMgQ,cAAcJ,0BAA0B7J,iBAM3D,CACDpJ,IAAK,uBACLT,MAAO,WACL,OAAO+D,KAAKD,MAAMgQ,cAAcT,6BAA6BxJ,iBAO9D,CACDpJ,IAAK,oBACLT,MAAO,SAA2BoI,GAChC,IAAIsN,EAAmBtN,EAAMuM,WACzBgB,OAAuC,IAArBD,EAA8B,EAAIA,EACpDE,EAAkBxN,EAAMwM,UACxBiB,OAAqC,IAApBD,EAA6B,EAAIA,EAItD,KAAIC,EAAiB,GAArB,CAKA9R,KAAK+R,uBAEL,IAAIC,EAAchS,KAAKG,MACnB8R,EAAaD,EAAYC,WACzBC,EAAYF,EAAYE,UACxB/H,EAAS6H,EAAY7H,OACrBD,EAAQ8H,EAAY9H,MACpB6F,EAAgB/P,KAAKD,MAAMgQ,cAK3BnG,EAAgBmG,EAAcnG,cAC9BuI,EAAkBpC,EAAcJ,0BAA0B7J,eAC1DsM,EAAoBrC,EAAcT,6BAA6BxJ,eAC/D8K,EAAalL,KAAKE,IAAIF,KAAKC,IAAI,EAAGyM,EAAoBlI,EAAQN,GAAgBgI,GAC9Ef,EAAYnL,KAAKE,IAAIF,KAAKC,IAAI,EAAGwM,EAAkBhI,EAASP,GAAgBkI,GAKhF,GAAI9R,KAAKD,MAAM6Q,aAAeA,GAAc5Q,KAAKD,MAAM8Q,YAAcA,EAAW,CAG9E,IAEIwB,EAAW,CACbvE,aAAa,EACb4C,0BAJ8BE,IAAe5Q,KAAKD,MAAM6Q,WAAaA,EAAa5Q,KAAKD,MAAM6Q,WE9RjE,GADC,EF+RoI5Q,KAAKD,MAAM2Q,0BAK5KC,wBAJ4BE,IAAc7Q,KAAKD,MAAM8Q,UAAYA,EAAY7Q,KAAKD,MAAM8Q,UE/R5D,GADC,EFgS8H7Q,KAAKD,MAAM4Q,wBAKtKG,2BAA4BxD,GAGzB2E,IACHI,EAASxB,UAAYA,GAGlBqB,IACHG,EAASzB,WAAaA,GAGxByB,EAAStE,uBAAwB,EACjC/N,KAAKI,SAASiS,GAGhBrS,KAAKsS,wBAAwB,CAC3B1B,WAAYA,EACZC,UAAWA,EACXuB,kBAAmBA,EACnBD,gBAAiBA,OAWpB,CACDzV,IAAK,gCACLT,MAAO,SAAuC8I,GAC5C,IAAIwM,EAAcxM,EAAMwM,YACpBE,EAAW1M,EAAM0M,SACrBzR,KAAKuS,+BAAgF,kBAAxCvS,KAAKuS,+BAA8C7M,KAAKE,IAAI5F,KAAKuS,+BAAgChB,GAAeA,EAC7JvR,KAAKwS,4BAA0E,kBAArCxS,KAAKwS,4BAA2C9M,KAAKE,IAAI5F,KAAKwS,4BAA6Bf,GAAYA,IAQlJ,CACD/U,IAAK,kBACLT,MAAO,WACL,IAAIwW,EAAezS,KAAKG,MACpBoP,EAAckD,EAAalD,YAC3BK,EAAW6C,EAAa7C,SACxBG,EAAgB/P,KAAKD,MAAMgQ,cAC/BA,EAAcT,6BAA6B/J,yBAAyBgK,EAAc,GAClFQ,EAAcJ,0BAA0BpK,yBAAyBqK,EAAW,KAQ7E,CACDlT,IAAK,oBACLT,MAAO,WACL,IAAI6L,EAAQ5J,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC5EwU,EAAoB5K,EAAMyJ,YAC1BA,OAAoC,IAAtBmB,EAA+B,EAAIA,EACjDC,EAAiB7K,EAAM2J,SACvBA,OAA8B,IAAnBkB,EAA4B,EAAIA,EAE3CC,EAAe5S,KAAKG,MACpBmQ,EAAiBsC,EAAatC,eAC9BE,EAAcoC,EAAapC,YAC3BT,EAAgB/P,KAAKD,MAAMgQ,cAC/BA,EAAcT,6BAA6BtH,UAAUuJ,GACrDxB,EAAcJ,0BAA0B3H,UAAUyJ,GAIlDzR,KAAK6S,yBAA2BvC,GAAkB,IElXlB,IFkXwBtQ,KAAKD,MAAM2Q,0BAAyDa,GAAejB,EAAiBiB,GAAejB,GAC3KtQ,KAAK8S,wBAA0BtC,GAAe,IEnXd,IFmXoBxQ,KAAKD,MAAM4Q,wBAAuDc,GAAYjB,EAAciB,GAAYjB,GAG5JxQ,KAAK+S,YAAc,GACnB/S,KAAKgT,WAAa,GAClBhT,KAAKiT,gBAMN,CACDvW,IAAK,eACLT,MAAO,SAAsBgM,GAC3B,IAAIsJ,EAActJ,EAAMsJ,YACpBE,EAAWxJ,EAAMwJ,SACjBlC,EAAcvP,KAAKG,MAAMoP,YACzBpP,EAAQH,KAAKG,MAGboP,EAAc,QAAqBnR,IAAhBmT,GACrBvR,KAAKkT,mCAAmChG,EAAc,GAAI/M,EAAO,CAC/DmQ,eAAgBiB,UAIHnT,IAAbqT,GACFzR,KAAKmT,+BAA+BjG,EAAc,GAAI/M,EAAO,CAC3DqQ,YAAaiB,OAIlB,CACD/U,IAAK,oBACLT,MAAO,WACL,IAAImX,EAAepT,KAAKG,MACpBkT,EAAmBD,EAAaC,iBAChClJ,EAASiJ,EAAajJ,OACtByG,EAAawC,EAAaxC,WAC1BN,EAAiB8C,EAAa9C,eAC9BO,EAAYuC,EAAavC,UACzBL,EAAc4C,EAAa5C,YAC3BtG,EAAQkJ,EAAalJ,MACrB6F,EAAgB/P,KAAKD,MAAMgQ,cAsB/B,GApBA/P,KAAK+Q,kBAAoB,EACzB/Q,KAAKiR,mBAAqB,EAG1BjR,KAAKsT,6BAIAvD,EAAcU,uBACjBzQ,KAAKI,UAAS,SAAUG,GACtB,IAAIgT,EAAcrG,EAAc,GAAI3M,EAAW,CAC7CwN,uBAAuB,IAKzB,OAFAwF,EAAYxD,cAAcnG,cAAgByJ,IAC1CE,EAAYxD,cAAcU,uBAAwB,EAC3C8C,KAIe,kBAAf3C,GAA2BA,GAAc,GAA0B,kBAAdC,GAA0BA,GAAa,EAAG,CACxG,IAAI0C,EAAchG,EAAKiG,gCAAgC,CACrDjT,UAAWP,KAAKD,MAChB6Q,WAAYA,EACZC,UAAWA,IAGT0C,IACFA,EAAYxF,uBAAwB,EACpC/N,KAAKI,SAASmT,IAKdvT,KAAKmP,sBAGHnP,KAAKmP,oBAAoByB,aAAe5Q,KAAKD,MAAM6Q,aACrD5Q,KAAKmP,oBAAoByB,WAAa5Q,KAAKD,MAAM6Q,YAG/C5Q,KAAKmP,oBAAoB0B,YAAc7Q,KAAKD,MAAM8Q,YACpD7Q,KAAKmP,oBAAoB0B,UAAY7Q,KAAKD,MAAM8Q,YAMpD,IAAI4C,EAAuBtJ,EAAS,GAAKD,EAAQ,EAE7CoG,GAAkB,GAAKmD,GACzBzT,KAAKkT,qCAGH1C,GAAe,GAAKiD,GACtBzT,KAAKmT,iCAIPnT,KAAK0T,8BAGL1T,KAAKsS,wBAAwB,CAC3B1B,WAAYA,GAAc,EAC1BC,UAAWA,GAAa,EACxBuB,kBAAmBrC,EAAcT,6BAA6BxJ,eAC9DqM,gBAAiBpC,EAAcJ,0BAA0B7J,iBAG3D9F,KAAK2T,wCAQN,CACDjX,IAAK,qBACLT,MAAO,SAA4B0E,EAAWJ,GAC5C,IAAIqT,EAAS5T,KAET6T,EAAe7T,KAAKG,MACpB8R,EAAa4B,EAAa5B,WAC1BC,EAAY2B,EAAa3B,UACzB3C,EAAcsE,EAAatE,YAC3BpF,EAAS0J,EAAa1J,OACtByF,EAAWiE,EAAajE,SACxBtG,EAAoBuK,EAAavK,kBACjCgH,EAAiBuD,EAAavD,eAC9BE,EAAcqD,EAAarD,YAC3BtG,EAAQ2J,EAAa3J,MACrB4J,EAAc9T,KAAKD,MACnB6Q,EAAakD,EAAYlD,WACzBE,EAA6BgD,EAAYhD,2BACzCD,EAAYiD,EAAYjD,UACxBd,EAAgB+D,EAAY/D,cAGhC/P,KAAKsT,6BAKL,IAAIS,EAAwCxE,EAAc,GAA+B,IAA1B5O,EAAU4O,aAAqBK,EAAW,GAA4B,IAAvBjP,EAAUiP,SAMpHkB,IAA+BxD,KAG5B4E,GAAatB,GAAc,IAAMA,IAAe5Q,KAAKmP,oBAAoByB,YAAcmD,KAC1F/T,KAAKmP,oBAAoByB,WAAaA,IAGnCqB,GAAcpB,GAAa,IAAMA,IAAc7Q,KAAKmP,oBAAoB0B,WAAakD,KACxF/T,KAAKmP,oBAAoB0B,UAAYA,IAOzC,IAAItH,GAAiD,IAApB5I,EAAUuJ,OAAoC,IAArBvJ,EAAUwJ,SAAiBA,EAAS,GAAKD,EAAQ,EAqD3G,GAlDIlK,KAAK6S,0BACP7S,KAAK6S,0BAA2B,EAEhC7S,KAAKkT,mCAAmClT,KAAKG,QAE7C2I,EAAwB,CACtBC,2BAA4BgH,EAAcT,6BAC1CtG,mBAAoBrI,EAAU4O,YAC9BtG,iBAAkBtI,EAAU8O,YAC5BvG,0BAA2BvI,EAAU2I,kBACrCH,sBAAuBxI,EAAU2P,eACjClH,aAAczI,EAAUuJ,MACxBb,aAAcuH,EACdtH,kBAAmBA,EACnBnG,cAAemN,EACfvR,KAAMmL,EACNX,0BAA2BA,EAC3BC,0BAA2B,WACzB,OAAOoK,EAAOV,mCAAmCU,EAAOzT,UAK1DH,KAAK8S,yBACP9S,KAAK8S,yBAA0B,EAE/B9S,KAAKmT,+BAA+BnT,KAAKG,QAEzC2I,EAAwB,CACtBC,2BAA4BgH,EAAcJ,0BAC1C3G,mBAAoBrI,EAAUiP,SAC9B3G,iBAAkBtI,EAAUkP,UAC5B3G,0BAA2BvI,EAAU2I,kBACrCH,sBAAuBxI,EAAU6P,YACjCpH,aAAczI,EAAUwJ,OACxBd,aAAcwH,EACdvH,kBAAmBA,EACnBnG,cAAeqN,EACfzR,KAAMoL,EACNZ,0BAA2BA,EAC3BC,0BAA2B,WACzB,OAAOoK,EAAOT,+BAA+BS,EAAOzT,UAM1DH,KAAK0T,8BAGD9C,IAAerQ,EAAUqQ,YAAcC,IAActQ,EAAUsQ,UAAW,CAC5E,IAAIsB,EAAkBpC,EAAcJ,0BAA0B7J,eAC1DsM,EAAoBrC,EAAcT,6BAA6BxJ,eAEnE9F,KAAKsS,wBAAwB,CAC3B1B,WAAYA,EACZC,UAAWA,EACXuB,kBAAmBA,EACnBD,gBAAiBA,IAIrBnS,KAAK2T,wCAEN,CACDjX,IAAK,uBACLT,MAAO,WACD+D,KAAK6N,gCACP/B,EAAuB9L,KAAK6N,kCAU/B,CACDnR,IAAK,SACLT,MAAO,WACL,IAAI+X,EAAehU,KAAKG,MACpB8T,EAAqBD,EAAaC,mBAClChC,EAAa+B,EAAa/B,WAC1BC,EAAY8B,EAAa9B,UACzBrU,EAAYmW,EAAanW,UACzBqW,EAAiBF,EAAaE,eAC9BC,EAAgBH,EAAaG,cAC7BC,EAAiBJ,EAAaI,eAC9BjK,EAAS6J,EAAa7J,OACtBuB,EAAKsI,EAAatI,GAClB2I,EAAoBL,EAAaK,kBACjCvV,EAAOkV,EAAalV,KACpBnB,EAAQqW,EAAarW,MACrB2W,EAAWN,EAAaM,SACxBpK,EAAQ8J,EAAa9J,MACrBqK,EAAevU,KAAKD,MACpBgQ,EAAgBwE,EAAaxE,cAC7BhC,EAAwBwG,EAAaxG,sBAErCD,EAAc9N,KAAKwU,eAEnBC,EAAY,CACdC,UAAW,aACXC,UAAW,MACXxK,OAAQ8H,EAAa,OAAS9H,EAC9BH,SAAU,WACVE,MAAOgI,EAAY,OAAShI,EAC5B0K,wBAAyB,QACzBC,WAAY,aAGV9G,IACF/N,KAAK+S,YAAc,IAKhB/S,KAAKD,MAAM+N,aACd9N,KAAK8U,mBAIP9U,KAAK+U,2BAA2B/U,KAAKG,MAAOH,KAAKD,OAEjD,IAAIqS,EAAoBrC,EAAcT,6BAA6BxJ,eAC/DqM,EAAkBpC,EAAcJ,0BAA0B7J,eAI1DkP,EAAwB7C,EAAkBhI,EAAS4F,EAAcnG,cAAgB,EACjFqL,EAA0B7C,EAAoBlI,EAAQ6F,EAAcnG,cAAgB,EAEpFqL,IAA4BjV,KAAKkV,0BAA4BF,IAA0BhV,KAAKmV,yBAC9FnV,KAAKkV,yBAA2BD,EAChCjV,KAAKmV,uBAAyBH,EAC9BhV,KAAKoV,2BAA4B,GAQnCX,EAAUY,UAAYjD,EAAoB4C,GAAyB9K,EAAQ,SAAW,OACtFuK,EAAUa,UAAYnD,EAAkB8C,GAA2B9K,EAAS,SAAW,OACvF,IAAIoL,EAAoBvV,KAAKwV,mBACzBC,EAAqD,IAA7BF,EAAkBpX,QAAgBgM,EAAS,GAAKD,EAAQ,EACpF,OAAO5N,EAAAA,cAAoB,OAAOoZ,EAAAA,EAAAA,SAAS,CACzCxG,IAAKlP,KAAK2V,2BACTzB,EAAgB,CACjB,aAAclU,KAAKG,MAAM,cACzB,gBAAiBH,KAAKG,MAAM,iBAC5BtC,UAAW+X,EAAK,yBAA0B/X,GAC1C6N,GAAIA,EACJmK,SAAU7V,KAAK8V,UACfhX,KAAMA,EACNnB,MAAOuP,EAAc,GAAIuH,EAAW,GAAI9W,GACxC2W,SAAUA,IACRiB,EAAkBpX,OAAS,GAAK7B,EAAAA,cAAoB,MAAO,CAC7DuB,UAAW,+CACXiB,KAAMqV,EACNxW,MAAOuP,EAAc,CACnBhD,MAAO+J,EAAqB,OAAS7B,EACrCjI,OAAQgI,EACR4D,SAAU3D,EACV4D,UAAW7D,EACX/H,SAAU,SACV6L,cAAenI,EAAc,OAAS,GACtC9D,SAAU,YACToK,IACFmB,GAAoBE,GAAyBpB,OAIjD,CACD3X,IAAK,6BACLT,MAAO,WACL,IAAIkE,EAAQjC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK8B,KAAKG,MACjFJ,EAAQ7B,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK8B,KAAKD,MACjFmW,EAAe/V,EAAM+V,aACrBC,EAAoBhW,EAAMgW,kBAC1B5G,EAAcpP,EAAMoP,YACpB6G,EAA2BjW,EAAMiW,yBACjCjM,EAAShK,EAAMgK,OACfkM,EAAsBlW,EAAMkW,oBAC5BC,EAAwBnW,EAAMmW,sBAC9BC,EAAmBpW,EAAMoW,iBACzB3G,EAAWzP,EAAMyP,SACjB1F,EAAQ/J,EAAM+J,MACdsM,EAAoBrW,EAAMqW,kBAC1B9F,EAA4B3Q,EAAM2Q,0BAClCC,EAA0B5Q,EAAM4Q,wBAChCZ,EAAgBhQ,EAAMgQ,cACtBc,EAAY7Q,KAAK+Q,kBAAoB,EAAI/Q,KAAK+Q,kBAAoBhR,EAAM8Q,UACxED,EAAa5Q,KAAKiR,mBAAqB,EAAIjR,KAAKiR,mBAAqBlR,EAAM6Q,WAE3E9C,EAAc9N,KAAKwU,aAAarU,EAAOJ,GAI3C,GAFAC,KAAKwV,mBAAqB,GAEtBrL,EAAS,GAAKD,EAAQ,EAAG,CAC3B,IAAIuM,EAAuB1G,EAAcT,6BAA6BvH,oBAAoB,CACxF7C,cAAegF,EACfvF,OAAQiM,IAEN8F,EAAoB3G,EAAcJ,0BAA0B5H,oBAAoB,CAClF7C,cAAeiF,EACfxF,OAAQkM,IAEN8F,EAA6B5G,EAAcT,6BAA6BsH,oBAAoB,CAC9F1R,cAAegF,EACfvF,OAAQiM,IAENiG,EAA2B9G,EAAcJ,0BAA0BiH,oBAAoB,CACzF1R,cAAeiF,EACfxF,OAAQkM,IAGV7Q,KAAKuO,0BAA4BkI,EAAqBzQ,MACtDhG,KAAKyO,yBAA2BgI,EAAqBvQ,KACrDlG,KAAK+O,uBAAyB2H,EAAkB1Q,MAChDhG,KAAKiP,sBAAwByH,EAAkBxQ,KAC/C,IAAI4Q,EAAwBR,EAAsB,CAChD3B,UAAW,aACX/R,UAAW2M,EACXwH,mBAAoBV,EACpBW,gBAAiBtG,EACjBuG,WAAkD,kBAA/BR,EAAqBzQ,MAAqByQ,EAAqBzQ,MAAQ,EAC1FkR,UAAgD,kBAA9BT,EAAqBvQ,KAAoBuQ,EAAqBvQ,MAAQ,IAEtFiR,EAAqBb,EAAsB,CAC7C3B,UAAW,WACX/R,UAAWgN,EACXmH,mBAAoBR,EACpBS,gBAAiBrG,EACjBsG,WAA+C,kBAA5BP,EAAkB1Q,MAAqB0Q,EAAkB1Q,MAAQ,EACpFkR,UAA6C,kBAA3BR,EAAkBxQ,KAAoBwQ,EAAkBxQ,MAAQ,IAGhFoI,EAAmBwI,EAAsBM,mBACzC5I,EAAkBsI,EAAsBO,kBACxCvI,EAAgBqI,EAAmBC,mBACnCpI,EAAemI,EAAmBE,kBAEtC,GAAIjB,EAA0B,CAK5B,IAAKA,EAAyBkB,iBAC5B,IAAK,IAAI7F,EAAW3C,EAAe2C,GAAYzC,EAAcyC,IAC3D,IAAK2E,EAAyBmB,IAAI9F,EAAU,GAAI,CAC9CnD,EAAmB,EACnBE,EAAkBe,EAAc,EAChC,MASN,IAAK6G,EAAyBoB,gBAC5B,IAAK,IAAIjG,EAAcjD,EAAkBiD,GAAe/C,EAAiB+C,IACvE,IAAK6E,EAAyBmB,IAAI,EAAGhG,GAAc,CACjDzC,EAAgB,EAChBE,EAAeY,EAAW,EAC1B,OAMR5P,KAAKwV,mBAAqBW,EAAkB,CAC1CsB,UAAWzX,KAAKgT,WAChBkD,aAAcA,EACd5G,6BAA8BS,EAAcT,6BAC5ChB,iBAAkBA,EAClBE,gBAAiBA,EACjB4H,yBAA0BA,EAC1BO,2BAA4BA,EAC5B7I,YAAaA,EACb0I,kBAAmBA,EACnBkB,OAAQ1X,KACR2P,0BAA2BI,EAAcJ,0BACzCb,cAAeA,EACfE,aAAcA,EACd4B,WAAYA,EACZC,UAAWA,EACX8G,WAAY3X,KAAK+S,YACjB8D,yBAA0BA,EAC1BJ,qBAAsBA,EACtBC,kBAAmBA,IAGrB1W,KAAKmO,kBAAoBG,EACzBtO,KAAKqO,iBAAmBG,EACxBxO,KAAK2O,eAAiBG,EACtB9O,KAAK6O,cAAgBG,KASxB,CACDtS,IAAK,uBACLT,MAAO,WACL,IAAI2b,EAA6B5X,KAAKG,MAAMyX,2BAExC5X,KAAK6N,gCACP/B,EAAuB9L,KAAK6N,gCAG9B7N,KAAK6N,+BAAiC7B,EAAwBhM,KAAK6X,6BAA8BD,KAElG,CACDlb,IAAK,6BAMLT,MAAO,WACL,GAAmD,kBAAxC+D,KAAKuS,gCAA2F,kBAArCvS,KAAKwS,4BAA0C,CACnH,IAAIjB,EAAcvR,KAAKuS,+BACnBd,EAAWzR,KAAKwS,4BACpBxS,KAAKuS,+BAAiC,KACtCvS,KAAKwS,4BAA8B,KACnCxS,KAAK8X,kBAAkB,CACrBvG,YAAaA,EACbE,SAAUA,OAIf,CACD/U,IAAK,0BACLT,MAAO,SAAiCiM,GACtC,IAAI6P,EAAS/X,KAET4Q,EAAa1I,EAAM0I,WACnBC,EAAY3I,EAAM2I,UAClBuB,EAAoBlK,EAAMkK,kBAC1BD,EAAkBjK,EAAMiK,gBAE5BnS,KAAKgY,kBAAkB,CACrBza,SAAU,SAAkB4K,GAC1B,IAAIyI,EAAazI,EAAMyI,WACnBC,EAAY1I,EAAM0I,UAClBoH,EAAeF,EAAO5X,MACtBgK,EAAS8N,EAAa9N,QAG1B0L,EAFeoC,EAAapC,UAEnB,CACPqC,aAAc/N,EACdK,YAHUyN,EAAa/N,MAIvBiO,aAAchG,EACdvB,WAAYA,EACZC,UAAWA,EACXuH,YAAahG,KAGjB7J,QAAS,CACPqI,WAAYA,EACZC,UAAWA,OAIhB,CACDnU,IAAK,eACLT,MAAO,WACL,IAAIkE,EAAQjC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK8B,KAAKG,MACjFJ,EAAQ7B,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK8B,KAAKD,MAGrF,OAAOjE,OAAOc,eAAeC,KAAKsD,EAAO,eAAiBkY,QAAQlY,EAAM2N,aAAeuK,QAAQtY,EAAM+N,eAEtG,CACDpR,IAAK,sCACLT,MAAO,WACL,GAAI+D,KAAKoV,0BAA2B,CAClC,IAAIkD,EAA4BtY,KAAKG,MAAMmY,0BAC3CtY,KAAKoV,2BAA4B,EACjCkD,EAA0B,CACxBC,WAAYvY,KAAKkV,yBAA2B,EAC5CnW,KAAMiB,KAAKD,MAAMgQ,cAAcnG,cAC/B4O,SAAUxY,KAAKmV,uBAAyB,OAI7C,CACDzY,IAAK,mBAMLT,MAAO,SAA0Bwc,GAC/B,IAAI7H,EAAa6H,EAAM7H,WACnBC,EAAY4H,EAAM5H,UAElB0C,EAAchG,EAAKiG,gCAAgC,CACrDjT,UAAWP,KAAKD,MAChB6Q,WAAYA,EACZC,UAAWA,IAGT0C,IACFA,EAAYxF,uBAAwB,EACpC/N,KAAKI,SAASmT,MAGjB,CACD7W,IAAK,2BACLT,MAAO,WACL,IAAIkE,EAAQjC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK8B,KAAKG,MACjFJ,EAAQ7B,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK8B,KAAKD,MACrF,OAAOwN,EAAK2D,yBAAyB/Q,EAAOJ,KAE7C,CACDrD,IAAK,qCACLT,MAAO,WACL,IAAIkE,EAAQjC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK8B,KAAKG,MACjFJ,EAAQ7B,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK8B,KAAKD,MAEjFwT,EAAchG,EAAKmL,2CAA2CvY,EAAOJ,GAErEwT,IACFA,EAAYxF,uBAAwB,EACpC/N,KAAKI,SAASmT,MAGjB,CACD7W,IAAK,0BACLT,MAAO,WACL,IAAIkE,EAAQjC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK8B,KAAKG,MACjFJ,EAAQ7B,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK8B,KAAKD,MACrF,OAAOwN,EAAKyD,wBAAwB7Q,EAAOJ,KAE5C,CACDrD,IAAK,mBACLT,MAAO,WACL,IAAI0b,EAAa3X,KAAK+S,YAClB0E,EAAYzX,KAAKgT,WACjBwD,EAAoBxW,KAAKG,MAAMqW,kBAOnCxW,KAAKgT,WAAa,GAClBhT,KAAK+S,YAAc,GAEnB,IAAK,IAAItB,EAAWzR,KAAK2O,eAAgB8C,GAAYzR,KAAK6O,cAAe4C,IACvE,IAAK,IAAIF,EAAcvR,KAAKmO,kBAAmBoD,GAAevR,KAAKqO,iBAAkBkD,IAAe,CAClG,IAAI7U,EAAM,GAAG8H,OAAOiN,EAAU,KAAKjN,OAAO+M,GAC1CvR,KAAK+S,YAAYrW,GAAOib,EAAWjb,GAE/B8Z,IACFxW,KAAKgT,WAAWtW,GAAO+a,EAAU/a,OAKxC,CACDA,IAAK,iCACLT,MAAO,WACL,IAAIkE,EAAQjC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK8B,KAAKG,MACjFJ,EAAQ7B,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK8B,KAAKD,MAEjFwT,EAAchG,EAAKoL,uCAAuCxY,EAAOJ,GAEjEwT,IACFA,EAAYxF,uBAAwB,EACpC/N,KAAKI,SAASmT,OAGhB,CAAC,CACH7W,IAAK,2BACLT,MAAO,SAAkCqE,EAAWC,GAClD,IAAI8R,EAAW,GAEe,IAA1B/R,EAAUiP,aAA8C,IAAzBhP,EAAUqQ,YAA2C,IAAvBtQ,EAAUsP,UAA0C,IAAxBrP,EAAUsQ,WACrGwB,EAASzB,WAAa,EACtByB,EAASxB,UAAY,IAEZvQ,EAAUsQ,aAAerQ,EAAUqQ,YAActQ,EAAUgQ,eAAiB,GAAKhQ,EAAUuQ,YAActQ,EAAUsQ,WAAavQ,EAAUkQ,YAAc,IACjK1U,OAAO8c,OAAOvG,EAAU9E,EAAKiG,gCAAgC,CAC3DjT,UAAWA,EACXqQ,WAAYtQ,EAAUsQ,WACtBC,UAAWvQ,EAAUuQ,aAIzB,IAgCIgI,EACAC,EAjCA/I,EAAgBxP,EAAUwP,cAkF9B,OAhFAsC,EAAStE,uBAAwB,EAE7BzN,EAAUmP,cAAgBM,EAAcC,iBAAmB1P,EAAUuP,YAAcE,EAAcE,gBAEnGoC,EAAStE,uBAAwB,GAGnCgC,EAAcT,6BAA6BnI,UAAU,CACnDvE,UAAWtC,EAAUiP,YACrBzL,kBAAmByJ,EAAKmC,wBAAwBpP,GAChDuD,eAAgB0J,EAAKiC,gBAAgBlP,EAAUmP,eAEjDM,EAAcJ,0BAA0BxI,UAAU,CAChDvE,UAAWtC,EAAUsP,SACrB9L,kBAAmByJ,EAAKuC,qBAAqBxP,GAC7CuD,eAAgB0J,EAAKiC,gBAAgBlP,EAAUuP,aAGX,IAAlCE,EAAcG,iBAAwD,IAA/BH,EAAcI,eACvDJ,EAAcG,gBAAkB,EAChCH,EAAcI,aAAe,GAI3B7P,EAAU2R,aAAwC,IAA1B3R,EAAUwN,cAA2D,IAAlCiC,EAAcK,iBAC3EtU,OAAO8c,OAAOvG,EAAU,CACtBvE,aAAa,IAMjBpL,EAAkD,CAChDE,UAAWmN,EAAcG,gBACzBrN,SAAmD,kBAAlCkN,EAAcC,gBAA+BD,EAAcC,gBAAkB,KAC9FlN,wBAAyB,WACvB,OAAOiN,EAAcT,6BAA6BtH,UAAU,IAE9DjF,6BAA8BzC,EAC9B0C,eAAgB1C,EAAUiP,YAC1BtM,aAA+C,kBAA1B3C,EAAUmP,YAA2BnP,EAAUmP,YAAc,KAClFvM,kBAAmB5C,EAAUgQ,eAC7BnN,cAAe4M,EAAcM,mBAC7BjN,mCAAoC,WAClCyV,EAActL,EAAKmL,2CAA2CpY,EAAWC,MAG7EmC,EAAkD,CAChDE,UAAWmN,EAAcI,aACzBtN,SAAiD,kBAAhCkN,EAAcE,cAA6BF,EAAcE,cAAgB,KAC1FnN,wBAAyB,WACvB,OAAOiN,EAAcJ,0BAA0B3H,UAAU,IAE3DjF,6BAA8BzC,EAC9B0C,eAAgB1C,EAAUsP,SAC1B3M,aAA6C,kBAAxB3C,EAAUuP,UAAyBvP,EAAUuP,UAAY,KAC9E3M,kBAAmB5C,EAAUkQ,YAC7BrN,cAAe4M,EAAcQ,gBAC7BnN,mCAAoC,WAClC0V,EAAcvL,EAAKoL,uCAAuCrY,EAAWC,MAGzEwP,EAAcG,gBAAkB5P,EAAUiP,YAC1CQ,EAAcC,gBAAkB1P,EAAUmP,YAC1CM,EAAcK,iBAA4C,IAA1B9P,EAAUwN,YAC1CiC,EAAcI,aAAe7P,EAAUsP,SACvCG,EAAcE,cAAgB3P,EAAUuP,UACxCE,EAAcM,mBAAqB/P,EAAUgQ,eAC7CP,EAAcQ,gBAAkBjQ,EAAUkQ,YAE1CT,EAAcnG,cAAgBtJ,EAAU+S,wBAEJjV,IAAhC2R,EAAcnG,eAChBmG,EAAcU,uBAAwB,EACtCV,EAAcnG,cAAgB,GAE9BmG,EAAcU,uBAAwB,EAGxC4B,EAAStC,cAAgBA,EAClB7C,EAAc,GAAImF,EAAU,GAAIwG,EAAa,GAAIC,KAEzD,CACDpc,IAAK,0BACLT,MAAO,SAAiCkE,GACtC,MAAoC,kBAAtBA,EAAMsP,YAA2BtP,EAAMsP,YAActP,EAAM4Y,sBAE1E,CACDrc,IAAK,uBACLT,MAAO,SAA8BkE,GACnC,MAAkC,kBAApBA,EAAM0P,UAAyB1P,EAAM0P,UAAY1P,EAAM6Y,mBAEtE,CACDtc,IAAK,kCAMLT,MAAO,SAAyCgd,GAC9C,IAAI1Y,EAAY0Y,EAAM1Y,UAClBqQ,EAAaqI,EAAMrI,WACnBC,EAAYoI,EAAMpI,UAClBwB,EAAW,CACbvB,2BAA4BxD,GAa9B,MAV0B,kBAAfsD,GAA2BA,GAAc,IAClDyB,EAAS3B,0BAA4BE,EAAarQ,EAAUqQ,WEjoC9B,GADC,EFmoC/ByB,EAASzB,WAAaA,GAGC,kBAAdC,GAA0BA,GAAa,IAChDwB,EAAS1B,wBAA0BE,EAAYtQ,EAAUsQ,UEtoC3B,GADC,EFwoC/BwB,EAASxB,UAAYA,GAGG,kBAAfD,GAA2BA,GAAc,GAAKA,IAAerQ,EAAUqQ,YAAmC,kBAAdC,GAA0BA,GAAa,GAAKA,IAActQ,EAAUsQ,UAClKwB,EAGF,KAER,CACD3V,IAAK,kBACLT,MAAO,SAAyBA,GAC9B,MAAwB,oBAAVA,EAAuBA,EAAQ,WAC3C,OAAOA,KAGV,CACDS,IAAK,2BACLT,MAAO,SAAkCqE,EAAWC,GAClD,IAAIgP,EAAcjP,EAAUiP,YACxBpF,EAAS7J,EAAU6J,OACnBb,EAAoBhJ,EAAUgJ,kBAC9BgH,EAAiBhQ,EAAUgQ,eAC3BpG,EAAQ5J,EAAU4J,MAClB0G,EAAarQ,EAAUqQ,WACvBb,EAAgBxP,EAAUwP,cAE9B,GAAIR,EAAc,EAAG,CACnB,IAAI2J,EAAc3J,EAAc,EAC5BnK,EAAckL,EAAiB,EAAI4I,EAAcxT,KAAKE,IAAIsT,EAAa5I,GACvE6B,EAAkBpC,EAAcJ,0BAA0B7J,eAC1DqT,EAAgBpJ,EAAcU,uBAAyB0B,EAAkBhI,EAAS4F,EAAcnG,cAAgB,EACpH,OAAOmG,EAAcT,6BAA6B1H,yBAAyB,CACzE3C,MAAOqE,EACPpE,cAAegF,EAAQiP,EACvBhU,cAAeyL,EACfxL,YAAaA,IAIjB,OAAO,IAER,CACD1I,IAAK,6CACLT,MAAO,SAAoDqE,EAAWC,GACpE,IAAIqQ,EAAarQ,EAAUqQ,WAEvBwI,EAAuB7L,EAAK2D,yBAAyB5Q,EAAWC,GAEpE,MAAoC,kBAAzB6Y,GAAqCA,GAAwB,GAAKxI,IAAewI,EACnF7L,EAAKiG,gCAAgC,CAC1CjT,UAAWA,EACXqQ,WAAYwI,EACZvI,WAAY,IAIT,KAER,CACDnU,IAAK,0BACLT,MAAO,SAAiCqE,EAAWC,GACjD,IAAI4J,EAAS7J,EAAU6J,OACnByF,EAAWtP,EAAUsP,SACrBtG,EAAoBhJ,EAAUgJ,kBAC9BkH,EAAclQ,EAAUkQ,YACxBtG,EAAQ5J,EAAU4J,MAClB2G,EAAYtQ,EAAUsQ,UACtBd,EAAgBxP,EAAUwP,cAE9B,GAAIH,EAAW,EAAG,CAChB,IAAIyJ,EAAWzJ,EAAW,EACtBxK,EAAcoL,EAAc,EAAI6I,EAAW3T,KAAKE,IAAIyT,EAAU7I,GAC9D4B,EAAoBrC,EAAcT,6BAA6BxJ,eAC/DqT,EAAgBpJ,EAAcU,uBAAyB2B,EAAoBlI,EAAQ6F,EAAcnG,cAAgB,EACrH,OAAOmG,EAAcJ,0BAA0B/H,yBAAyB,CACtE3C,MAAOqE,EACPpE,cAAeiF,EAASgP,EACxBhU,cAAe0L,EACfzL,YAAaA,IAIjB,OAAO,IAER,CACD1I,IAAK,yCACLT,MAAO,SAAgDqE,EAAWC,GAChE,IAAIsQ,EAAYtQ,EAAUsQ,UAEtByI,EAAsB/L,EAAKyD,wBAAwB1Q,EAAWC,GAElE,MAAmC,kBAAxB+Y,GAAoCA,GAAuB,GAAKzI,IAAcyI,EAChF/L,EAAKiG,gCAAgC,CAC1CjT,UAAWA,EACXqQ,YAAa,EACbC,UAAWyI,IAIR,OAIJ/L,EA5rCT,CA6rCEjR,EAAAA,gBAAsB0H,EAAAA,EAAAA,GAAgB0G,EAAQ,YAAqD,MAkLjGC,IAEJ3G,EAAAA,EAAAA,GAAgBuJ,EAAM,eAAgB,CACpC,aAAc,OACd,iBAAiB,EACjB0G,oBAAoB,EACpBhC,YAAY,EACZC,WAAW,EACXiE,kBGv6Ca,SAAkCxT,GA2B/C,IA1BA,IAAI8U,EAAY9U,EAAK8U,UACjBvB,EAAevT,EAAKuT,aACpB5G,EAA+B3M,EAAK2M,6BACpChB,EAAmB3L,EAAK2L,iBACxBE,EAAkB7L,EAAK6L,gBACvB4H,EAA2BzT,EAAKyT,yBAChCO,EAA6BhU,EAAKgU,2BAClC7I,EAAcnL,EAAKmL,YACnB0I,EAAoB7T,EAAK6T,kBACzBkB,EAAS/U,EAAK+U,OACd/H,EAA4BhN,EAAKgN,0BACjCb,EAAgBnM,EAAKmM,cACrBE,EAAerM,EAAKqM,aACpB2I,EAAahV,EAAKgV,WAClBd,EAA2BlU,EAAKkU,yBAChCJ,EAAuB9T,EAAK8T,qBAC5BC,EAAoB/T,EAAK+T,kBACzB6C,EAAgB,GAMhBC,EAAqBlK,EAA6BkK,sBAAwB7J,EAA0B6J,qBACpGC,GAAiB3L,IAAgB0L,EAE5B/H,EAAW3C,EAAe2C,GAAYzC,EAAcyC,IAG3D,IAFA,IAAIiI,EAAW/J,EAA0BpK,yBAAyBkM,GAEzDF,EAAcjD,EAAkBiD,GAAe/C,EAAiB+C,IAAe,CACtF,IAAIoI,EAAcrK,EAA6B/J,yBAAyBgM,GACpEqI,EAAYrI,GAAekF,EAAqBzQ,OAASuL,GAAekF,EAAqBvQ,MAAQuL,GAAYiF,EAAkB1Q,OAASyL,GAAYiF,EAAkBxQ,KAC1KxJ,EAAM,GAAG8H,OAAOiN,EAAU,KAAKjN,OAAO+M,GACtC5T,OAAQ,EAER8b,GAAiB9B,EAAWjb,GAC9BiB,EAAQga,EAAWjb,GAIf0Z,IAA6BA,EAAyBmB,IAAI9F,EAAUF,GAItE5T,EAAQ,CACNwM,OAAQ,OACR0P,KAAM,EACN7P,SAAU,WACVC,IAAK,EACLC,MAAO,SAGTvM,EAAQ,CACNwM,OAAQuP,EAAS3a,KACjB8a,KAAMF,EAAYhV,OAASgS,EAC3B3M,SAAU,WACVC,IAAKyP,EAAS/U,OAASkS,EACvB3M,MAAOyP,EAAY5a,MAErB4Y,EAAWjb,GAAOiB,GAItB,IAAImc,EAAqB,CACvBvI,YAAaA,EACbzD,YAAaA,EACb8L,UAAWA,EACXld,IAAKA,EACLgb,OAAQA,EACRjG,SAAUA,EACV9T,MAAOA,GAELoc,OAAe,GAWdvD,IAAqB1I,GAAiB6I,GAA+BE,EAQxEkD,EAAe7D,EAAa4D,IAPvBrC,EAAU/a,KACb+a,EAAU/a,GAAOwZ,EAAa4D,IAGhCC,EAAetC,EAAU/a,IAMP,MAAhBqd,IAAyC,IAAjBA,GAQ5BR,EAAcvM,KAAK+M,GAIvB,OAAOR,GH6zCPpF,cAAe,WACfC,eAAgB,GAChB2E,oBAAqB,IACrBC,iBAAkB,GAClB3F,iBAAkBzJ,EAClByK,kBAv4Ce,WACf,OAAO,MAu4CPwB,SAAU,aACVyC,0BAA2B,aAC3BtK,kBAAmB,aACnBqI,oBAAqB,EACrBC,sBE76Ca,SAAsC3T,GACnD,IAAIC,EAAYD,EAAKC,UACjBmU,EAAqBpU,EAAKoU,mBAC1BC,EAAkBrU,EAAKqU,gBACvBC,EAAatU,EAAKsU,WAClBC,EAAYvU,EAAKuU,UAErB,OAfoC,IAehCF,EACK,CACLI,mBAAoB1R,KAAKC,IAAI,EAAGsR,GAChCI,kBAAmB3R,KAAKE,IAAIhD,EAAY,EAAGsU,EAAYH,IAGlD,CACLK,mBAAoB1R,KAAKC,IAAI,EAAGsR,EAAaF,GAC7CM,kBAAmB3R,KAAKE,IAAIhD,EAAY,EAAGsU,KF+5C/CX,iBAAkB,GAClBzX,KAAM,OACN8Y,2BA15CiD,IA25CjDtO,kBAAmB,OACnBgH,gBAAiB,EACjBE,aAAc,EACd7S,MAAO,GACP2W,SAAU,EACVkC,mBAAmB,IAGrBzV,EAASwM,GACT,QI17Ce,SAASyM,EAA6BrX,GACnD,IAAIC,EAAYD,EAAKC,UACjBmU,EAAqBpU,EAAKoU,mBAC1BC,EAAkBrU,EAAKqU,gBACvBC,EAAatU,EAAKsU,WAClBC,EAAYvU,EAAKuU,UAMrB,OAFAH,EAAqBrR,KAAKC,IAAI,EAAGoR,GAjBG,IAmBhCC,EACK,CACLI,mBAAoB1R,KAAKC,IAAI,EAAGsR,EAAa,GAC7CI,kBAAmB3R,KAAKE,IAAIhD,EAAY,EAAGsU,EAAYH,IAGlD,CACLK,mBAAoB1R,KAAKC,IAAI,EAAGsR,EAAaF,GAC7CM,kBAAmB3R,KAAKE,IAAIhD,EAAY,EAAGsU,EAAY,IC5B7D,ICQIxM,EAAQC,EAEZ,SAAS6B,EAAQC,EAAQC,GAAkB,IAAIhN,EAAO5D,OAAO4D,KAAK+M,GAAS,GAAI3Q,OAAO2H,sBAAuB,CAAE,IAAIkJ,EAAU7Q,OAAO2H,sBAAsBgJ,GAAaC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO/Q,OAAOgR,yBAAyBL,EAAQI,GAAKE,eAAgBrN,EAAKsN,KAAKC,MAAMvN,EAAMiN,GAAY,OAAOjN,EAU9U,IAAIua,GAAmBtP,EAAQD,EAE/B,SAAU8C,GAGR,SAASyM,IACP,IAAIC,EAEAzM,GAEJ1J,EAAAA,EAAAA,GAAgB/D,KAAMia,GAEtB,IAAK,IAAIE,EAAOjc,UAAUC,OAAQic,EAAO,IAAI9X,MAAM6X,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQnc,UAAUmc,GAkFzB,OA/EA5M,GAAQC,EAAAA,EAAAA,GAA2B1N,MAAOka,GAAmBvM,EAAAA,EAAAA,GAAgBsM,IAAkBpd,KAAKoQ,MAAMiN,EAAkB,CAACla,MAAMwE,OAAO4V,MAE1IpW,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,QAAS,CACtD6C,eAAgB,EAChBE,YAAa,EACbT,cAAe,CACbM,mBAAoB,EACpBE,gBAAiB,MAIrBvM,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,oBAAqB,IAEpEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,mBAAoB,IAEnEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,iBAAkB,IAEjEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,gBAAiB,IAEhEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,cAAc,SAAU2B,GACrE,IAAI4C,EAAcvE,EAAMtN,MACpBoP,EAAcyC,EAAYzC,YAC1B+K,EAAWtI,EAAYsI,SACvBC,EAAOvI,EAAYuI,KACnB3K,EAAWoC,EAAYpC,SAE3B,IAAI0K,EAAJ,CAIA,IAAIE,EAAwB/M,EAAMgN,kBAC9BC,EAAyBF,EAAsBlK,eAC/CqK,EAAsBH,EAAsBhK,YAE5CoK,EAAyBnN,EAAMgN,kBAC/BnK,EAAiBsK,EAAuBtK,eACxCE,EAAcoK,EAAuBpK,YAIzC,OAAQpB,EAAM1S,KACZ,IAAK,YACH8T,EAAuB,UAAT+J,EAAmB7U,KAAKE,IAAI4K,EAAc,EAAGZ,EAAW,GAAKlK,KAAKE,IAAI6H,EAAMoB,cAAgB,EAAGe,EAAW,GACxH,MAEF,IAAK,YACHU,EAA0B,UAATiK,EAAmB7U,KAAKC,IAAI2K,EAAiB,EAAG,GAAK5K,KAAKC,IAAI8H,EAAMU,kBAAoB,EAAG,GAC5G,MAEF,IAAK,aACHmC,EAA0B,UAATiK,EAAmB7U,KAAKE,IAAI0K,EAAiB,EAAGf,EAAc,GAAK7J,KAAKE,IAAI6H,EAAMY,iBAAmB,EAAGkB,EAAc,GACvI,MAEF,IAAK,UACHiB,EAAuB,UAAT+J,EAAmB7U,KAAKC,IAAI6K,EAAc,EAAG,GAAK9K,KAAKC,IAAI8H,EAAMkB,eAAiB,EAAG,GAInG2B,IAAmBoK,GAA0BlK,IAAgBmK,IAC/DvL,EAAMyL,iBAENpN,EAAMqN,mBAAmB,CACvBxK,eAAgBA,EAChBE,YAAaA,UAKnBxM,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,sBAAsB,SAAU9K,GAC7E,IAAI2L,EAAmB3L,EAAK2L,iBACxBE,EAAkB7L,EAAK6L,gBACvBM,EAAgBnM,EAAKmM,cACrBE,EAAerM,EAAKqM,aACxBvB,EAAMU,kBAAoBG,EAC1Bb,EAAMY,iBAAmBG,EACzBf,EAAMkB,eAAiBG,EACvBrB,EAAMoB,cAAgBG,KAGjBvB,EAmFT,OA/KA0D,EAAAA,EAAAA,GAAU8I,EAAiBzM,IA+F3BpJ,EAAAA,EAAAA,GAAa6V,EAAiB,CAAC,CAC7Bvd,IAAK,mBACLT,MAAO,SAA0BoI,GAC/B,IAAIiM,EAAiBjM,EAAMiM,eACvBE,EAAcnM,EAAMmM,YACxBxQ,KAAKI,SAAS,CACZoQ,YAAaA,EACbF,eAAgBA,MAGnB,CACD5T,IAAK,SACLT,MAAO,WACL,IAAIwW,EAAezS,KAAKG,MACpBtC,EAAY4U,EAAa5U,UACzBkd,EAAWtI,EAAasI,SAExBC,EAAyBhb,KAAKya,kBAC9BnK,EAAiB0K,EAAuB1K,eACxCE,EAAcwK,EAAuBxK,YAEzC,OAAOlU,EAAAA,cAAoB,MAAO,CAChCuB,UAAWA,EACXod,UAAWjb,KAAKkb,YACfH,EAAS,CACV/M,kBAAmBhO,KAAKmb,mBACxB7K,eAAgBA,EAChBE,YAAaA,OAGhB,CACD9T,IAAK,kBACLT,MAAO,WACL,OAAO+D,KAAKG,MAAMib,aAAepb,KAAKG,MAAQH,KAAKD,QAEpD,CACDrD,IAAK,qBACLT,MAAO,SAA4B8I,GACjC,IAAIuL,EAAiBvL,EAAMuL,eACvBE,EAAczL,EAAMyL,YACpBoC,EAAe5S,KAAKG,MACpBib,EAAexI,EAAawI,aAC5BC,EAAmBzI,EAAayI,iBAEJ,oBAArBA,GACTA,EAAiB,CACf/K,eAAgBA,EAChBE,YAAaA,IAIZ4K,GACHpb,KAAKI,SAAS,CACZkQ,eAAgBA,EAChBE,YAAaA,OAIjB,CAAC,CACH9T,IAAK,2BACLT,MAAO,SAAkCqE,EAAWC,GAClD,OAAID,EAAU8a,aACL,GAGL9a,EAAUgQ,iBAAmB/P,EAAUwP,cAAcM,oBAAsB/P,EAAUkQ,cAAgBjQ,EAAUwP,cAAcQ,gBA3KvI,SAAuB5Q,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,UAAUC,OAAQyB,IAAK,CAAE,IAAI0D,EAAyB,MAAhBpF,UAAU0B,GAAa1B,UAAU0B,GAAK,GAAQA,EAAI,EAAK4M,EAAQlJ,GAAQ,GAAM6J,SAAQ,SAAUzQ,IAAOsH,EAAAA,EAAAA,GAAgBrE,EAAQjD,EAAK4G,EAAO5G,OAAsBZ,OAAOsR,0BAA6BtR,OAAOuR,iBAAiB1N,EAAQ7D,OAAOsR,0BAA0B9J,IAAmBkJ,EAAQlJ,GAAQ6J,SAAQ,SAAUzQ,GAAOZ,OAAOC,eAAe4D,EAAQjD,EAAKZ,OAAOgR,yBAAyBxJ,EAAQ5G,OAAe,OAAOiD,EA4K9euN,CAAc,GAAI3M,EAAW,CAClC+P,eAAgBhQ,EAAUgQ,eAC1BE,YAAalQ,EAAUkQ,YACvBT,cAAe,CACbM,mBAAoB/P,EAAUgQ,eAC9BC,gBAAiBjQ,EAAUkQ,eAK1B,OAIJyJ,EAhLT,CAiLE3d,EAAAA,gBAAsB0H,EAAAA,EAAAA,GAAgB0G,EAAQ,YAAqD,MAWjGC,IAEJ3G,EAAAA,EAAAA,GAAgBiW,EAAiB,eAAgB,CAC/CK,UAAU,EACVc,cAAc,EACdb,KAAM,QACNjK,eAAgB,EAChBE,YAAa,IAGfzP,EAASkZ,GACT,ICrNIvP,EAAQC,ECIG,SAAS2Q,EAA0BC,EAAOC,GAEvD,IAAIC,EAYAC,EAA0C,qBAT5CD,EADwB,qBAAfD,EACCA,EACiB,qBAAX5U,OACNA,OACe,qBAATiE,KACNA,KAEA8Q,EAAAA,GAGqBhS,UAA4B8R,EAAQ9R,SAAS+R,YAE9E,IAAKA,EAAa,CAChB,IAAIE,EAAe,WACjB,IAAIhQ,EAAM6P,EAAQ3Q,uBAAyB2Q,EAAQzQ,0BAA4ByQ,EAAQ1Q,6BAA+B,SAAU8Q,GAC9H,OAAOJ,EAAQtQ,WAAW0Q,EAAI,KAGhC,OAAO,SAAUA,GACf,OAAOjQ,EAAIiQ,IANI,GAUfC,EAAc,WAChB,IAAI1Q,EAASqQ,EAAQpQ,sBAAwBoQ,EAAQlQ,yBAA2BkQ,EAAQnQ,4BAA8BmQ,EAAQ9P,aAC9H,OAAO,SAAUD,GACf,OAAON,EAAOM,IAHA,GAOdqQ,EAAgB,SAAuBC,GACzC,IAAIC,EAAWD,EAAQE,mBACnBC,EAASF,EAASG,kBAClBC,EAAWJ,EAASK,iBACpBC,EAAcJ,EAAOC,kBACzBC,EAASzL,WAAayL,EAASjE,YAC/BiE,EAASxL,UAAYwL,EAASlE,aAC9BoE,EAAY5e,MAAMuM,MAAQiS,EAAO5R,YAAc,EAAI,KACnDgS,EAAY5e,MAAMwM,OAASgS,EAAOK,aAAe,EAAI,KACrDL,EAAOvL,WAAauL,EAAO/D,YAC3B+D,EAAOtL,UAAYsL,EAAOhE,cAOxBsE,EAAiB,SAAwBC,GAE3C,KAAIA,EAAE/c,OAAO9B,WAAmD,oBAA/B6e,EAAE/c,OAAO9B,UAAUgC,SAA0B6c,EAAE/c,OAAO9B,UAAUgC,QAAQ,oBAAsB,GAAK6c,EAAE/c,OAAO9B,UAAUgC,QAAQ,kBAAoB,GAAnL,CAIA,IAAImc,EAAUhc,KACd+b,EAAc/b,MAEVA,KAAK2c,eACPb,EAAY9b,KAAK2c,eAGnB3c,KAAK2c,cAAgBf,GAAa,YAjBhB,SAAuBI,GACzC,OAAOA,EAAQzR,aAAeyR,EAAQY,eAAe1S,OAAS8R,EAAQQ,cAAgBR,EAAQY,eAAezS,QAiBvG0S,CAAcb,KAChBA,EAAQY,eAAe1S,MAAQ8R,EAAQzR,YACvCyR,EAAQY,eAAezS,OAAS6R,EAAQQ,aAExCR,EAAQc,oBAAoB3P,SAAQ,SAAU0O,GAC5CA,EAAGhf,KAAKmf,EAASU,YAQrBK,GAAY,EACZC,EAAiB,GACjBC,EAAsB,iBACtBC,EAAc,kBAAkBC,MAAM,KACtCC,EAAc,uEAAuED,MAAM,KAGzFE,EAAM5B,EAAQ9R,SAAS9K,cAAc,eAMzC,QAJgCT,IAA5Bif,EAAI1f,MAAM2f,gBACZP,GAAY,IAGI,IAAdA,EACF,IAAK,IAAInd,EAAI,EAAGA,EAAIsd,EAAY/e,OAAQyB,IACtC,QAAoDxB,IAAhDif,EAAI1f,MAAMuf,EAAYtd,GAAK,iBAAgC,CAE7Dod,EAAiB,IADXE,EAAYtd,GACS2d,cAAgB,IAC3CN,EAAsBG,EAAYxd,GAClCmd,GAAY,EACZ,MAKR,IAAIO,EAAgB,aAChBE,EAAqB,IAAMR,EAAiB,aAAeM,EAAgB,gDAC3EG,EAAiBT,EAAiB,kBAAoBM,EAAgB,KAmG5E,MAAO,CACLI,kBA1EsB,SAA2B1B,EAASH,GAC1D,GAAIH,EACFM,EAAQN,YAAY,WAAYG,OAC3B,CACL,IAAKG,EAAQE,mBAAoB,CAC/B,IAAIyB,EAAM3B,EAAQ4B,cAEdC,EAAepC,EAAQqC,iBAAiB9B,GAExC6B,GAAyC,UAAzBA,EAAa7T,WAC/BgS,EAAQre,MAAMqM,SAAW,YAjCd,SAAsB2T,GACvC,IAAKA,EAAII,eAAe,uBAAwB,CAE9C,IAAIC,GAAOR,GAA0C,IAAM,uBAAyBC,GAAkC,IAA5G,6VACNQ,EAAON,EAAIM,MAAQN,EAAIO,qBAAqB,QAAQ,GACpDvgB,EAAQggB,EAAI9e,cAAc,SAC9BlB,EAAM+N,GAAK,sBACX/N,EAAMM,KAAO,WAEA,MAATsd,GACF5d,EAAMwgB,aAAa,QAAS5C,GAG1B5d,EAAMygB,WACRzgB,EAAMygB,WAAWC,QAAUL,EAE3BrgB,EAAM2M,YAAYqT,EAAIW,eAAeN,IAGvCC,EAAK3T,YAAY3M,IAiBf4gB,CAAaZ,GACb3B,EAAQY,eAAiB,GACzBZ,EAAQc,oBAAsB,IAC7Bd,EAAQE,mBAAqByB,EAAI9e,cAAc,QAAQhB,UAAY,kBACpE,IAAI2gB,EAAqB,oFAEzB,GAAI5X,OAAO6X,aAAc,CACvB,IAAIC,EAAeD,aAAaE,aAAa,+BAAgC,CAC3EC,WAAY,WACV,OAAOJ,KAGXxC,EAAQE,mBAAmB2C,UAAYH,EAAaE,WAAW,SAE/D5C,EAAQE,mBAAmB2C,UAAYL,EAGzCxC,EAAQ1R,YAAY0R,EAAQE,oBAC5BH,EAAcC,GACdA,EAAQ8C,iBAAiB,SAAUrC,GAAgB,GAG/CQ,IACFjB,EAAQE,mBAAmB6C,sBAAwB,SAA2BrC,GACxEA,EAAEY,eAAiBA,GACrBvB,EAAcC,IAIlBA,EAAQE,mBAAmB4C,iBAAiB7B,EAAqBjB,EAAQE,mBAAmB6C,wBAIhG/C,EAAQc,oBAAoB9P,KAAK6O,KA6BnCmD,qBAzByB,SAA8BhD,EAASH,GAChE,GAAIH,EACFM,EAAQiD,YAAY,WAAYpD,QAIhC,GAFAG,EAAQc,oBAAoBoC,OAAOlD,EAAQc,oBAAoBjd,QAAQgc,GAAK,IAEvEG,EAAQc,oBAAoB3e,OAAQ,CACvC6d,EAAQmD,oBAAoB,SAAU1C,GAAgB,GAElDT,EAAQE,mBAAmB6C,wBAC7B/C,EAAQE,mBAAmBiD,oBAAoBlC,EAAqBjB,EAAQE,mBAAmB6C,uBAE/F/C,EAAQE,mBAAmB6C,sBAAwB,MAGrD,IACE/C,EAAQE,oBAAsBF,EAAQvR,YAAYuR,EAAQE,oBAC1D,MAAOQ,QDxMjB,SAASlQ,EAAQC,EAAQC,GAAkB,IAAIhN,EAAO5D,OAAO4D,KAAK+M,GAAS,GAAI3Q,OAAO2H,sBAAuB,CAAE,IAAIkJ,EAAU7Q,OAAO2H,sBAAsBgJ,GAAaC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO/Q,OAAOgR,yBAAyBL,EAAQI,GAAKE,eAAgBrN,EAAKsN,KAAKC,MAAMvN,EAAMiN,GAAY,OAAOjN,EAE9U,SAASwN,EAAcvN,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,UAAUC,OAAQyB,IAAK,CAAE,IAAI0D,EAAyB,MAAhBpF,UAAU0B,GAAa1B,UAAU0B,GAAK,GAAQA,EAAI,EAAK4M,EAAQlJ,GAAQ,GAAM6J,SAAQ,SAAUzQ,IAAOsH,EAAAA,EAAAA,GAAgBrE,EAAQjD,EAAK4G,EAAO5G,OAAsBZ,OAAOsR,0BAA6BtR,OAAOuR,iBAAiB1N,EAAQ7D,OAAOsR,0BAA0B9J,IAAmBkJ,EAAQlJ,GAAQ6J,SAAQ,SAAUzQ,GAAOZ,OAAOC,eAAe4D,EAAQjD,EAAKZ,OAAOgR,yBAAyBxJ,EAAQ5G,OAAe,OAAOiD,EAI7f,IAAIyf,IAAazU,EAAQD,EAEzB,SAAU2U,GAGR,SAASD,IACP,IAAIlF,EAEAzM,GAEJ1J,EAAAA,EAAAA,GAAgB/D,KAAMof,GAEtB,IAAK,IAAIjF,EAAOjc,UAAUC,OAAQic,EAAO,IAAI9X,MAAM6X,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQnc,UAAUmc,GAyDzB,OAtDA5M,GAAQC,EAAAA,EAAAA,GAA2B1N,MAAOka,GAAmBvM,EAAAA,EAAAA,GAAgByR,IAAYviB,KAAKoQ,MAAMiN,EAAkB,CAACla,MAAMwE,OAAO4V,MAEpIpW,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,QAAS,CACtDtD,OAAQsD,EAAMtN,MAAMmf,eAAiB,EACrCpV,MAAOuD,EAAMtN,MAAMof,cAAgB,KAGrCvb,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,mBAAe,IAE9DzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,kBAAc,IAE7DzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,eAAW,IAE1DzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,4BAAwB,IAEvEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,aAAa,WAC1D,IAAIuE,EAAcvE,EAAMtN,MACpBqf,EAAgBxN,EAAYwN,cAC5BC,EAAezN,EAAYyN,aAC3BC,EAAW1N,EAAY0N,SAE3B,GAAIjS,EAAMkS,YAAa,CAIrB,IAAIxV,EAASsD,EAAMkS,YAAYnD,cAAgB,EAC3CtS,EAAQuD,EAAMkS,YAAYpV,aAAe,EAEzC5M,GADM8P,EAAMgO,SAAW7U,QACXkX,iBAAiBrQ,EAAMkS,cAAgB,GACnDC,EAAcC,SAASliB,EAAMiiB,YAAa,KAAO,EACjDE,EAAeD,SAASliB,EAAMmiB,aAAc,KAAO,EACnDC,EAAaF,SAASliB,EAAMoiB,WAAY,KAAO,EAC/CC,EAAgBH,SAASliB,EAAMqiB,cAAe,KAAO,EACrDC,EAAY9V,EAAS4V,EAAaC,EAClCE,EAAWhW,EAAQ0V,EAAcE,IAEhCN,GAAiB/R,EAAM1N,MAAMoK,SAAW8V,IAAcR,GAAgBhS,EAAM1N,MAAMmK,QAAUgW,KAC/FzS,EAAMrN,SAAS,CACb+J,OAAQA,EAAS4V,EAAaC,EAC9B9V,MAAOA,EAAQ0V,EAAcE,IAG/BJ,EAAS,CACPvV,OAAQA,EACRD,MAAOA,UAMflG,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,WAAW,SAAU0S,GAClE1S,EAAM2S,WAAaD,KAGd1S,EAiFT,OApJA0D,EAAAA,EAAAA,GAAUiO,EAAWC,IAsErBjb,EAAAA,EAAAA,GAAagb,EAAW,CAAC,CACvB1iB,IAAK,oBACLT,MAAO,WACL,IAAIsf,EAAQvb,KAAKG,MAAMob,MAEnBvb,KAAKogB,YAAcpgB,KAAKogB,WAAWC,YAAcrgB,KAAKogB,WAAWC,WAAWzC,eAAiB5d,KAAKogB,WAAWC,WAAWzC,cAAc0C,aAAetgB,KAAKogB,WAAWC,sBAAsBrgB,KAAKogB,WAAWC,WAAWzC,cAAc0C,YAAYC,cAIlPvgB,KAAK2f,YAAc3f,KAAKogB,WAAWC,WACnCrgB,KAAKyb,QAAUzb,KAAKogB,WAAWC,WAAWzC,cAAc0C,YAGxDtgB,KAAKwgB,qBAAuBlF,EAA0BC,EAAOvb,KAAKyb,SAElEzb,KAAKwgB,qBAAqB9C,kBAAkB1d,KAAK2f,YAAa3f,KAAKygB,WAEnEzgB,KAAKygB,eAGR,CACD/jB,IAAK,uBACLT,MAAO,WACD+D,KAAKwgB,sBAAwBxgB,KAAK2f,aACpC3f,KAAKwgB,qBAAqBxB,qBAAqBhf,KAAK2f,YAAa3f,KAAKygB,aAGzE,CACD/jB,IAAK,SACLT,MAAO,WACL,IAAIwW,EAAezS,KAAKG,MACpB4a,EAAWtI,EAAasI,SACxBld,EAAY4U,EAAa5U,UACzB2hB,EAAgB/M,EAAa+M,cAC7BC,EAAehN,EAAagN,aAC5B9hB,EAAQ8U,EAAa9U,MACrBmW,EAAc9T,KAAKD,MACnBoK,EAAS2J,EAAY3J,OACrBD,EAAQ4J,EAAY5J,MAIpBwW,EAAa,CACftW,SAAU,WAERuW,EAAc,GAyBlB,OAvBKnB,IACHkB,EAAWvW,OAAS,EACpBwW,EAAYxW,OAASA,GAGlBsV,IACHiB,EAAWxW,MAAQ,EACnByW,EAAYzW,MAAQA,GAgBf5N,EAAAA,cAAoB,MAAO,CAChCuB,UAAWA,EACXqR,IAAKlP,KAAK4gB,QACVjjB,MAAOuP,EAAc,GAAIwT,EAAY,GAAI/iB,IACxCod,EAAS4F,QAITvB,EArJT,CAsJE9iB,EAAAA,YAAkB0H,EAAAA,EAAAA,GAAgB0G,EAAQ,YAAqD,MA2B7FC,IAEJ3G,EAAAA,EAAAA,GAAgBob,GAAW,eAAgB,CACzCM,SAAU,aACVF,eAAe,EACfC,cAAc,EACd9hB,MAAO,K,IEjML+M,GAAQC,G,WAURkW,IAAgBlW,GAAQD,GAE5B,SAAU8C,GAGR,SAASqT,IACP,IAAI3G,EAEAzM,GAEJ1J,EAAAA,EAAAA,GAAgB/D,KAAM6gB,GAEtB,IAAK,IAAI1G,EAAOjc,UAAUC,OAAQic,EAAO,IAAI9X,MAAM6X,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQnc,UAAUmc,GA4CzB,OAzCA5M,GAAQC,EAAAA,EAAAA,GAA2B1N,MAAOka,GAAmBvM,EAAAA,EAAAA,GAAgBkT,IAAehkB,KAAKoQ,MAAMiN,EAAkB,CAACla,MAAMwE,OAAO4V,MAEvIpW,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,cAAU,IAEzDzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,YAAY,WACzD,IAAIuE,EAAcvE,EAAMtN,MACpB2gB,EAAQ9O,EAAY8O,MACpBC,EAAwB/O,EAAYT,YACpCA,OAAwC,IAA1BwP,EAAmC,EAAIA,EACrDrJ,EAAS1F,EAAY0F,OACrBsJ,EAAuBhP,EAAYP,SACnCA,OAAoC,IAAzBuP,EAAkCvT,EAAMtN,MAAMoE,OAAS,EAAIyc,EAEtEC,EAAwBxT,EAAMyT,uBAC9B/W,EAAS8W,EAAsB9W,OAC/BD,EAAQ+W,EAAsB/W,MAE9BC,IAAW2W,EAAMK,UAAU1P,EAAUF,IAAgBrH,IAAU4W,EAAMM,SAAS3P,EAAUF,KAC1FuP,EAAMO,IAAI5P,EAAUF,EAAarH,EAAOC,GAEpCuN,GAA8C,oBAA7BA,EAAOI,mBAC1BJ,EAAOI,kBAAkB,CACvBvG,YAAaA,EACbE,SAAUA,SAMlBzN,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,kBAAkB,SAAUuO,IACrEA,GAAaA,aAAmBsF,SAClCC,QAAQC,KAAK,mEAGf/T,EAAMgU,OAASzF,EAEXA,GACFvO,EAAMiU,uBAIHjU,EAkGT,OAxJA0D,EAAAA,EAAAA,GAAU0P,EAAcrT,IAyDxBpJ,EAAAA,EAAAA,GAAayc,EAAc,CAAC,CAC1BnkB,IAAK,oBACLT,MAAO,WACL+D,KAAK0hB,sBAEN,CACDhlB,IAAK,qBACLT,MAAO,WACL+D,KAAK0hB,sBAEN,CACDhlB,IAAK,SACLT,MAAO,WACL,IAAI8e,EAAW/a,KAAKG,MAAM4a,SAC1B,MAA2B,oBAAbA,EAA0BA,EAAS,CAC/C4G,QAAS3hB,KAAK4hB,SACdC,cAAe7hB,KAAK8hB,iBACjB/G,IAEN,CACDre,IAAK,uBACLT,MAAO,WACL,IAAI6kB,EAAQ9gB,KAAKG,MAAM2gB,MACnBiB,EAAO/hB,KAAKyhB,SAAUO,EAAAA,GAAAA,aAAYhiB,MAEtC,GAAI+hB,GAAQA,EAAKnE,eAAiBmE,EAAKnE,cAAc0C,aAAeyB,aAAgBA,EAAKnE,cAAc0C,YAAYC,YAAa,CAC9H,IAAI0B,EAAaF,EAAKpkB,MAAMuM,MACxBgY,EAAcH,EAAKpkB,MAAMwM,OAUxB2W,EAAMtJ,kBACTuK,EAAKpkB,MAAMuM,MAAQ,QAGhB4W,EAAMxJ,mBACTyK,EAAKpkB,MAAMwM,OAAS,QAGtB,IAAIA,EAASzE,KAAKyc,KAAKJ,EAAKvF,cACxBtS,EAAQxE,KAAKyc,KAAKJ,EAAKxX,aAU3B,OARI0X,IACFF,EAAKpkB,MAAMuM,MAAQ+X,GAGjBC,IACFH,EAAKpkB,MAAMwM,OAAS+X,GAGf,CACL/X,OAAQA,EACRD,MAAOA,GAGT,MAAO,CACLC,OAAQ,EACRD,MAAO,KAIZ,CACDxN,IAAK,oBACLT,MAAO,WACL,IAAIwW,EAAezS,KAAKG,MACpB2gB,EAAQrO,EAAaqO,MACrBsB,EAAwB3P,EAAalB,YACrCA,OAAwC,IAA1B6Q,EAAmC,EAAIA,EACrD1K,EAASjF,EAAaiF,OACtB2K,EAAwB5P,EAAahB,SACrCA,OAAqC,IAA1B4Q,EAAmCriB,KAAKG,MAAMoE,OAAS,EAAI8d,EAE1E,IAAKvB,EAAMvJ,IAAI9F,EAAUF,GAAc,CACrC,IAAI+Q,EAAyBtiB,KAAKkhB,uBAC9B/W,EAASmY,EAAuBnY,OAChCD,EAAQoY,EAAuBpY,MAEnC4W,EAAMO,IAAI5P,EAAUF,EAAarH,EAAOC,GAEpCuN,GAA0D,oBAAzCA,EAAO6K,+BAC1B7K,EAAO6K,8BAA8B,CACnChR,YAAaA,EACbE,SAAUA,SAOboP,EAzJT,CA0JEvkB,EAAAA,gBAAsB0H,EAAAA,EAAAA,GAAgB0G,GAAQ,YAAqD,MAYjGC,KAEJ3G,EAAAA,EAAAA,GAAgB6c,GAAc,8BAA8B,GCpL5D,SAASrU,GAAQC,EAAQC,GAAkB,IAAIhN,EAAO5D,OAAO4D,KAAK+M,GAAS,GAAI3Q,OAAO2H,sBAAuB,CAAE,IAAIkJ,EAAU7Q,OAAO2H,sBAAsBgJ,GAAaC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO/Q,OAAOgR,yBAAyBL,EAAQI,GAAKE,eAAgBrN,EAAKsN,KAAKC,MAAMvN,EAAMiN,GAAY,OAAOjN,EAE9U,SAASwN,GAAcvN,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,UAAUC,OAAQyB,IAAK,CAAE,IAAI0D,EAAyB,MAAhBpF,UAAU0B,GAAa1B,UAAU0B,GAAK,GAAQA,EAAI,EAAK4M,GAAQlJ,GAAQ,GAAM6J,SAAQ,SAAUzQ,IAAOsH,EAAAA,EAAAA,GAAgBrE,EAAQjD,EAAK4G,EAAO5G,OAAsBZ,OAAOsR,0BAA6BtR,OAAOuR,iBAAiB1N,EAAQ7D,OAAOsR,0BAA0B9J,IAAmBkJ,GAAQlJ,GAAQ6J,SAAQ,SAAUzQ,GAAOZ,OAAOC,eAAe4D,EAAQjD,EAAKZ,OAAOgR,yBAAyBxJ,EAAQ5G,OAAe,OAAOiD,EAc7f,IAMI2N,GACQ,WADRA,GAES,YAOTkV,GAEJ,SAAUhV,GAIR,SAASgV,IACP,IAAItI,EAEAzM,GAEJ1J,EAAAA,EAAAA,GAAgB/D,KAAMwiB,GAEtB,IAAK,IAAIrI,EAAOjc,UAAUC,OAAQic,EAAO,IAAI9X,MAAM6X,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQnc,UAAUmc,GAkIzB,OA/HA5M,GAAQC,EAAAA,EAAAA,GAA2B1N,MAAOka,GAAmBvM,EAAAA,EAAAA,GAAgB6U,IAAiB3lB,KAAKoQ,MAAMiN,EAAkB,CAACla,MAAMwE,OAAO4V,MAGzIpW,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,QAAS,CACtDK,aAAa,EACb8C,WAAY,EACZC,UAAW,KAGb7M,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,6CAA6C,IAE5FzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,6BAA8BrF,MAE7EpE,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,oBAAqBrF,GAAuB,KAE3FpE,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,kCAAkC,WAC/E,IAAIuE,EAAcvE,EAAMtN,MACpBsiB,EAAoBzQ,EAAYyQ,kBAChCzU,EAAoBgE,EAAYhE,kBAEpCP,EAAMiV,2BAA2B,CAC/BnlB,SAAUyQ,EACVzF,QAAS,CACPA,QAASka,EAAkBE,gCAKjC3e,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,6BAA6B,SAAUyB,GACpFzB,EAAM0B,oBAAsBD,MAG9BlL,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,wCAAwC,WACrF,IAAIgF,EAAehF,EAAMtN,MACrBsiB,EAAoBhQ,EAAagQ,kBACjCtY,EAASsI,EAAatI,OACtBb,EAAoBmJ,EAAanJ,kBACjCsZ,EAAenQ,EAAamQ,aAC5B1Y,EAAQuI,EAAavI,MACrB4J,EAAcrG,EAAM1N,MACpB6Q,EAAakD,EAAYlD,WACzBC,EAAYiD,EAAYjD,UAE5B,GAAI+R,GAAgB,EAAG,CACrB,IAAIC,EAAiBJ,EAAkBK,yBAAyB,CAC9D7d,MAAOqE,EACPyZ,UAAWH,EACXzY,OAAQA,EACRyG,WAAYA,EACZC,UAAWA,EACX3G,MAAOA,IAGL2Y,EAAejS,aAAeA,GAAciS,EAAehS,YAAcA,GAC3EpD,EAAMuV,mBAAmBH,QAK/B7e,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,aAAa,SAAU2B,GAIpE,GAAIA,EAAMzP,SAAW8N,EAAM0B,oBAA3B,CAKA1B,EAAMwV,iCAMN,IAAIrQ,EAAenF,EAAMtN,MACrBsiB,EAAoB7P,EAAa6P,kBACjCtY,EAASyI,EAAazI,OACtB+Y,EAAoBtQ,EAAasQ,kBACjChZ,EAAQ0I,EAAa1I,MACrBN,EAAgB6D,EAAM0V,eAEtBC,EAAwBX,EAAkB3c,eAC1Cud,EAAcD,EAAsBjZ,OACpCmZ,EAAaF,EAAsBlZ,MAEnC0G,EAAalL,KAAKC,IAAI,EAAGD,KAAKE,IAAI0d,EAAapZ,EAAQN,EAAewF,EAAMzP,OAAOiR,aACnFC,EAAYnL,KAAKC,IAAI,EAAGD,KAAKE,IAAIyd,EAAclZ,EAASP,EAAewF,EAAMzP,OAAOkR,YAKxF,GAAIpD,EAAM1N,MAAM6Q,aAAeA,GAAcnD,EAAM1N,MAAM8Q,YAAcA,EAAW,CAKhF,IAAIC,EAA6B1B,EAAMmU,WAAajW,GAA0CA,GAEzFG,EAAM1N,MAAM+N,aACfoV,GAAkB,GAGpBzV,EAAMrN,SAAS,CACb0N,aAAa,EACb8C,WAAYA,EACZE,2BAA4BA,EAC5BD,UAAWA,IAIfpD,EAAM6E,wBAAwB,CAC5B1B,WAAYA,EACZC,UAAWA,EACXyS,WAAYA,EACZD,YAAaA,QAIjB5V,EAAM0V,eAAiB9P,SAEMjV,IAAzBqP,EAAM0V,gBACR1V,EAAM+V,wBAAyB,EAC/B/V,EAAM0V,eAAiB,GAEvB1V,EAAM+V,wBAAyB,EAG1B/V,EAsST,OAnbA0D,EAAAA,EAAAA,GAAUqR,EAAgBhV,IAsJ1BpJ,EAAAA,EAAAA,GAAaoe,EAAgB,CAAC,CAC5B9lB,IAAK,iCACLT,MAAO,WACL+D,KAAKyjB,2CAA4C,EACjDzjB,KAAKiT,gBAYN,CACDvW,IAAK,oBACLT,MAAO,WACL,IAAImX,EAAepT,KAAKG,MACpBsiB,EAAoBrP,EAAaqP,kBACjC7R,EAAawC,EAAaxC,WAC1BgS,EAAexP,EAAawP,aAC5B/R,EAAYuC,EAAavC,UAGxB7Q,KAAKwjB,yBACRxjB,KAAKmjB,eAAiB9P,IACtBrT,KAAKwjB,wBAAyB,EAC9BxjB,KAAKI,SAAS,KAGZwiB,GAAgB,EAClB5iB,KAAK0jB,wCACI9S,GAAc,GAAKC,GAAa,IACzC7Q,KAAKgjB,mBAAmB,CACtBpS,WAAYA,EACZC,UAAWA,IAKf7Q,KAAK2jB,iCAEL,IAAIC,EAAyBnB,EAAkB3c,eAC3Cud,EAAcO,EAAuBzZ,OACrCmZ,EAAaM,EAAuB1Z,MAGxClK,KAAKsS,wBAAwB,CAC3B1B,WAAYA,GAAc,EAC1BC,UAAWA,GAAa,EACxBwS,YAAaA,EACbC,WAAYA,MAGf,CACD5mB,IAAK,qBACLT,MAAO,SAA4B0E,EAAWJ,GAC5C,IAAIsT,EAAe7T,KAAKG,MACpBgK,EAAS0J,EAAa1J,OACtBb,EAAoBuK,EAAavK,kBACjCsZ,EAAe/O,EAAa+O,aAC5B1Y,EAAQ2J,EAAa3J,MACrBqK,EAAevU,KAAKD,MACpB6Q,EAAa2D,EAAa3D,WAC1BE,EAA6ByD,EAAazD,2BAC1CD,EAAY0D,EAAa1D,UAMzBC,IAA+BxD,KAC7BsD,GAAc,GAAKA,IAAerQ,EAAUqQ,YAAcA,IAAe5Q,KAAKmP,oBAAoByB,aACpG5Q,KAAKmP,oBAAoByB,WAAaA,GAGpCC,GAAa,GAAKA,IAActQ,EAAUsQ,WAAaA,IAAc7Q,KAAKmP,oBAAoB0B,YAChG7Q,KAAKmP,oBAAoB0B,UAAYA,IAKrC1G,IAAWxJ,EAAUwJ,QAAUb,IAAsB3I,EAAU2I,mBAAqBsZ,IAAiBjiB,EAAUiiB,cAAgB1Y,IAAUvJ,EAAUuJ,OACrJlK,KAAK0jB,uCAIP1jB,KAAK2jB,mCAEN,CACDjnB,IAAK,uBACLT,MAAO,WACD+D,KAAK6N,gCACPlC,aAAa3L,KAAK6N,kCAGrB,CACDnR,IAAK,SACLT,MAAO,WACL,IAAI+X,EAAehU,KAAKG,MACpB8R,EAAa+B,EAAa/B,WAC1BrP,EAAYoR,EAAapR,UACzB6f,EAAoBzO,EAAayO,kBACjC5kB,EAAYmW,EAAanW,UACzBsM,EAAS6J,EAAa7J,OACtB0Z,EAAyB7P,EAAa6P,uBACtCnY,EAAKsI,EAAatI,GAClB2I,EAAoBL,EAAaK,kBACjC1W,EAAQqW,EAAarW,MACrBmmB,EAAuB9P,EAAa8P,qBACpC5Z,EAAQ8J,EAAa9J,MACrB6Z,EAAe/jB,KAAKD,MACpB+N,EAAciW,EAAajW,YAC3B8C,EAAamT,EAAanT,WAC1BC,EAAYkT,EAAalT,WAEzB7Q,KAAKgkB,yBAA2BphB,GAAa5C,KAAKikB,iCAAmCxB,GAAqBziB,KAAKyjB,6CACjHzjB,KAAKgkB,uBAAyBphB,EAC9B5C,KAAKikB,+BAAiCxB,EACtCziB,KAAKyjB,2CAA4C,EACjDhB,EAAkByB,gCAGpB,IAAIC,EAAyB1B,EAAkB3c,eAC3Cud,EAAcc,EAAuBha,OACrCmZ,EAAaa,EAAuBja,MAGpC2P,EAAOnU,KAAKC,IAAI,EAAGiL,EAAaiT,GAChC5Z,EAAMvE,KAAKC,IAAI,EAAGkL,EAAYiT,GAC9BM,EAAQ1e,KAAKE,IAAI0d,EAAY1S,EAAa1G,EAAQ2Z,GAClDQ,EAAS3e,KAAKE,IAAIyd,EAAaxS,EAAY1G,EAAS2Z,GACpDvO,EAAoBpL,EAAS,GAAKD,EAAQ,EAAIuY,EAAkB6B,cAAc,CAChFna,OAAQka,EAASpa,EACjB6D,YAAaA,EACb5D,MAAOka,EAAQvK,EACfpX,EAAGoX,EACHzX,EAAG6H,IACA,GACDsa,EAAkB,CACpB7P,UAAW,aACXC,UAAW,MACXxK,OAAQ8H,EAAa,OAAS9H,EAC9BH,SAAU,WACV4K,wBAAyB,QACzB1K,MAAOA,EACP2K,WAAY,aAKVG,EAAwBqO,EAAclZ,EAASnK,KAAKmjB,eAAiB,EACrElO,EAA0BqO,EAAapZ,EAAQlK,KAAKmjB,eAAiB,EAQzE,OAFAoB,EAAgBlP,UAAYiO,EAAatO,GAAyB9K,EAAQ,SAAW,OACrFqa,EAAgBjP,UAAY+N,EAAcpO,GAA2B9K,EAAS,SAAW,OAClF7N,EAAAA,cAAoB,MAAO,CAChC4S,IAAKlP,KAAK2V,0BACV,aAAc3V,KAAKG,MAAM,cACzBtC,UAAW+X,EAAK,+BAAgC/X,GAChD6N,GAAIA,EACJmK,SAAU7V,KAAK8V,UACfhX,KAAM,OACNnB,MAAOuP,GAAc,GAAIqX,EAAiB,GAAI5mB,GAC9C2W,SAAU,GACT1R,EAAY,GAAKtG,EAAAA,cAAoB,MAAO,CAC7CuB,UAAW,qDACXF,MAAO,CACLwM,OAAQkZ,EACRrN,UAAWqN,EACXtN,SAAUuN,EACVlZ,SAAU,SACV6L,cAAenI,EAAc,OAAS,GACtC5D,MAAOoZ,IAER/N,GAAkC,IAAd3S,GAAmByR,OAU3C,CACD3X,IAAK,iCACLT,MAAO,WACL,IAAI2X,EAAS5T,KAETA,KAAK6N,gCACPlC,aAAa3L,KAAK6N,gCAGpB7N,KAAK6N,+BAAiC1C,YAAW,YAE/C+X,EADwBtP,EAAOzT,MAAM+iB,oBACnB,GAClBtP,EAAO/F,+BAAiC,KAExC+F,EAAOxT,SAAS,CACd0N,aAAa,MAtXI,OA0XtB,CACDpR,IAAK,0BACLT,MAAO,SAAiC0G,GACtC,IAAIoV,EAAS/X,KAET4Q,EAAajO,EAAKiO,WAClBC,EAAYlO,EAAKkO,UACjBwS,EAAc1gB,EAAK0gB,YACnBC,EAAa3gB,EAAK2gB,WAEtBtjB,KAAKgY,kBAAkB,CACrBza,SAAU,SAAkB8G,GAC1B,IAAIuM,EAAavM,EAAMuM,WACnBC,EAAYxM,EAAMwM,UAClBoH,EAAeF,EAAO5X,MACtBgK,EAAS8N,EAAa9N,QAG1B0L,EAFeoC,EAAapC,UAEnB,CACPqC,aAAc/N,EACdK,YAHUyN,EAAa/N,MAIvBiO,aAAckL,EACdzS,WAAYA,EACZC,UAAWA,EACXuH,YAAakL,KAGjB/a,QAAS,CACPqI,WAAYA,EACZC,UAAWA,OAIhB,CACDnU,IAAK,qBACLT,MAAO,SAA4B8I,GACjC,IAAI6L,EAAa7L,EAAM6L,WACnBC,EAAY9L,EAAM8L,UAClBwB,EAAW,CACbvB,2BAA4BxD,IAG1BsD,GAAc,IAChByB,EAASzB,WAAaA,GAGpBC,GAAa,IACfwB,EAASxB,UAAYA,IAGnBD,GAAc,GAAKA,IAAe5Q,KAAKD,MAAM6Q,YAAcC,GAAa,GAAKA,IAAc7Q,KAAKD,MAAM8Q,YACxG7Q,KAAKI,SAASiS,MAGhB,CAAC,CACH3V,IAAK,2BACLT,MAAO,SAAkCqE,EAAWC,GAClD,OAA4B,IAAxBD,EAAUsC,WAA6C,IAAzBrC,EAAUqQ,YAA4C,IAAxBrQ,EAAUsQ,UAM/DvQ,EAAUsQ,aAAerQ,EAAUqQ,YAActQ,EAAUuQ,YAActQ,EAAUsQ,UACrF,CACLD,WAAoC,MAAxBtQ,EAAUsQ,WAAqBtQ,EAAUsQ,WAAarQ,EAAUqQ,WAC5EC,UAAkC,MAAvBvQ,EAAUuQ,UAAoBvQ,EAAUuQ,UAAYtQ,EAAUsQ,UACzEC,2BAA4BxD,IAIzB,KAbE,CACLsD,WAAY,EACZC,UAAW,EACXC,2BAA4BxD,QAc7BkV,EApbT,CAqbElmB,EAAAA,gBAEF0H,EAAAA,EAAAA,GAAgBwe,GAAgB,eAAgB,CAC9C,aAAc,OACdqB,uBAAwB,EACxBxP,kBAAmB,WACjB,OAAO,MAETwB,SAAU,WACR,OAAO,MAET7H,kBAAmB,WACjB,OAAO,MAET1E,kBAAmB,OACnBsZ,cAAe,EACfjlB,MAAO,GACPmmB,qBAAsB,IAGxBtB,GAAegC,UAgGX,GACJzjB,EAASyhB,IACT,UC3kBIiC,GAEJ,WACE,SAASA,EAAQ9hB,GACf,IAAIwH,EAASxH,EAAKwH,OACdD,EAAQvH,EAAKuH,MACbzH,EAAIE,EAAKF,EACTL,EAAIO,EAAKP,GAEb2B,EAAAA,EAAAA,GAAgB/D,KAAMykB,GAEtBzkB,KAAKmK,OAASA,EACdnK,KAAKkK,MAAQA,EACblK,KAAKyC,EAAIA,EACTzC,KAAKoC,EAAIA,EACTpC,KAAK0kB,UAAY,GACjB1kB,KAAK2kB,SAAW,GAgClB,OA3BAvgB,EAAAA,EAAAA,GAAaqgB,EAAS,CAAC,CACrB/nB,IAAK,eACLT,MAAO,SAAsBoI,GAC3B,IAAIE,EAAQF,EAAME,MAEbvE,KAAK0kB,UAAUngB,KAClBvE,KAAK0kB,UAAUngB,IAAS,EAExBvE,KAAK2kB,SAAS3X,KAAKzI,MAKtB,CACD7H,IAAK,iBACLT,MAAO,WACL,OAAO+D,KAAK2kB,WAIb,CACDjoB,IAAK,WACLT,MAAO,WACL,MAAO,GAAGuI,OAAOxE,KAAKyC,EAAG,KAAK+B,OAAOxE,KAAKoC,EAAG,KAAKoC,OAAOxE,KAAKkK,MAAO,KAAK1F,OAAOxE,KAAKmK,YAInFsa,EA9CT,GCKIG,GAEJ,WACE,SAASA,IACP,IAAIC,EAAc3mB,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAXlE,KAaf6F,EAAAA,EAAAA,GAAgB/D,KAAM4kB,GAEtB5kB,KAAK8kB,aAAeD,EACpB7kB,KAAK+kB,cAAgB,GACrB/kB,KAAKglB,UAAY,GA2GnB,OAnGA5gB,EAAAA,EAAAA,GAAawgB,EAAgB,CAAC,CAC5BloB,IAAK,iBACLT,MAAO,SAAwB0G,GAC7B,IAAIwH,EAASxH,EAAKwH,OACdD,EAAQvH,EAAKuH,MACbzH,EAAIE,EAAKF,EACTL,EAAIO,EAAKP,EACTmG,EAAU,GAYd,OAXAvI,KAAKilB,YAAY,CACf9a,OAAQA,EACRD,MAAOA,EACPzH,EAAGA,EACHL,EAAGA,IACF+K,SAAQ,SAAU+X,GACnB,OAAOA,EAAQC,iBAAiBhY,SAAQ,SAAU5I,GAChDgE,EAAQhE,GAASA,QAIdzI,OAAO4D,KAAK6I,GAAS6c,KAAI,SAAU7gB,GACxC,OAAOgE,EAAQhE,QAKlB,CACD7H,IAAK,kBACLT,MAAO,SAAyBoI,GAC9B,IAAIE,EAAQF,EAAME,MAClB,OAAOvE,KAAK+kB,cAAcxgB,KAI3B,CACD7H,IAAK,cACLT,MAAO,SAAqB8I,GAW1B,IAVA,IAAIoF,EAASpF,EAAMoF,OACfD,EAAQnF,EAAMmF,MACdzH,EAAIsC,EAAMtC,EACVL,EAAI2C,EAAM3C,EACVijB,EAAgB3f,KAAKY,MAAM7D,EAAIzC,KAAK8kB,cACpCQ,EAAe5f,KAAKY,OAAO7D,EAAIyH,EAAQ,GAAKlK,KAAK8kB,cACjDS,EAAgB7f,KAAKY,MAAMlE,EAAIpC,KAAK8kB,cACpCU,EAAe9f,KAAKY,OAAOlE,EAAI+H,EAAS,GAAKnK,KAAK8kB,cAClDW,EAAW,GAENC,EAAWL,EAAeK,GAAYJ,EAAcI,IAC3D,IAAK,IAAIC,EAAWJ,EAAeI,GAAYH,EAAcG,IAAY,CACvE,IAAIjpB,EAAM,GAAG8H,OAAOkhB,EAAU,KAAKlhB,OAAOmhB,GAErC3lB,KAAKglB,UAAUtoB,KAClBsD,KAAKglB,UAAUtoB,GAAO,IAAI+nB,GAAQ,CAChCta,OAAQnK,KAAK8kB,aACb5a,MAAOlK,KAAK8kB,aACZriB,EAAGijB,EAAW1lB,KAAK8kB,aACnB1iB,EAAGujB,EAAW3lB,KAAK8kB,gBAIvBW,EAASzY,KAAKhN,KAAKglB,UAAUtoB,IAIjC,OAAO+oB,IAIR,CACD/oB,IAAK,uBACLT,MAAO,WACL,OAAOH,OAAO4D,KAAKM,KAAKglB,WAAW7mB,SAIpC,CACDzB,IAAK,WACLT,MAAO,WACL,IAAIwR,EAAQzN,KAEZ,OAAOlE,OAAO4D,KAAKM,KAAKglB,WAAWI,KAAI,SAAU7gB,GAC/C,OAAOkJ,EAAMuX,UAAUzgB,GAAOqhB,gBAKjC,CACDlpB,IAAK,eACLT,MAAO,SAAsB6L,GAC3B,IAAI+d,EAAgB/d,EAAM+d,cACtBthB,EAAQuD,EAAMvD,MAClBvE,KAAK+kB,cAAcxgB,GAASshB,EAC5B7lB,KAAKilB,YAAYY,GAAe1Y,SAAQ,SAAU+X,GAChD,OAAOA,EAAQY,aAAa,CAC1BvhB,MAAOA,WAMRqgB,EAnHT,GCNe,SAAShd,GAAyBjF,GAC/C,IAAIojB,EAAapjB,EAAKsC,MAClBA,OAAuB,IAAf8gB,EAAwB,OAASA,EACzCC,EAAarjB,EAAKqjB,WAClBnjB,EAAWF,EAAKE,SAChBqC,EAAgBvC,EAAKuC,cACrBC,EAAgBxC,EAAKwC,cACrBK,EAAYwgB,EACZvgB,EAAYD,EAAYN,EAAgBrC,EAE5C,OAAQoC,GACN,IAAK,QACH,OAAOO,EAET,IAAK,MACH,OAAOC,EAET,IAAK,SACH,OAAOD,GAAaN,EAAgBrC,GAAY,EAElD,QACE,OAAO6C,KAAKC,IAAIF,EAAWC,KAAKE,IAAIJ,EAAWL,KCfrD,IAAI8gB,GAEJ,SAAUzY,GAGR,SAASyY,EAAW9lB,EAAO+lB,GACzB,IAAIzY,EAWJ,OATA1J,EAAAA,EAAAA,GAAgB/D,KAAMimB,IAEtBxY,GAAQC,EAAAA,EAAAA,GAA2B1N,MAAM2N,EAAAA,EAAAA,GAAgBsY,GAAYppB,KAAKmD,KAAMG,EAAO+lB,KACjFnB,cAAgB,GACtBtX,EAAM0Y,yBAA2B,GAEjC1Y,EAAMuF,WAAa,GACnBvF,EAAM2Y,mBAAqB3Y,EAAM2Y,mBAAmB5lB,MAAKoN,EAAAA,EAAAA,GAAuBH,IAChFA,EAAM4Y,sBAAwB5Y,EAAM4Y,sBAAsB7lB,MAAKoN,EAAAA,EAAAA,GAAuBH,IAC/EA,EA6JT,OA3KA0D,EAAAA,EAAAA,GAAU8U,EAAYzY,IAiBtBpJ,EAAAA,EAAAA,GAAa6hB,EAAY,CAAC,CACxBvpB,IAAK,cACLT,MAAO,gBACwBmC,IAAzB4B,KAAKsmB,iBACPtmB,KAAKsmB,gBAAgBrT,gBAKxB,CACDvW,IAAK,iCACLT,MAAO,WACL+D,KAAKgT,WAAa,GAElBhT,KAAKsmB,gBAAgBC,mCAItB,CACD7pB,IAAK,SACLT,MAAO,WACL,IAAIkE,GAAQuV,EAAAA,EAAAA,SAAS,GAAI1V,KAAKG,OAE9B,OAAO7D,EAAAA,cAAoBkmB,IAAgB9M,EAAAA,EAAAA,SAAS,CAClD+M,kBAAmBziB,KACnBkjB,kBAAmBljB,KAAKomB,mBACxBlX,IAAKlP,KAAKqmB,uBACTlmB,MAIJ,CACDzD,IAAK,+BACLT,MAAO,WACL,IAAI+V,EAAchS,KAAKG,MAKnBqmB,EC5EK,SAAsC7jB,GASnD,IARA,IAAIC,EAAYD,EAAKC,UACjB6jB,EAA4B9jB,EAAK8jB,0BACjC5B,EAAcliB,EAAKkiB,YACnB6B,EAAe,GACfC,EAAiB,IAAI/B,GAAeC,GACpC1a,EAAS,EACTD,EAAQ,EAEH3F,EAAQ,EAAGA,EAAQ3B,EAAW2B,IAAS,CAC9C,IAAIshB,EAAgBY,EAA0B,CAC5CliB,MAAOA,IAGT,GAA4B,MAAxBshB,EAAc1b,QAAkBvF,MAAMihB,EAAc1b,SAAkC,MAAvB0b,EAAc3b,OAAiBtF,MAAMihB,EAAc3b,QAA6B,MAAnB2b,EAAcpjB,GAAamC,MAAMihB,EAAcpjB,IAAyB,MAAnBojB,EAAczjB,GAAawC,MAAMihB,EAAczjB,GAClO,MAAMlB,MAAM,sCAAsCsD,OAAOD,EAAO,iBAAiBC,OAAOqhB,EAAcpjB,EAAG,QAAQ+B,OAAOqhB,EAAczjB,EAAG,YAAYoC,OAAOqhB,EAAc3b,MAAO,aAAa1F,OAAOqhB,EAAc1b,SAGrNA,EAASzE,KAAKC,IAAIwE,EAAQ0b,EAAczjB,EAAIyjB,EAAc1b,QAC1DD,EAAQxE,KAAKC,IAAIuE,EAAO2b,EAAcpjB,EAAIojB,EAAc3b,OACxDwc,EAAaniB,GAASshB,EACtBc,EAAeC,aAAa,CAC1Bf,cAAeA,EACfthB,MAAOA,IAIX,MAAO,CACLmiB,aAAcA,EACdvc,OAAQA,EACRwc,eAAgBA,EAChBzc,MAAOA,GD6CM2c,CAA8B,CACvCjkB,UALcoP,EAAYpP,UAM1B6jB,0BAL8BzU,EAAYyU,0BAM1C5B,YALgB7S,EAAY6S,cAQ9B7kB,KAAK+kB,cAAgByB,EAAKE,aAC1B1mB,KAAK8mB,gBAAkBN,EAAKG,eAC5B3mB,KAAK+mB,QAAUP,EAAKrc,OACpBnK,KAAKgnB,OAASR,EAAKtc,QAMpB,CACDxN,IAAK,yBACLT,MAAO,WACL,OAAO+D,KAAKmmB,2BAMb,CACDzpB,IAAK,2BACLT,MAAO,SAAkC0G,GACvC,IAAIsC,EAAQtC,EAAKsC,MACb8d,EAAYpgB,EAAKogB,UACjB5Y,EAASxH,EAAKwH,OACdyG,EAAajO,EAAKiO,WAClBC,EAAYlO,EAAKkO,UACjB3G,EAAQvH,EAAKuH,MACbtH,EAAY5C,KAAKG,MAAMyC,UAE3B,GAAImgB,GAAa,GAAKA,EAAYngB,EAAW,CAC3C,IAAI8jB,EAAe1mB,KAAK+kB,cAAchC,GACtCnS,EAAahJ,GAAyB,CACpC3C,MAAOA,EACP+gB,WAAYU,EAAajkB,EACzBI,SAAU6jB,EAAaxc,MACvBhF,cAAegF,EACf/E,cAAeyL,EACfxL,YAAa2d,IAEflS,EAAYjJ,GAAyB,CACnC3C,MAAOA,EACP+gB,WAAYU,EAAatkB,EACzBS,SAAU6jB,EAAavc,OACvBjF,cAAeiF,EACfhF,cAAe0L,EACfzL,YAAa2d,IAIjB,MAAO,CACLnS,WAAYA,EACZC,UAAWA,KAGd,CACDnU,IAAK,eACLT,MAAO,WACL,MAAO,CACLkO,OAAQnK,KAAK+mB,QACb7c,MAAOlK,KAAKgnB,UAGf,CACDtqB,IAAK,gBACLT,MAAO,SAAuBoI,GAC5B,IAAIuP,EAAS5T,KAETmK,EAAS9F,EAAM8F,OACf2D,EAAczJ,EAAMyJ,YACpB5D,EAAQ7F,EAAM6F,MACdzH,EAAI4B,EAAM5B,EACVL,EAAIiC,EAAMjC,EACVqQ,EAAezS,KAAKG,MACpB8mB,EAAoBxU,EAAawU,kBACjC/Q,EAAezD,EAAayD,aAQhC,OANAlW,KAAKmmB,yBAA2BnmB,KAAK8mB,gBAAgB3B,eAAe,CAClEhb,OAAQA,EACRD,MAAOA,EACPzH,EAAGA,EACHL,EAAGA,IAEE6kB,EAAkB,CACvBxP,UAAWzX,KAAKgT,WAChBkD,aAAcA,EACduQ,0BAA2B,SAAmC1hB,GAC5D,IAAIR,EAAQQ,EAAMR,MAClB,OAAOqP,EAAOkT,gBAAgBI,gBAAgB,CAC5C3iB,MAAOA,KAGXgE,QAASvI,KAAKmmB,yBACdrY,YAAaA,MAGhB,CACDpR,IAAK,qBACLT,MAAO,SAA4B6R,GAC5BA,IACH9N,KAAKgT,WAAa,MAGrB,CACDtW,IAAK,wBACLT,MAAO,SAA+BiT,GACpClP,KAAKsmB,gBAAkBpX,MAIpB+W,EA5KT,CA6KE3pB,EAAAA,gBAEF0H,EAAAA,EAAAA,GAAgBiiB,GAAY,eAAgB,CAC1C,aAAc,OACdgB,kBAwCF,SAAkCnf,GAChC,IAAI2P,EAAY3P,EAAM2P,UAClBvB,EAAepO,EAAMoO,aACrBuQ,EAA4B3e,EAAM2e,0BAClCle,EAAUT,EAAMS,QAChBuF,EAAchG,EAAMgG,YACxB,OAAOvF,EAAQ6c,KAAI,SAAU7gB,GAC3B,IAAImiB,EAAeD,EAA0B,CAC3CliB,MAAOA,IAEL4iB,EAAoB,CACtB5iB,MAAOA,EACPuJ,YAAaA,EACbpR,IAAK6H,EACL5G,MAAO,CACLwM,OAAQuc,EAAavc,OACrB0P,KAAM6M,EAAajkB,EACnBuH,SAAU,WACVC,IAAKyc,EAAatkB,EAClB8H,MAAOwc,EAAaxc,QAOxB,OAAI4D,GACIvJ,KAASkT,IACbA,EAAUlT,GAAS2R,EAAaiR,IAG3B1P,EAAUlT,IAEV2R,EAAaiR,MAErBva,QAAO,SAAUmN,GAClB,QAASA,QAxEbkM,GAAWzB,UAkCP,IE7NJ,SAAUhX,GAGR,SAAS4Z,EAAYjnB,EAAO+lB,GAC1B,IAAIzY,EAMJ,OAJA1J,EAAAA,EAAAA,GAAgB/D,KAAMonB,IAEtB3Z,GAAQC,EAAAA,EAAAA,GAA2B1N,MAAM2N,EAAAA,EAAAA,GAAgByZ,GAAavqB,KAAKmD,KAAMG,EAAO+lB,KAClFpE,eAAiBrU,EAAMqU,eAAethB,MAAKoN,EAAAA,EAAAA,GAAuBH,IACjEA,EA0DT,OAnEA0D,EAAAA,EAAAA,GAAUiW,EAAa5Z,IAYvBpJ,EAAAA,EAAAA,GAAagjB,EAAa,CAAC,CACzB1qB,IAAK,qBACLT,MAAO,SAA4B0E,GACjC,IAAIqR,EAAchS,KAAKG,MACnBknB,EAAiBrV,EAAYqV,eAC7BC,EAAiBtV,EAAYsV,eAC7B/X,EAAcyC,EAAYzC,YAC1BrF,EAAQ8H,EAAY9H,MAEpBmd,IAAmB1mB,EAAU0mB,gBAAkBC,IAAmB3mB,EAAU2mB,gBAAkB/X,IAAgB5O,EAAU4O,aAAerF,IAAUvJ,EAAUuJ,OACzJlK,KAAKunB,kBACPvnB,KAAKunB,iBAAiBzP,sBAI3B,CACDpb,IAAK,SACLT,MAAO,WACL,IAAIwW,EAAezS,KAAKG,MACpB4a,EAAWtI,EAAasI,SACxBsM,EAAiB5U,EAAa4U,eAC9BC,EAAiB7U,EAAa6U,eAC9B/X,EAAckD,EAAalD,YAC3BrF,EAAQuI,EAAavI,MACrBsd,EAAqBF,GAAkB,EACvCG,EAAqBJ,EAAiB3hB,KAAKE,IAAIyhB,EAAgBnd,GAASA,EACxEuF,EAAcvF,EAAQqF,EAK1B,OAJAE,EAAc/J,KAAKC,IAAI6hB,EAAoB/X,GAC3CA,EAAc/J,KAAKE,IAAI6hB,EAAoBhY,GAC3CA,EAAc/J,KAAKY,MAAMmJ,GAElBsL,EAAS,CACd2M,cAFkBhiB,KAAKE,IAAIsE,EAAOuF,EAAcF,GAGhDE,YAAaA,EACbkY,eAAgB,WACd,OAAOlY,GAEToS,cAAe7hB,KAAK8hB,mBAGvB,CACDplB,IAAK,iBACLT,MAAO,SAAwB2rB,GAC7B,GAAIA,GAA4C,oBAA5BA,EAAM9P,kBACxB,MAAM5W,MAAM,iFAGdlB,KAAKunB,iBAAmBK,EAEpB5nB,KAAKunB,kBACPvnB,KAAKunB,iBAAiBzP,wBAKrBsP,EApET,CAqEE9qB,EAAAA,gBAGUkoB,UAuBR,GC5GJ,I,WCgBIqD,GAEJ,SAAUra,GAGR,SAASqa,EAAe1nB,EAAO+lB,GAC7B,IAAIzY,EAQJ,OANA1J,EAAAA,EAAAA,GAAgB/D,KAAM6nB,IAEtBpa,GAAQC,EAAAA,EAAAA,GAA2B1N,MAAM2N,EAAAA,EAAAA,GAAgBka,GAAgBhrB,KAAKmD,KAAMG,EAAO+lB,KACrF4B,sBAAwB1f,IAC9BqF,EAAMsa,gBAAkBta,EAAMsa,gBAAgBvnB,MAAKoN,EAAAA,EAAAA,GAAuBH,IAC1EA,EAAMqU,eAAiBrU,EAAMqU,eAAethB,MAAKoN,EAAAA,EAAAA,GAAuBH,IACjEA,EAmGT,OA9GA0D,EAAAA,EAAAA,GAAU0W,EAAgBra,IAc1BpJ,EAAAA,EAAAA,GAAayjB,EAAgB,CAAC,CAC5BnrB,IAAK,yBACLT,MAAO,SAAgC+rB,GACrChoB,KAAK8nB,sBAAwB1f,IAEzB4f,GACFhoB,KAAKioB,SAASjoB,KAAKkoB,wBAAyBloB,KAAKmoB,0BAGpD,CACDzrB,IAAK,SACLT,MAAO,WAEL,OAAO8e,EADQ/a,KAAKG,MAAM4a,UACV,CACdqN,eAAgBpoB,KAAK+nB,gBACrBlG,cAAe7hB,KAAK8hB,mBAGvB,CACDplB,IAAK,sBACLT,MAAO,SAA6BosB,GAClC,IAAIzU,EAAS5T,KAETsoB,EAAetoB,KAAKG,MAAMmoB,aAC9BD,EAAelb,SAAQ,SAAUob,GAC/B,IAAIC,EAAUF,EAAaC,GAEvBC,GACFA,EAAQpc,MAAK,YA8HhB,SAAwBtE,GAC7B,IAAI2gB,EAAyB3gB,EAAM2gB,uBAC/BC,EAAwB5gB,EAAM4gB,sBAC9BzR,EAAanP,EAAMmP,WACnBC,EAAYpP,EAAMoP,UACtB,QAASD,EAAayR,GAAyBxR,EAAYuR,IAhI7CE,CAAe,CACjBF,uBAAwB7U,EAAOsU,wBAC/BQ,sBAAuB9U,EAAOuU,uBAC9BlR,WAAYsR,EAActR,WAC1BC,UAAWqR,EAAcrR,aAErBtD,EAAO2T,kBAmNlB,SAA8CqB,GACnD,IAAIC,EAAe3qB,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EACnF4qB,EAAuD,oBAAhCF,EAAU9Q,kBAAmC8Q,EAAU9Q,kBAAoB8Q,EAAUG,oBAE5GD,EACFA,EAAcjsB,KAAK+rB,EAAWC,GAE9BD,EAAU3V,cAzNE+V,CAAqCpV,EAAO2T,iBAAkB3T,EAAOsU,iCAOhF,CACDxrB,IAAK,kBACLT,MAAO,SAAyB0G,GAC9B,IAAIsU,EAAatU,EAAKsU,WAClBC,EAAYvU,EAAKuU,UACrBlX,KAAKkoB,wBAA0BjR,EAC/BjX,KAAKmoB,uBAAyBjR,EAE9BlX,KAAKioB,SAAShR,EAAYC,KAE3B,CACDxa,IAAK,WACLT,MAAO,SAAkBgb,EAAYC,GACnC,IAAI7S,EACA0T,EAAS/X,KAETgS,EAAchS,KAAKG,MACnB8oB,EAAcjX,EAAYiX,YAC1BC,EAAmBlX,EAAYkX,iBAC/BtZ,EAAWoC,EAAYpC,SACvBuZ,EAAYnX,EAAYmX,UACxBd,EAmGH,SAA+BpgB,GAUpC,IATA,IAAIghB,EAAchhB,EAAMghB,YACpBC,EAAmBjhB,EAAMihB,iBACzBtZ,EAAW3H,EAAM2H,SACjBqH,EAAahP,EAAMgP,WACnBC,EAAYjP,EAAMiP,UAClBmR,EAAiB,GACjBe,EAAkB,KAClBC,EAAiB,KAEZ9kB,EAAQ0S,EAAY1S,GAAS2S,EAAW3S,IAAS,CAC3C0kB,EAAY,CACvB1kB,MAAOA,IASqB,OAAnB8kB,IACThB,EAAerb,KAAK,CAClBiK,WAAYmS,EACZlS,UAAWmS,IAEbD,EAAkBC,EAAiB,OAVnCA,EAAiB9kB,EAEO,OAApB6kB,IACFA,EAAkB7kB,IAaxB,GAAuB,OAAnB8kB,EAAyB,CAG3B,IAFA,IAAIC,EAAqB5jB,KAAKE,IAAIF,KAAKC,IAAI0jB,EAAgBD,EAAkBF,EAAmB,GAAItZ,EAAW,GAEtG2Z,EAASF,EAAiB,EAAGE,GAAUD,IACzCL,EAAY,CACf1kB,MAAOglB,IAFyDA,IAIhEF,EAAiBE,EAMrBlB,EAAerb,KAAK,CAClBiK,WAAYmS,EACZlS,UAAWmS,IAMf,GAAIhB,EAAelqB,OAGjB,IAFA,IAAIqrB,EAAqBnB,EAAe,GAEjCmB,EAAmBtS,UAAYsS,EAAmBvS,WAAa,EAAIiS,GAAoBM,EAAmBvS,WAAa,GAAG,CAC/H,IAAIwS,EAAUD,EAAmBvS,WAAa,EAE9C,GAAKgS,EAAY,CACf1kB,MAAOklB,IAIP,MAFAD,EAAmBvS,WAAawS,EAOtC,OAAOpB,EAxKkBqB,CAAsB,CACzCT,YAAaA,EACbC,iBAAkBA,EAClBtZ,SAAUA,EACVqH,WAAYvR,KAAKC,IAAI,EAAGsR,EAAakS,GACrCjS,UAAWxR,KAAKE,IAAIgK,EAAW,EAAGsH,EAAYiS,KAG5CQ,GAA0BtlB,EAAQ,IAAIG,OAAOyI,MAAM5I,GAAOulB,EAAAA,GAAAA,GAAmBvB,EAAejD,KAAI,SAAUrgB,GAG5G,MAAO,CAFUA,EAAMkS,WACPlS,EAAMmS,gBAIxBlX,KAAK8nB,sBAAsB,CACzBvqB,SAAU,WACRwa,EAAO8R,oBAAoBxB,IAE7B9f,QAAS,CACPohB,uBAAwBA,OAI7B,CACDjtB,IAAK,iBACLT,MAAO,SAAwB6tB,GAC7B9pB,KAAKunB,iBAAmBuC,MAIrBjC,EA/GT,CAgHEvrB,EAAAA,gBAMF0H,EAAAA,EAAAA,GAAgB6jB,GAAgB,eAAgB,CAC9CqB,iBAAkB,GAClBtZ,SAAU,EACVuZ,UAAW,KAIbtB,GAAerD,UA2CX,GC1LJ,ICQI9Z,GAAQC,GAcRof,IAAQpf,GAAQD,GAEpB,SAAU8C,GAGR,SAASuc,IACP,IAAI7P,EAEAzM,GAEJ1J,EAAAA,EAAAA,GAAgB/D,KAAM+pB,GAEtB,IAAK,IAAI5P,EAAOjc,UAAUC,OAAQic,EAAO,IAAI9X,MAAM6X,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQnc,UAAUmc,GAoEzB,OAjEA5M,GAAQC,EAAAA,EAAAA,GAA2B1N,MAAOka,GAAmBvM,EAAAA,EAAAA,GAAgBoc,IAAOltB,KAAKoQ,MAAMiN,EAAkB,CAACla,MAAMwE,OAAO4V,MAE/HpW,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,YAAQ,IAEvDzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,iBAAiB,SAAU9K,GACxE,IAAI+U,EAAS/U,EAAK+U,OACdjG,EAAW9O,EAAK8O,SAChB9T,EAAQgF,EAAKhF,MACbmQ,EAAcnL,EAAKmL,YACnB8L,EAAYjX,EAAKiX,UACjBld,EAAMiG,EAAKjG,IACXstB,EAAcvc,EAAMtN,MAAM6pB,YAM1BC,EAAkBnuB,OAAOgR,yBAAyBnP,EAAO,SAQ7D,OANIssB,GAAmBA,EAAgBC,WAGrCvsB,EAAMuM,MAAQ,QAGT8f,EAAY,CACjBzlB,MAAOkN,EACP9T,MAAOA,EACPmQ,YAAaA,EACb8L,UAAWA,EACXld,IAAKA,EACLgb,OAAQA,QAIZ1T,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,WAAW,SAAUyB,GAClEzB,EAAMF,KAAO2B,MAGflL,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,aAAa,SAAUpJ,GACpE,IAAI6T,EAAe7T,EAAM6T,aACrBC,EAAe9T,EAAM8T,aACrBtH,EAAYxM,EAAMwM,WAEtBgF,EADepI,EAAMtN,MAAM0V,UAClB,CACPqC,aAAcA,EACdC,aAAcA,EACdtH,UAAWA,QAIf7M,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,sBAAsB,SAAU1I,GAC7E,IAAI2J,EAAwB3J,EAAM2J,sBAC9BE,EAAuB7J,EAAM6J,qBAC7BE,EAAgB/J,EAAM+J,cACtBE,EAAejK,EAAMiK,cAEzBoZ,EADqB3a,EAAMtN,MAAMioB,gBAClB,CACbhR,mBAAoB1I,EACpB2I,kBAAmBzI,EACnBqI,WAAYnI,EACZoI,UAAWlI,OAIRvB,EA0IT,OAxNA0D,EAAAA,EAAAA,GAAU4Y,EAAMvc,IAiFhBpJ,EAAAA,EAAAA,GAAa2lB,EAAM,CAAC,CAClBrtB,IAAK,kBACLT,MAAO,WACD+D,KAAKuN,MACPvN,KAAKuN,KAAK0F,gBAKb,CACDvW,IAAK,kBACLT,MAAO,SAAyB6L,GAC9B,IAAIuJ,EAAYvJ,EAAMuJ,UAClB9M,EAAQuD,EAAMvD,MAElB,OAAIvE,KAAKuN,KACqBvN,KAAKuN,KAAK4c,iBAAiB,CACrD9Y,UAAWA,EACXI,SAAUlN,EACVgN,YAAa,IAEuBV,UAKjC,IAIR,CACDnU,IAAK,gCACLT,MAAO,SAAuCgM,GAC5C,IAAIsJ,EAActJ,EAAMsJ,YACpBE,EAAWxJ,EAAMwJ,SAEjBzR,KAAKuN,MACPvN,KAAKuN,KAAKgV,8BAA8B,CACtC9Q,SAAUA,EACVF,YAAaA,MAMlB,CACD7U,IAAK,iBACLT,MAAO,WACD+D,KAAKuN,MACPvN,KAAKuN,KAAK6c,oBAKb,CACD1tB,IAAK,oBACLT,MAAO,WACL,IAAIiM,EAAQhK,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC5EmsB,EAAoBniB,EAAMqJ,YAC1BA,OAAoC,IAAtB8Y,EAA+B,EAAIA,EACjDC,EAAiBpiB,EAAMuJ,SACvBA,OAA8B,IAAnB6Y,EAA4B,EAAIA,EAE3CtqB,KAAKuN,MACPvN,KAAKuN,KAAKuK,kBAAkB,CAC1BrG,SAAUA,EACVF,YAAaA,MAMlB,CACD7U,IAAK,sBACLT,MAAO,WACL,IAAIsI,EAAQrG,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAE5E8B,KAAKuN,MACPvN,KAAKuN,KAAKuK,kBAAkB,CAC1BrG,SAAUlN,EACVgN,YAAa,MAMlB,CACD7U,IAAK,mBACLT,MAAO,WACL,IAAI4U,EAAY3S,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAEhF8B,KAAKuN,MACPvN,KAAKuN,KAAKgd,iBAAiB,CACzB1Z,UAAWA,MAMhB,CACDnU,IAAK,cACLT,MAAO,WACL,IAAIsI,EAAQrG,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAE5E8B,KAAKuN,MACPvN,KAAKuN,KAAKqV,aAAa,CACrBrR,YAAa,EACbE,SAAUlN,MAIf,CACD7H,IAAK,SACLT,MAAO,WACL,IAAI+V,EAAchS,KAAKG,MACnBtC,EAAYmU,EAAYnU,UACxB2sB,EAAiBxY,EAAYwY,eAC7BrnB,EAAgB6O,EAAY7O,cAC5B+G,EAAQ8H,EAAY9H,MACpBugB,EAAa7U,EAAK,yBAA0B/X,GAChD,OAAOvB,EAAAA,cAAoBiR,GAAMmI,EAAAA,EAAAA,SAAS,GAAI1V,KAAKG,MAAO,CACxD8T,oBAAoB,EACpBiC,aAAclW,KAAK0qB,cACnB7sB,UAAW4sB,EACXhb,YAAavF,EACbqF,YAAa,EACb8E,kBAAmBmW,EACnB3U,SAAU7V,KAAK8V,UACf9H,kBAAmBhO,KAAKmb,mBACxBjM,IAAKlP,KAAK4gB,QACVpQ,YAAarN,SAKZ4mB,EAzNT,CA0NEztB,EAAAA,gBAAsB0H,EAAAA,EAAAA,GAAgB0G,GAAQ,YAAqD,MA8EjGC,KAEJ3G,EAAAA,EAAAA,GAAgB+lB,GAAM,eAAgB,CACpC9X,YAAY,EACZ+G,iBAAkB,GAClBnD,SAAU,aACV2U,eAAgB,WACd,OAAO,MAETpC,eAAgB,aAChB9R,sBAAuBqU,EACvBpU,iBAAkB,GAClBjN,kBAAmB,OACnBnG,eAAgB,EAChBxF,MAAO,K,cCxGT,QACEitB,GA5LF,SAA2BC,EAAGzoB,EAAG0oB,EAAGC,EAAGC,GACrC,MAAiB,oBAANF,EAnBb,SAAcD,EAAGE,EAAGC,EAAG5oB,EAAG0oB,GAGxB,IAFA,IAAIlrB,EAAIorB,EAAI,EAELD,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EAGdF,EAFID,EAAEI,GAED7oB,IAAM,GACbxC,EAAIqrB,EACJD,EAAIC,EAAI,GAERF,EAAIE,EAAI,EAIZ,OAAOrrB,EAKEsrB,CAAKL,OAAS,IAANE,EAAe,EAAQ,EAAJA,OAAa,IAANC,EAAeH,EAAE1sB,OAAS,EAAQ,EAAJ6sB,EAAO5oB,EAAG0oB,GAtCrF,SAAcD,EAAGE,EAAGC,EAAG5oB,GAGrB,IAFA,IAAIxC,EAAIorB,EAAI,EAELD,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EACVH,EAAEI,IAED7oB,GACPxC,EAAIqrB,EACJD,EAAIC,EAAI,GAERF,EAAIE,EAAI,EAIZ,OAAOrrB,EAyBEurB,CAAKN,OAAS,IAANC,EAAe,EAAQ,EAAJA,OAAa,IAANC,EAAeF,EAAE1sB,OAAS,EAAQ,EAAJ4sB,EAAO3oB,IAyLhFgpB,GAjJF,SAA2BP,EAAGzoB,EAAG0oB,EAAGC,EAAGC,GACrC,MAAiB,oBAANF,EAnBb,SAAcD,EAAGE,EAAGC,EAAG5oB,EAAG0oB,GAGxB,IAFA,IAAIlrB,EAAIorB,EAAI,EAELD,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EAGdF,EAFID,EAAEI,GAED7oB,GAAK,GACZxC,EAAIqrB,EACJD,EAAIC,EAAI,GAERF,EAAIE,EAAI,EAIZ,OAAOrrB,EAKEyrB,CAAKR,OAAS,IAANE,EAAe,EAAQ,EAAJA,OAAa,IAANC,EAAeH,EAAE1sB,OAAS,EAAQ,EAAJ6sB,EAAO5oB,EAAG0oB,GAtCrF,SAAcD,EAAGE,EAAGC,EAAG5oB,GAGrB,IAFA,IAAIxC,EAAIorB,EAAI,EAELD,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EACVH,EAAEI,GAEF7oB,GACNxC,EAAIqrB,EACJD,EAAIC,EAAI,GAERF,EAAIE,EAAI,EAIZ,OAAOrrB,EAyBE0rB,CAAKT,OAAS,IAANC,EAAe,EAAQ,EAAJA,OAAa,IAANC,EAAeF,EAAE1sB,OAAS,EAAQ,EAAJ4sB,EAAO3oB,IA8IhFmpB,GAtGF,SAA2BV,EAAGzoB,EAAG0oB,EAAGC,EAAGC,GACrC,MAAiB,oBAANF,EAnBb,SAAcD,EAAGE,EAAGC,EAAG5oB,EAAG0oB,GAGxB,IAFA,IAAIlrB,EAAImrB,EAAI,EAELA,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EAGdF,EAFID,EAAEI,GAED7oB,GAAK,GACZxC,EAAIqrB,EACJF,EAAIE,EAAI,GAERD,EAAIC,EAAI,EAIZ,OAAOrrB,EAKE4rB,CAAKX,OAAS,IAANE,EAAe,EAAQ,EAAJA,OAAa,IAANC,EAAeH,EAAE1sB,OAAS,EAAQ,EAAJ6sB,EAAO5oB,EAAG0oB,GAtCrF,SAAcD,EAAGE,EAAGC,EAAG5oB,GAGrB,IAFA,IAAIxC,EAAImrB,EAAI,EAELA,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EACVH,EAAEI,GAEF7oB,GACNxC,EAAIqrB,EACJF,EAAIE,EAAI,GAERD,EAAIC,EAAI,EAIZ,OAAOrrB,EAyBE6rB,CAAKZ,OAAS,IAANC,EAAe,EAAQ,EAAJA,OAAa,IAANC,EAAeF,EAAE1sB,OAAS,EAAQ,EAAJ4sB,EAAO3oB,IAmGhFspB,GA3DF,SAA2Bb,EAAGzoB,EAAG0oB,EAAGC,EAAGC,GACrC,MAAiB,oBAANF,EAnBb,SAAcD,EAAGE,EAAGC,EAAG5oB,EAAG0oB,GAGxB,IAFA,IAAIlrB,EAAImrB,EAAI,EAELA,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EAGdF,EAFID,EAAEI,GAED7oB,IAAM,GACbxC,EAAIqrB,EACJF,EAAIE,EAAI,GAERD,EAAIC,EAAI,EAIZ,OAAOrrB,EAKE+rB,CAAKd,OAAS,IAANE,EAAe,EAAQ,EAAJA,OAAa,IAANC,EAAeH,EAAE1sB,OAAS,EAAQ,EAAJ6sB,EAAO5oB,EAAG0oB,GAtCrF,SAAcD,EAAGE,EAAGC,EAAG5oB,GAGrB,IAFA,IAAIxC,EAAImrB,EAAI,EAELA,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EACVH,EAAEI,IAED7oB,GACPxC,EAAIqrB,EACJF,EAAIE,EAAI,GAERD,EAAIC,EAAI,EAIZ,OAAOrrB,EAyBEgsB,CAAKf,OAAS,IAANC,EAAe,EAAQ,EAAJA,OAAa,IAANC,EAAeF,EAAE1sB,OAAS,EAAQ,EAAJ4sB,EAAO3oB,IAwDhFypB,GAbF,SAA2BhB,EAAGzoB,EAAG0oB,EAAGC,EAAGC,GACrC,MAAiB,oBAANF,EArBb,SAAcD,EAAGE,EAAGC,EAAG5oB,EAAG0oB,GAGxB,KAAOC,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EAEdc,EAAIhB,EADAD,EAAEI,GACG7oB,GAEb,GAAU,IAAN0pB,EACF,OAAOb,EACEa,GAAK,EACdf,EAAIE,EAAI,EAERD,EAAIC,EAAI,EAIZ,OAAQ,EAKCc,CAAKlB,OAAS,IAANE,EAAe,EAAQ,EAAJA,OAAa,IAANC,EAAeH,EAAE1sB,OAAS,EAAQ,EAAJ6sB,EAAO5oB,EAAG0oB,GAzCrF,SAAcD,EAAGE,EAAGC,EAAG5oB,GAGrB,KAAO2oB,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EACdvoB,EAAIooB,EAAEI,GAEV,GAAIxoB,IAAML,EACR,OAAO6oB,EACExoB,GAAKL,EACd2oB,EAAIE,EAAI,EAERD,EAAIC,EAAI,EAIZ,OAAQ,EA2BCe,CAAKnB,OAAS,IAANC,EAAe,EAAQ,EAAJA,OAAa,IAANC,EAAeF,EAAE1sB,OAAS,EAAQ,EAAJ4sB,EAAO3oB,KCtNlF,SAAS6pB,GAAiBC,EAAKrS,EAAMuK,EAAO+H,EAAYC,GACtDpsB,KAAKksB,IAAMA,EACXlsB,KAAK6Z,KAAOA,EACZ7Z,KAAKokB,MAAQA,EACbpkB,KAAKmsB,WAAaA,EAClBnsB,KAAKosB,YAAcA,EACnBpsB,KAAKqsB,OAASxS,EAAOA,EAAKwS,MAAQ,IAAMjI,EAAQA,EAAMiI,MAAQ,GAAKF,EAAWhuB,OAGhF,IAAImuB,GAAQL,GAAiBtvB,UAE7B,SAAS4vB,GAAK1B,EAAG2B,GACf3B,EAAEqB,IAAMM,EAAEN,IACVrB,EAAEhR,KAAO2S,EAAE3S,KACXgR,EAAEzG,MAAQoI,EAAEpI,MACZyG,EAAEsB,WAAaK,EAAEL,WACjBtB,EAAEuB,YAAcI,EAAEJ,YAClBvB,EAAEwB,MAAQG,EAAEH,MAGd,SAASI,GAAQ1K,EAAM2K,GACrB,IAAIC,EAAQC,GAAmBF,GAC/B3K,EAAKmK,IAAMS,EAAMT,IACjBnK,EAAKlI,KAAO8S,EAAM9S,KAClBkI,EAAKqC,MAAQuI,EAAMvI,MACnBrC,EAAKoK,WAAaQ,EAAMR,WACxBpK,EAAKqK,YAAcO,EAAMP,YACzBrK,EAAKsK,MAAQM,EAAMN,MAGrB,SAASQ,GAAoB9K,EAAMxb,GACjC,IAAImmB,EAAY3K,EAAK2K,UAAU,IAC/BA,EAAU1f,KAAKzG,GACfkmB,GAAQ1K,EAAM2K,GAGhB,SAASI,GAAuB/K,EAAMxb,GACpC,IAAImmB,EAAY3K,EAAK2K,UAAU,IAC3BK,EAAML,EAAU7sB,QAAQ0G,GAE5B,OAAIwmB,EAAM,EA5CI,GAgDdL,EAAUxN,OAAO6N,EAAK,GACtBN,GAAQ1K,EAAM2K,GAhDF,GAkNd,SAASM,GAAgBC,EAAKC,EAAIC,GAChC,IAAK,IAAIvtB,EAAI,EAAGA,EAAIqtB,EAAI9uB,QAAU8uB,EAAIrtB,GAAG,IAAMstB,IAAMttB,EAAG,CACtD,IAAIwtB,EAAID,EAAGF,EAAIrtB,IAEf,GAAIwtB,EACF,OAAOA,GAKb,SAASC,GAAiBJ,EAAKK,EAAIH,GACjC,IAAK,IAAIvtB,EAAIqtB,EAAI9uB,OAAS,EAAGyB,GAAK,GAAKqtB,EAAIrtB,GAAG,IAAM0tB,IAAM1tB,EAAG,CAC3D,IAAIwtB,EAAID,EAAGF,EAAIrtB,IAEf,GAAIwtB,EACF,OAAOA,GAKb,SAASG,GAAYN,EAAKE,GACxB,IAAK,IAAIvtB,EAAI,EAAGA,EAAIqtB,EAAI9uB,SAAUyB,EAAG,CACnC,IAAIwtB,EAAID,EAAGF,EAAIrtB,IAEf,GAAIwtB,EACF,OAAOA,GAyDb,SAASI,GAAe3C,EAAG2B,GACzB,OAAO3B,EAAI2B,EAGb,SAASiB,GAAa5C,EAAG2B,GACvB,IAAIkB,EAAI7C,EAAE,GAAK2B,EAAE,GAEjB,OAAIkB,GAIG7C,EAAE,GAAK2B,EAAE,GAGlB,SAASmB,GAAW9C,EAAG2B,GACrB,IAAIkB,EAAI7C,EAAE,GAAK2B,EAAE,GAEjB,OAAIkB,GAIG7C,EAAE,GAAK2B,EAAE,GAGlB,SAASI,GAAmBF,GAC1B,GAAyB,IAArBA,EAAUvuB,OACZ,OAAO,KAKT,IAFA,IAAIyvB,EAAM,GAEDhuB,EAAI,EAAGA,EAAI8sB,EAAUvuB,SAAUyB,EACtCguB,EAAI5gB,KAAK0f,EAAU9sB,GAAG,GAAI8sB,EAAU9sB,GAAG,IAGzCguB,EAAIC,KAAKL,IACT,IAAItB,EAAM0B,EAAIA,EAAIzvB,QAAU,GACxB2vB,EAAgB,GAChBC,EAAiB,GACjBC,EAAkB,GAEtB,IAASpuB,EAAI,EAAGA,EAAI8sB,EAAUvuB,SAAUyB,EAAG,CACzC,IAAIquB,EAAIvB,EAAU9sB,GAEdquB,EAAE,GAAK/B,EACT4B,EAAc9gB,KAAKihB,GACV/B,EAAM+B,EAAE,GACjBF,EAAe/gB,KAAKihB,GAEpBD,EAAgBhhB,KAAKihB,GAKzB,IAAI9B,EAAa6B,EACb5B,EAAc4B,EAAgBE,QAGlC,OAFA/B,EAAW0B,KAAKJ,IAChBrB,EAAYyB,KAAKF,IACV,IAAI1B,GAAiBC,EAAKU,GAAmBkB,GAAgBlB,GAAmBmB,GAAiB5B,EAAYC,GAItH,SAAS+B,GAAaC,GACpBpuB,KAAKouB,KAAOA,EA/Sd9B,GAAMI,UAAY,SAAU2B,GAW1B,OAVAA,EAAOrhB,KAAKC,MAAMohB,EAAQruB,KAAKmsB,YAE3BnsB,KAAK6Z,MACP7Z,KAAK6Z,KAAK6S,UAAU2B,GAGlBruB,KAAKokB,OACPpkB,KAAKokB,MAAMsI,UAAU2B,GAGhBA,GAGT/B,GAAMgC,OAAS,SAAU/nB,GACvB,IAAIgoB,EAASvuB,KAAKqsB,MAAQrsB,KAAKmsB,WAAWhuB,OAG1C,GAFA6B,KAAKqsB,OAAS,EAEV9lB,EAAS,GAAKvG,KAAKksB,IACjBlsB,KAAK6Z,KACH,GAAK7Z,KAAK6Z,KAAKwS,MAAQ,GAAK,GAAKkC,EAAS,GAC5C1B,GAAoB7sB,KAAMuG,GAE1BvG,KAAK6Z,KAAKyU,OAAO/nB,GAGnBvG,KAAK6Z,KAAO+S,GAAmB,CAACrmB,SAE7B,GAAIA,EAAS,GAAKvG,KAAKksB,IACxBlsB,KAAKokB,MACH,GAAKpkB,KAAKokB,MAAMiI,MAAQ,GAAK,GAAKkC,EAAS,GAC7C1B,GAAoB7sB,KAAMuG,GAE1BvG,KAAKokB,MAAMkK,OAAO/nB,GAGpBvG,KAAKokB,MAAQwI,GAAmB,CAACrmB,QAE9B,CACL,IAAIwkB,EAAIyD,GAAAA,GAAUxuB,KAAKmsB,WAAY5lB,EAAUknB,IACzCL,EAAIoB,GAAAA,GAAUxuB,KAAKosB,YAAa7lB,EAAUonB,IAC9C3tB,KAAKmsB,WAAWjN,OAAO6L,EAAG,EAAGxkB,GAC7BvG,KAAKosB,YAAYlN,OAAOkO,EAAG,EAAG7mB,KAIlC+lB,GAAMmC,OAAS,SAAUloB,GACvB,IAAIgoB,EAASvuB,KAAKqsB,MAAQrsB,KAAKmsB,WAE/B,GAAI5lB,EAAS,GAAKvG,KAAKksB,IACrB,OAAKlsB,KAAK6Z,KAMN,GAFK7Z,KAAKokB,MAAQpkB,KAAKokB,MAAMiI,MAAQ,GAE5B,GAAKkC,EAAS,GAClBzB,GAAuB9sB,KAAMuG,GA5G9B,KA+GJ6mB,EAAIptB,KAAK6Z,KAAK4U,OAAOloB,KAGvBvG,KAAK6Z,KAAO,KACZ7Z,KAAKqsB,OAAS,EApHN,QAsHCe,IACTptB,KAAKqsB,OAAS,GAGTe,GA3HK,EA4HP,GAAI7mB,EAAS,GAAKvG,KAAKksB,IAC5B,OAAKlsB,KAAKokB,MAMN,GAFKpkB,KAAK6Z,KAAO7Z,KAAK6Z,KAAKwS,MAAQ,GAE1B,GAAKkC,EAAS,GAClBzB,GAAuB9sB,KAAMuG,GAlI9B,KAqIJ6mB,EAAIptB,KAAKokB,MAAMqK,OAAOloB,KAGxBvG,KAAKokB,MAAQ,KACbpkB,KAAKqsB,OAAS,EA1IN,QA4ICe,IACTptB,KAAKqsB,OAAS,GAGTe,GAjJK,EAmJZ,GAAmB,IAAfptB,KAAKqsB,MACP,OAAIrsB,KAAKmsB,WAAW,KAAO5lB,EAlJrB,EAFI,EA2JZ,GAA+B,IAA3BvG,KAAKmsB,WAAWhuB,QAAgB6B,KAAKmsB,WAAW,KAAO5lB,EAAU,CACnE,GAAIvG,KAAK6Z,MAAQ7Z,KAAKokB,MAAO,CAI3B,IAHA,IAAI0H,EAAI9rB,KACJ0uB,EAAI1uB,KAAK6Z,KAEN6U,EAAEtK,OACP0H,EAAI4C,EACJA,EAAIA,EAAEtK,MAGR,GAAI0H,IAAM9rB,KACR0uB,EAAEtK,MAAQpkB,KAAKokB,UACV,CACL,IAAI2G,EAAI/qB,KAAK6Z,KACTuT,EAAIptB,KAAKokB,MACb0H,EAAEO,OAASqC,EAAErC,MACbP,EAAE1H,MAAQsK,EAAE7U,KACZ6U,EAAE7U,KAAOkR,EACT2D,EAAEtK,MAAQgJ,EAGZb,GAAKvsB,KAAM0uB,GACX1uB,KAAKqsB,OAASrsB,KAAK6Z,KAAO7Z,KAAK6Z,KAAKwS,MAAQ,IAAMrsB,KAAKokB,MAAQpkB,KAAKokB,MAAMiI,MAAQ,GAAKrsB,KAAKmsB,WAAWhuB,YAC9F6B,KAAK6Z,KACd0S,GAAKvsB,KAAMA,KAAK6Z,MAEhB0S,GAAKvsB,KAAMA,KAAKokB,OAGlB,OAvLQ,EA0LV,IAAS2G,EAAIyD,GAAAA,GAAUxuB,KAAKmsB,WAAY5lB,EAAUknB,IAAe1C,EAAI/qB,KAAKmsB,WAAWhuB,QAC/E6B,KAAKmsB,WAAWpB,GAAG,KAAOxkB,EAAS,KADsDwkB,EAK7F,GAAI/qB,KAAKmsB,WAAWpB,KAAOxkB,EAAU,CACnCvG,KAAKqsB,OAAS,EACdrsB,KAAKmsB,WAAWjN,OAAO6L,EAAG,GAE1B,IAASqC,EAAIoB,GAAAA,GAAUxuB,KAAKosB,YAAa7lB,EAAUonB,IAAaP,EAAIptB,KAAKosB,YAAYjuB,QAC/E6B,KAAKosB,YAAYgB,GAAG,KAAO7mB,EAAS,KADqD6mB,EAGtF,GAAIptB,KAAKosB,YAAYgB,KAAO7mB,EAEjC,OADAvG,KAAKosB,YAAYlN,OAAOkO,EAAG,GAvMzB,EA8MV,OA/MY,GAiPhBd,GAAMqC,WAAa,SAAUlsB,EAAG0qB,GAC9B,GAAI1qB,EAAIzC,KAAKksB,IAAK,CAChB,GAAIlsB,KAAK6Z,KAGP,GAFIuT,EAAIptB,KAAK6Z,KAAK8U,WAAWlsB,EAAG0qB,GAG9B,OAAOC,EAIX,OAAOJ,GAAgBhtB,KAAKmsB,WAAY1pB,EAAG0qB,GACtC,GAAI1qB,EAAIzC,KAAKksB,IAAK,CAErB,IAAIkB,EADN,GAAIptB,KAAKokB,MAGP,GAFIgJ,EAAIptB,KAAKokB,MAAMuK,WAAWlsB,EAAG0qB,GAG/B,OAAOC,EAIX,OAAOC,GAAiBrtB,KAAKosB,YAAa3pB,EAAG0qB,GAE7C,OAAOI,GAAYvtB,KAAKmsB,WAAYgB,IAIxCb,GAAMsC,cAAgB,SAAUtB,EAAIJ,EAAIC,GAEpC,IAQIC,EATN,GAAIE,EAAKttB,KAAKksB,KAAOlsB,KAAK6Z,OACpBuT,EAAIptB,KAAK6Z,KAAK+U,cAActB,EAAIJ,EAAIC,IAGtC,OAAOC,EAIX,GAAIF,EAAKltB,KAAKksB,KAAOlsB,KAAKokB,QACpBgJ,EAAIptB,KAAKokB,MAAMwK,cAActB,EAAIJ,EAAIC,IAGvC,OAAOC,EAIX,OAAIF,EAAKltB,KAAKksB,IACLc,GAAgBhtB,KAAKmsB,WAAYe,EAAIC,GACnCG,EAAKttB,KAAKksB,IACZmB,GAAiBrtB,KAAKosB,YAAakB,EAAIH,GAEvCI,GAAYvtB,KAAKmsB,WAAYgB,IAsExC,IAAI0B,GAASV,GAAaxxB,UAE1BkyB,GAAOP,OAAS,SAAU/nB,GACpBvG,KAAKouB,KACPpuB,KAAKouB,KAAKE,OAAO/nB,GAEjBvG,KAAKouB,KAAO,IAAInC,GAAiB1lB,EAAS,GAAI,KAAM,KAAM,CAACA,GAAW,CAACA,KAI3EsoB,GAAOJ,OAAS,SAAUloB,GACxB,GAAIvG,KAAKouB,KAAM,CACb,IAAIhB,EAAIptB,KAAKouB,KAAKK,OAAOloB,GAMzB,OAvXQ,IAmXJ6mB,IACFptB,KAAKouB,KAAO,MAtXF,IAyXLhB,EAGT,OAAO,GAGTyB,GAAOF,WAAa,SAAU7C,EAAGqB,GAC/B,GAAIntB,KAAKouB,KACP,OAAOpuB,KAAKouB,KAAKO,WAAW7C,EAAGqB,IAInC0B,GAAOD,cAAgB,SAAUtB,EAAIJ,EAAIC,GACvC,GAAIG,GAAMJ,GAAMltB,KAAKouB,KACnB,OAAOpuB,KAAKouB,KAAKQ,cAActB,EAAIJ,EAAIC,IAI3CrxB,OAAOC,eAAe8yB,GAAQ,QAAS,CACrCC,IAAK,WACH,OAAI9uB,KAAKouB,KACApuB,KAAKouB,KAAK/B,MAGZ,KAGXvwB,OAAOC,eAAe8yB,GAAQ,YAAa,CACzCC,IAAK,WACH,OAAI9uB,KAAKouB,KACApuB,KAAKouB,KAAK1B,UAAU,IAGtB,MC1ZX,ICDIhiB,GAAQC,GDCRokB,GAEJ,WACE,SAASA,ID0ZI,IAAuBrC,GCzZlC3oB,EAAAA,EAAAA,GAAgB/D,KAAM+uB,IAEtB/qB,EAAAA,EAAAA,GAAgBhE,KAAM,iBAAkB,KAExCgE,EAAAA,EAAAA,GAAgBhE,KAAM,gBDsZnB0sB,GAAkC,IAArBA,EAAUvuB,OAIrB,IAAIgwB,GAAavB,GAAmBF,IAHlC,IAAIyB,GAAa,QCrZxBnqB,EAAAA,EAAAA,GAAgBhE,KAAM,WAAY,IAwEpC,OArEAoE,EAAAA,EAAAA,GAAa2qB,EAAe,CAAC,CAC3BryB,IAAK,sBACLT,MAAO,SAA6B2G,EAAW2M,EAAayf,GAC1D,IAAIC,EAAsBrsB,EAAY5C,KAAKqsB,MAC3C,OAAOrsB,KAAKkvB,kBAAoBxpB,KAAKyc,KAAK8M,EAAsB1f,GAAeyf,IAGhF,CACDtyB,IAAK,QACLT,MAAO,SAAe4U,EAAWqH,EAAciX,GAC7C,IAAI1hB,EAAQzN,KAEZA,KAAKovB,cAAcR,cAAc/d,EAAWA,EAAYqH,GAAc,SAAUvV,GAC9E,IAAI0B,GAAQgrB,EAAAA,GAAAA,GAAe1sB,EAAM,GAC7BsH,EAAM5F,EAAM,GAEZE,GADIF,EAAM,GACFA,EAAM,IAElB,OAAO8qB,EAAe5qB,EAAOkJ,EAAM6hB,SAAS/qB,GAAQ0F,QAGvD,CACDvN,IAAK,cACLT,MAAO,SAAqBsI,EAAOsV,EAAM5P,EAAKE,GAC5CnK,KAAKovB,cAAcd,OAAO,CAACrkB,EAAKA,EAAME,EAAQ5F,IAE9CvE,KAAKsvB,SAAS/qB,GAASsV,EACvB,IAAI0V,EAAgBvvB,KAAKwvB,eACrBC,EAAeF,EAAc1V,GAG/B0V,EAAc1V,QADKzb,IAAjBqxB,EACoBxlB,EAAME,EAENzE,KAAKC,IAAI8pB,EAAcxlB,EAAME,KAGtD,CACDzN,IAAK,QACLoyB,IAAK,WACH,OAAO9uB,KAAKovB,cAAc/C,QAE3B,CACD3vB,IAAK,qBACLoyB,IAAK,WACH,IAAIS,EAAgBvvB,KAAKwvB,eACrBzwB,EAAO,EAEX,IAAK,IAAIa,KAAK2vB,EAAe,CAC3B,IAAIplB,EAASolB,EAAc3vB,GAC3Bb,EAAgB,IAATA,EAAaoL,EAASzE,KAAKE,IAAI7G,EAAMoL,GAG9C,OAAOpL,IAER,CACDrC,IAAK,oBACLoyB,IAAK,WACH,IAAIS,EAAgBvvB,KAAKwvB,eACrBzwB,EAAO,EAEX,IAAK,IAAIa,KAAK2vB,EAAe,CAC3B,IAAIplB,EAASolB,EAAc3vB,GAC3Bb,EAAO2G,KAAKC,IAAI5G,EAAMoL,GAGxB,OAAOpL,MAIJgwB,EAhFT,GCDA,SAASviB,GAAQC,EAAQC,GAAkB,IAAIhN,EAAO5D,OAAO4D,KAAK+M,GAAS,GAAI3Q,OAAO2H,sBAAuB,CAAE,IAAIkJ,EAAU7Q,OAAO2H,sBAAsBgJ,GAAaC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO/Q,OAAOgR,yBAAyBL,EAAQI,GAAKE,eAAgBrN,EAAKsN,KAAKC,MAAMvN,EAAMiN,GAAY,OAAOjN,EAE9U,SAASwN,GAAcvN,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,UAAUC,OAAQyB,IAAK,CAAE,IAAI0D,EAAyB,MAAhBpF,UAAU0B,GAAa1B,UAAU0B,GAAK,GAAQA,EAAI,EAAK4M,GAAQlJ,GAAQ,GAAM6J,SAAQ,SAAUzQ,IAAOsH,EAAAA,EAAAA,GAAgBrE,EAAQjD,EAAK4G,EAAO5G,OAAsBZ,OAAOsR,0BAA6BtR,OAAOuR,iBAAiB1N,EAAQ7D,OAAOsR,0BAA0B9J,IAAmBkJ,GAAQlJ,GAAQ6J,SAAQ,SAAUzQ,GAAOZ,OAAOC,eAAe4D,EAAQjD,EAAKZ,OAAOgR,yBAAyBxJ,EAAQ5G,OAAe,OAAOiD,EAO7f,IAoCI+vB,IAAW/kB,GAAQD,GAEvB,SAAU8C,GAGR,SAASkiB,IACP,IAAIxV,EAEAzM,GAEJ1J,EAAAA,EAAAA,GAAgB/D,KAAM0vB,GAEtB,IAAK,IAAIvV,EAAOjc,UAAUC,OAAQic,EAAO,IAAI9X,MAAM6X,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQnc,UAAUmc,GAiEzB,OA9DA5M,GAAQC,EAAAA,EAAAA,GAA2B1N,MAAOka,GAAmBvM,EAAAA,EAAAA,GAAgB+hB,IAAU7yB,KAAKoQ,MAAMiN,EAAkB,CAACla,MAAMwE,OAAO4V,MAElIpW,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,QAAS,CACtDK,aAAa,EACb+C,UAAW,KAGb7M,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,mCAA+B,IAE9EzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,gCAAiC,OAEhFzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,+BAAgC,OAE/EzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,iBAAkB,IAAIshB,KAErE/qB,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,cAAe,OAE9DzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,sBAAuB,OAEtEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,aAAc,OAE7DzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,qBAAsB,OAErEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,qCAAqC,WAClFA,EAAMrN,SAAS,CACb0N,aAAa,QAIjB9J,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,6BAA6B,SAAUyB,GACpFzB,EAAM0B,oBAAsBD,MAG9BlL,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,aAAa,SAAU2B,GACpE,IAAIjF,EAASsD,EAAMtN,MAAMgK,OACrBwlB,EAAiBvgB,EAAMwgB,cAAc/e,UAKrCA,EAAYnL,KAAKE,IAAIF,KAAKC,IAAI,EAAG8H,EAAMoiB,2BAA6B1lB,GAASwlB,GAG7EA,IAAmB9e,IAKvBpD,EAAMqiB,4BAMFriB,EAAM1N,MAAM8Q,YAAcA,GAC5BpD,EAAMrN,SAAS,CACb0N,aAAa,EACb+C,UAAWA,QAKVpD,EAsQT,OAjVA0D,EAAAA,EAAAA,GAAUue,EAASliB,IA8EnBpJ,EAAAA,EAAAA,GAAasrB,EAAS,CAAC,CACrBhzB,IAAK,qBACLT,MAAO,WACL+D,KAAK+vB,eAAiB,IAAIhB,GAC1B/uB,KAAKiT,gBAGN,CACDvW,IAAK,gCACLT,MAAO,SAAuC0G,GAC5C,IAAI4B,EAAQ5B,EAAK8O,SAE0B,OAAvCzR,KAAKgwB,+BACPhwB,KAAKgwB,8BAAgCzrB,EACrCvE,KAAKiwB,6BAA+B1rB,IAEpCvE,KAAKgwB,8BAAgCtqB,KAAKE,IAAI5F,KAAKgwB,8BAA+BzrB,GAClFvE,KAAKiwB,6BAA+BvqB,KAAKC,IAAI3F,KAAKiwB,6BAA8B1rB,MAGnF,CACD7H,IAAK,yBACLT,MAAO,WACL,IAAIib,EAAYlX,KAAK+vB,eAAe1D,MAAQ,EAC5CrsB,KAAK+vB,eAAiB,IAAIhB,GAE1B/uB,KAAKkwB,uBAAuB,EAAGhZ,GAE/BlX,KAAKiT,gBAEN,CACDvW,IAAK,oBACLT,MAAO,WACL+D,KAAKmwB,2BAELnwB,KAAKowB,0BAELpwB,KAAKqwB,mCAEN,CACD3zB,IAAK,qBACLT,MAAO,SAA4B0E,EAAWJ,GAC5CP,KAAKmwB,2BAELnwB,KAAKowB,0BAELpwB,KAAKqwB,iCAEDrwB,KAAKG,MAAM0Q,YAAclQ,EAAUkQ,WACrC7Q,KAAK8vB,8BAGR,CACDpzB,IAAK,uBACLT,MAAO,WACD+D,KAAKswB,6BACPxkB,EAAuB9L,KAAKswB,+BAG/B,CACD5zB,IAAK,SACLT,MAAO,WACL,IA2BIib,EA3BAtD,EAAS5T,KAETgS,EAAchS,KAAKG,MACnB8R,EAAaD,EAAYC,WACzBrP,EAAYoP,EAAYpP,UACxB2tB,EAAoBve,EAAYue,kBAChCra,EAAelE,EAAYkE,aAC3BrY,EAAYmU,EAAYnU,UACxBsM,EAAS6H,EAAY7H,OACrBuB,EAAKsG,EAAYtG,GACjB8kB,EAAYxe,EAAYwe,UACxBC,EAAmBze,EAAYye,iBAC/B3xB,EAAOkT,EAAYlT,KACnBnB,EAAQqU,EAAYrU,MACpB2W,EAAWtC,EAAYsC,SACvBpK,EAAQ8H,EAAY9H,MACpBwmB,EAAe1e,EAAY0e,aAC3B5c,EAAc9T,KAAKD,MACnB+N,EAAcgG,EAAYhG,YAC1B+C,EAAYiD,EAAYjD,UACxBkK,EAAW,GAEX4V,EAAsB3wB,KAAK6vB,2BAE3Be,EAAqB5wB,KAAK+vB,eAAea,mBACzCC,EAAoB7wB,KAAK+vB,eAAe1D,MACxCpV,EAAa,EA0BjB,GAvBAjX,KAAK+vB,eAAee,MAAMprB,KAAKC,IAAI,EAAGkL,EAAY4f,GAAmBtmB,EAA4B,EAAnBsmB,GAAsB,SAAUlsB,EAAOsV,EAAM5P,GACzH,IAAI8mB,EAEqB,qBAAd7Z,GACTD,EAAa1S,EACb2S,EAAY3S,IAEZ0S,EAAavR,KAAKE,IAAIqR,EAAY1S,GAClC2S,EAAYxR,KAAKC,IAAIuR,EAAW3S,IAGlCwW,EAAS/N,KAAKkJ,EAAa,CACzB3R,MAAOA,EACPuJ,YAAaA,EACbpR,IAAK8zB,EAAUjsB,GACfmT,OAAQ9D,EACRjW,OAAQozB,EAAS,CACf5mB,OAAQomB,EAAkBpP,UAAU5c,KACnCP,EAAAA,EAAAA,GAAgB+sB,EAAyB,QAAjBL,EAAyB,OAAS,QAAS7W,IAAO7V,EAAAA,EAAAA,GAAgB+sB,EAAQ,WAAY,aAAa/sB,EAAAA,EAAAA,GAAgB+sB,EAAQ,MAAO9mB,IAAMjG,EAAAA,EAAAA,GAAgB+sB,EAAQ,QAASR,EAAkBnP,SAAS7c,IAASwsB,SAKxOH,EAAqB/f,EAAY1G,EAASsmB,GAAoBI,EAAoBjuB,EAGpF,IAFA,IAAIouB,EAAYtrB,KAAKE,IAAIhD,EAAYiuB,EAAmBnrB,KAAKyc,MAAMtR,EAAY1G,EAASsmB,EAAmBG,GAAsBL,EAAkBjR,cAAgBpV,EAAQqmB,EAAkBhR,eAEpLgK,EAASsH,EAAmBtH,EAASsH,EAAoBG,EAAWzH,IAC3ErS,EAAYqS,EACZxO,EAAS/N,KAAKkJ,EAAa,CACzB3R,MAAOglB,EACPzb,YAAaA,EACbpR,IAAK8zB,EAAUjH,GACf7R,OAAQ1X,KACRrC,MAAO,CACLuM,MAAOqmB,EAAkBnP,SAASmI,OAQ1C,OAFAvpB,KAAKixB,YAAcha,EACnBjX,KAAKkxB,WAAaha,EACX5a,EAAAA,cAAoB,MAAO,CAChC4S,IAAKlP,KAAK2V,0BACV,aAAc3V,KAAKG,MAAM,cACzBtC,UAAW+X,EAAK,4BAA6B/X,GAC7C6N,GAAIA,EACJmK,SAAU7V,KAAK8V,UACfhX,KAAMA,EACNnB,MAAOuP,GAAc,CACnBwH,UAAW,aACXC,UAAW,MACXxK,OAAQ8H,EAAa,OAAS9H,EAC9BkL,UAAW,SACXC,UAAWqb,EAAsBxmB,EAAS,SAAW,OACrDH,SAAU,WACVE,MAAOA,EACP0K,wBAAyB,QACzBC,WAAY,aACXlX,GACH2W,SAAUA,GACThY,EAAAA,cAAoB,MAAO,CAC5BuB,UAAW,kDACXF,MAAO,CACLuM,MAAO,OACPC,OAAQwmB,EACR5a,SAAU,OACVC,UAAW2a,EACXvmB,SAAU,SACV6L,cAAenI,EAAc,OAAS,GACtC9D,SAAU,aAEX+Q,MAEJ,CACDre,IAAK,2BACLT,MAAO,WACL,GAAkD,kBAAvC+D,KAAKgwB,8BAA4C,CAC1D,IAAI/Y,EAAajX,KAAKgwB,8BAClB9Y,EAAYlX,KAAKiwB,6BACrBjwB,KAAKgwB,8BAAgC,KACrChwB,KAAKiwB,6BAA+B,KAEpCjwB,KAAKkwB,uBAAuBjZ,EAAYC,GAExClX,KAAKiT,iBAGR,CACDvW,IAAK,4BACLT,MAAO,WACL,IAAI2b,EAA6B5X,KAAKG,MAAMyX,2BAExC5X,KAAKswB,6BACPxkB,EAAuB9L,KAAKswB,6BAG9BtwB,KAAKswB,4BAA8BtkB,EAAwBhM,KAAKmxB,kCAAmCvZ,KAEpG,CACDlb,IAAK,2BACLT,MAAO,WACL,IAAIwW,EAAezS,KAAKG,MACpByC,EAAY6P,EAAa7P,UACzB2tB,EAAoB9d,EAAa8d,kBACjCrmB,EAAQuI,EAAavI,MACrBknB,EAAuB1rB,KAAKC,IAAI,EAAGD,KAAKY,MAAM4D,EAAQqmB,EAAkBhR,eAC5E,OAAOvf,KAAK+vB,eAAeY,oBAAoB/tB,EAAWwuB,EAAsBb,EAAkBjR,iBAEnG,CACD5iB,IAAK,0BACLT,MAAO,WACL,IAAI2W,EAAe5S,KAAKG,MACpBgK,EAASyI,EAAazI,OACtB0L,EAAWjD,EAAaiD,SACxBhF,EAAY7Q,KAAKD,MAAM8Q,UAEvB7Q,KAAKqxB,oBAAsBxgB,IAC7BgF,EAAS,CACPqC,aAAc/N,EACdgO,aAAcnY,KAAK6vB,2BACnBhf,UAAWA,IAEb7Q,KAAKqxB,kBAAoBxgB,KAG5B,CACDnU,IAAK,iCACLT,MAAO,WACD+D,KAAKsxB,sBAAwBtxB,KAAKixB,aAAejxB,KAAKuxB,qBAAuBvxB,KAAKkxB,cAEpFM,EADsBxxB,KAAKG,MAAMqxB,iBACjB,CACdva,WAAYjX,KAAKixB,YACjB/Z,UAAWlX,KAAKkxB,aAElBlxB,KAAKsxB,oBAAsBtxB,KAAKixB,YAChCjxB,KAAKuxB,mBAAqBvxB,KAAKkxB,cAGlC,CACDx0B,IAAK,yBACLT,MAAO,SAAgCgb,EAAYC,GAKjD,IAJA,IAAI9D,EAAepT,KAAKG,MACpBowB,EAAoBnd,EAAamd,kBACjCkB,EAAiBre,EAAaqe,eAEzBhI,EAAUxS,EAAYwS,GAAWvS,EAAWuS,IAAW,CAC9D,IAAIiI,EAAkBD,EAAehI,GACjC5P,EAAO6X,EAAgB7X,KACvB5P,EAAMynB,EAAgBznB,IAE1BjK,KAAK+vB,eAAe4B,YAAYlI,EAAS5P,EAAM5P,EAAKsmB,EAAkBpP,UAAUsI,QAGlF,CAAC,CACH/sB,IAAK,2BACLT,MAAO,SAAkCqE,EAAWC,GAClD,YAA4BnC,IAAxBkC,EAAUuQ,WAA2BtQ,EAAUsQ,YAAcvQ,EAAUuQ,UAClE,CACL/C,aAAa,EACb+C,UAAWvQ,EAAUuQ,WAIlB,SAIJ6e,EAlVT,CAmVEpzB,EAAAA,gBAAsB0H,EAAAA,EAAAA,GAAgB0G,GAAQ,YAAqD,MAoCjGC,IAmBJ,SAASinB,OAjBT5tB,EAAAA,EAAAA,GAAgB0rB,GAAS,eAAgB,CACvCzd,YAAY,EACZue,UAWF,SAAkBv0B,GAChB,OAAOA,GAXPu1B,gBAAiBI,GACjB/b,SAAU+b,GACVnB,iBAAkB,GAClB3xB,KAAM,OACN8Y,2BAhaiD,IAiajDja,MAvagB,GAwahB2W,SAAU,EACVoc,aAAc,QAehB3vB,EAAS2uB,ICzcT,ICMImC,GAEJ,WACE,SAASA,IACP,IAAIpkB,EAAQzN,KAER+F,EAAS7H,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,IAEjF6F,EAAAA,EAAAA,GAAgB/D,KAAM6xB,IAEtB7tB,EAAAA,EAAAA,GAAgBhE,KAAM,0BAAsB,IAE5CgE,EAAAA,EAAAA,GAAgBhE,KAAM,0BAAsB,IAE5CgE,EAAAA,EAAAA,GAAgBhE,KAAM,uBAAmB,IAEzCgE,EAAAA,EAAAA,GAAgBhE,KAAM,eAAe,SAAU2C,GAC7C,IAAI4B,EAAQ5B,EAAK4B,MAEjBkJ,EAAMqkB,mBAAmBriB,YAAY,CACnClL,MAAOA,EAAQkJ,EAAMskB,yBAIzB/tB,EAAAA,EAAAA,GAAgBhE,KAAM,aAAa,SAAUqE,GAC3C,IAAIE,EAAQF,EAAME,MAElBkJ,EAAMqkB,mBAAmBjiB,UAAU,CACjCtL,MAAOA,EAAQkJ,EAAMukB,qBAIzB,IAAIzB,EAAoBxqB,EAAOwqB,kBAC3B0B,EAAwBlsB,EAAOmsB,kBAC/BA,OAA8C,IAA1BD,EAAmC,EAAIA,EAC3DE,EAAwBpsB,EAAOqsB,eAC/BA,OAA2C,IAA1BD,EAAmC,EAAIA,EAC5DnyB,KAAK8xB,mBAAqBvB,EAC1BvwB,KAAK+xB,mBAAqBG,EAC1BlyB,KAAKgyB,gBAAkBI,EA0DzB,OAvDAhuB,EAAAA,EAAAA,GAAaytB,EAA4B,CAAC,CACxCn1B,IAAK,QACLT,MAAO,SAAewV,EAAUF,GAC9BvR,KAAK8xB,mBAAmBO,MAAM5gB,EAAWzR,KAAKgyB,gBAAiBzgB,EAAcvR,KAAK+xB,sBAEnF,CACDr1B,IAAK,WACLT,MAAO,WACL+D,KAAK8xB,mBAAmBQ,aAEzB,CACD51B,IAAK,iBACLT,MAAO,WACL,OAAO+D,KAAK8xB,mBAAmBxa,mBAEhC,CACD5a,IAAK,gBACLT,MAAO,WACL,OAAO+D,KAAK8xB,mBAAmBta,kBAEhC,CACD9a,IAAK,YACLT,MAAO,SAAmBwV,GACxB,IAAIF,EAAcrT,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EACtF,OAAO8B,KAAK8xB,mBAAmB3Q,UAAU1P,EAAWzR,KAAKgyB,gBAAiBzgB,EAAcvR,KAAK+xB,sBAE9F,CACDr1B,IAAK,WACLT,MAAO,SAAkBwV,GACvB,IAAIF,EAAcrT,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EACtF,OAAO8B,KAAK8xB,mBAAmB1Q,SAAS3P,EAAWzR,KAAKgyB,gBAAiBzgB,EAAcvR,KAAK+xB,sBAE7F,CACDr1B,IAAK,MACLT,MAAO,SAAawV,GAClB,IAAIF,EAAcrT,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EACtF,OAAO8B,KAAK8xB,mBAAmBva,IAAI9F,EAAWzR,KAAKgyB,gBAAiBzgB,EAAcvR,KAAK+xB,sBAExF,CACDr1B,IAAK,MACLT,MAAO,SAAawV,EAAUF,EAAarH,EAAOC,GAChDnK,KAAK8xB,mBAAmBzQ,IAAI5P,EAAWzR,KAAKgyB,gBAAiBzgB,EAAcvR,KAAK+xB,mBAAoB7nB,EAAOC,KAE5G,CACDzN,IAAK,gBACLoyB,IAAK,WACH,OAAO9uB,KAAK8xB,mBAAmBxS,gBAEhC,CACD5iB,IAAK,eACLoyB,IAAK,WACH,OAAO9uB,KAAK8xB,mBAAmBvS,iBAI5BsS,EA/FT,GCAA,SAASrlB,GAAQC,EAAQC,GAAkB,IAAIhN,EAAO5D,OAAO4D,KAAK+M,GAAS,GAAI3Q,OAAO2H,sBAAuB,CAAE,IAAIkJ,EAAU7Q,OAAO2H,sBAAsBgJ,GAAaC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO/Q,OAAOgR,yBAAyBL,EAAQI,GAAKE,eAAgBrN,EAAKsN,KAAKC,MAAMvN,EAAMiN,GAAY,OAAOjN,EAE9U,SAASwN,GAAcvN,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,UAAUC,OAAQyB,IAAK,CAAE,IAAI0D,EAAyB,MAAhBpF,UAAU0B,GAAa1B,UAAU0B,GAAK,GAAQA,EAAI,EAAK4M,GAAQlJ,GAAQ,GAAM6J,SAAQ,SAAUzQ,IAAOsH,EAAAA,EAAAA,GAAgBrE,EAAQjD,EAAK4G,EAAO5G,OAAsBZ,OAAOsR,0BAA6BtR,OAAOuR,iBAAiB1N,EAAQ7D,OAAOsR,0BAA0B9J,IAAmBkJ,GAAQlJ,GAAQ6J,SAAQ,SAAUzQ,GAAOZ,OAAOC,eAAe4D,EAAQjD,EAAKZ,OAAOgR,yBAAyBxJ,EAAQ5G,OAAe,OAAOiD,EAO7f,IASI4yB,GAEJ,SAAU/kB,GAGR,SAAS+kB,EAAUpyB,EAAO+lB,GACxB,IAAIzY,GAEJ1J,EAAAA,EAAAA,GAAgB/D,KAAMuyB,GAEtB9kB,GAAQC,EAAAA,EAAAA,GAA2B1N,MAAM2N,EAAAA,EAAAA,GAAgB4kB,GAAW11B,KAAKmD,KAAMG,EAAO+lB,KAEtFliB,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,QAAS,CACtDmD,WAAY,EACZC,UAAW,EACXjH,cAAe,EACf4oB,yBAAyB,EACzBC,uBAAuB,KAGzBzuB,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,iCAAkC,OAEjFzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,8BAA+B,OAE9EzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,sBAAsB,SAAUyB,GAC7EzB,EAAMilB,gBAAkBxjB,MAG1BlL,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,uBAAuB,SAAUyB,GAC9EzB,EAAMklB,iBAAmBzjB,MAG3BlL,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,+BAA+B,SAAU9K,GACtF,IAAI8O,EAAW9O,EAAK8O,SAChBmhB,EAAOvvB,EAAyBV,EAAM,CAAC,aAEvCqP,EAAcvE,EAAMtN,MACpB+V,EAAelE,EAAYkE,aAC3B2c,EAAgB7gB,EAAY6gB,cAGhC,OAAIphB,IAFWO,EAAYpC,SAECijB,EACnBv2B,EAAAA,cAAoB,MAAO,CAChCI,IAAKk2B,EAAKl2B,IACViB,MAAOuP,GAAc,GAAI0lB,EAAKj1B,MAAO,CACnCwM,OAtDgB,OA0Db+L,EAAahJ,GAAc,GAAI0lB,EAAM,CAC1Clb,QAAQ9J,EAAAA,EAAAA,GAAuBH,GAC/BgE,SAAUA,EAAWohB,SAK3B7uB,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,gCAAgC,SAAUpJ,GACvF,IAAIkN,EAAclN,EAAMkN,YACpBE,EAAWpN,EAAMoN,SACjBmhB,EAAOvvB,EAAyBgB,EAAO,CAAC,cAAe,aAEvDoO,EAAehF,EAAMtN,MACrB+V,EAAezD,EAAayD,aAC5B4c,EAAmBrgB,EAAaqgB,iBAChCD,EAAgBpgB,EAAaogB,cACjC,OAAO3c,EAAahJ,GAAc,GAAI0lB,EAAM,CAC1CrhB,YAAaA,EAAcuhB,EAC3Bpb,QAAQ9J,EAAAA,EAAAA,GAAuBH,GAC/BgE,SAAUA,EAAWohB,SAIzB7uB,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,6BAA6B,SAAU1I,GACpF,IAAIwM,EAAcxM,EAAMwM,YACpBqhB,EAAOvvB,EAAyB0B,EAAO,CAAC,gBAExC6N,EAAenF,EAAMtN,MACrB+V,EAAetD,EAAasD,aAC5B3G,EAAcqD,EAAarD,YAC3BujB,EAAmBlgB,EAAakgB,iBAEpC,OAAIvhB,IAAgBhC,EAAcujB,EACzBx2B,EAAAA,cAAoB,MAAO,CAChCI,IAAKk2B,EAAKl2B,IACViB,MAAOuP,GAAc,GAAI0lB,EAAKj1B,MAAO,CACnCuM,MA9FgB,OAkGbgM,EAAahJ,GAAc,GAAI0lB,EAAM,CAC1CrhB,YAAaA,EAAcuhB,EAC3Bpb,QAAQ9J,EAAAA,EAAAA,GAAuBH,UAKrCzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,yBAAyB,SAAU3F,GAChF,IAAIvD,EAAQuD,EAAMvD,MACd6O,EAAe3F,EAAMtN,MACrBoP,EAAc6D,EAAa7D,YAC3BujB,EAAmB1f,EAAa0f,iBAChCrjB,EAAc2D,EAAa3D,YAC3BqE,EAAcrG,EAAM1N,MACpB6J,EAAgBkK,EAAYlK,cAMhC,OAL8BkK,EAAY0e,yBAKXjuB,IAAUgL,EAAcujB,EAC9ClpB,EAGqB,oBAAhB6F,EAA6BA,EAAY,CACrDlL,MAAOA,EAAQuuB,IACZrjB,MAGPzL,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,aAAa,SAAUslB,GACpE,IAAIniB,EAAamiB,EAAWniB,WACxBC,EAAYkiB,EAAWliB,UAE3BpD,EAAMrN,SAAS,CACbwQ,WAAYA,EACZC,UAAWA,IAGb,IAAIgF,EAAWpI,EAAMtN,MAAM0V,SAEvBA,GACFA,EAASkd,OAIb/uB,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,8BAA8B,SAAUxF,GACrF,IAAIsQ,EAAatQ,EAAMsQ,WACnBxZ,EAAOkJ,EAAMlJ,KACbyZ,EAAWvQ,EAAMuQ,SACjBjE,EAAe9G,EAAM1N,MACrByyB,EAA0Bje,EAAaie,wBACvCC,EAAwBle,EAAake,sBAEzC,GAAIla,IAAeia,GAA2Bha,IAAaia,EAAuB,CAChFhlB,EAAMrN,SAAS,CACbwJ,cAAe7K,EACfyzB,wBAAyBja,EACzBka,sBAAuBja,IAGzB,IAAIF,EAA4B7K,EAAMtN,MAAMmY,0BAEH,oBAA9BA,GACTA,EAA0B,CACxBC,WAAYA,EACZxZ,KAAMA,EACNyZ,SAAUA,SAMlBxU,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,iBAAiB,SAAUslB,GACxE,IAAIniB,EAAamiB,EAAWniB,WAE5BnD,EAAMqI,UAAU,CACdlF,WAAYA,EACZC,UAAWpD,EAAM1N,MAAM8Q,gBAI3B7M,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,gBAAgB,SAAUslB,GACvE,IAAIliB,EAAYkiB,EAAWliB,UAE3BpD,EAAMqI,UAAU,CACdjF,UAAWA,EACXD,WAAYnD,EAAM1N,MAAM6Q,iBAI5B5M,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,wBAAwB,SAAUvF,GAC/E,IAAI3D,EAAQ2D,EAAM3D,MACdsP,EAAepG,EAAMtN,MACrB0yB,EAAgBhf,EAAagf,cAC7BjjB,EAAWiE,EAAajE,SACxBC,EAAYgE,EAAahE,UACzBkU,EAAetW,EAAM1N,MACrB6J,EAAgBma,EAAana,cAMjC,OAL4Bma,EAAa0O,uBAKZluB,IAAUqL,EAAWijB,EACzCjpB,EAGmB,oBAAdiG,EAA2BA,EAAU,CACjDtL,MAAOA,EAAQsuB,IACZhjB,MAGP7L,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,mBAAmB,SAAUyB,GAC1EzB,EAAMulB,aAAe9jB,MAGvBlL,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,oBAAoB,SAAUyB,GAC3EzB,EAAMwlB,cAAgB/jB,KAGxB,IAAIkH,EAA2BjW,EAAMiW,yBACjC8c,EAAoB/yB,EAAM2yB,iBAC1BK,EAAiBhzB,EAAM0yB,cAsB3B,OApBAplB,EAAM2lB,6BAA4B,GAE9Bhd,IACF3I,EAAM4lB,wCAA0CF,EAAiB,EAAI,IAAItB,GAA2B,CAClGtB,kBAAmBna,EACnB8b,kBAAmB,EACnBE,eAAgBe,IACb/c,EACL3I,EAAM6lB,yCAA2CJ,EAAoB,GAAKC,EAAiB,EAAI,IAAItB,GAA2B,CAC5HtB,kBAAmBna,EACnB8b,kBAAmBgB,EACnBd,eAAgBe,IACb/c,EACL3I,EAAM8lB,sCAAwCL,EAAoB,EAAI,IAAIrB,GAA2B,CACnGtB,kBAAmBna,EACnB8b,kBAAmBgB,EACnBd,eAAgB,IACbhc,GAGA3I,EAmgBT,OAzuBA0D,EAAAA,EAAAA,GAAUohB,EAAW/kB,IAyOrBpJ,EAAAA,EAAAA,GAAamuB,EAAW,CAAC,CACvB71B,IAAK,mBACLT,MAAO,WACL+D,KAAK0yB,iBAAmB1yB,KAAK0yB,gBAAgBzf,cAC7CjT,KAAK2yB,kBAAoB3yB,KAAK2yB,iBAAiB1f,cAC/CjT,KAAKgzB,cAAgBhzB,KAAKgzB,aAAa/f,cACvCjT,KAAKizB,eAAiBjzB,KAAKizB,cAAchgB,gBAI1C,CACDvW,IAAK,gCACLT,MAAO,WACL,IAAIkM,EAAQjK,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC5Es1B,EAAoBrrB,EAAMoJ,YAC1BA,OAAoC,IAAtBiiB,EAA+B,EAAIA,EACjDC,EAAiBtrB,EAAMsJ,SACvBA,OAA8B,IAAnBgiB,EAA4B,EAAIA,EAE/CzzB,KAAKuS,+BAAgF,kBAAxCvS,KAAKuS,+BAA8C7M,KAAKE,IAAI5F,KAAKuS,+BAAgChB,GAAeA,EAC7JvR,KAAKwS,4BAA0E,kBAArCxS,KAAKwS,4BAA2C9M,KAAKE,IAAI5F,KAAKwS,4BAA6Bf,GAAYA,IAIlJ,CACD/U,IAAK,kBACLT,MAAO,WACL+D,KAAK0yB,iBAAmB1yB,KAAK0yB,gBAAgBtI,kBAC7CpqB,KAAK2yB,kBAAoB3yB,KAAK2yB,iBAAiBvI,kBAC/CpqB,KAAKgzB,cAAgBhzB,KAAKgzB,aAAa5I,kBACvCpqB,KAAKizB,eAAiBjzB,KAAKizB,cAAc7I,oBAI1C,CACD1tB,IAAK,oBACLT,MAAO,WACL,IAAIwc,EAAQva,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC5Ew1B,EAAoBjb,EAAMlH,YAC1BA,OAAoC,IAAtBmiB,EAA+B,EAAIA,EACjDC,EAAiBlb,EAAMhH,SACvBA,OAA8B,IAAnBkiB,EAA4B,EAAIA,EAE3C3f,EAAehU,KAAKG,MACpB2yB,EAAmB9e,EAAa8e,iBAChCD,EAAgB7e,EAAa6e,cAC7Be,EAAsBluB,KAAKC,IAAI,EAAG4L,EAAcuhB,GAChDe,EAAmBnuB,KAAKC,IAAI,EAAG8L,EAAWohB,GAC9C7yB,KAAK0yB,iBAAmB1yB,KAAK0yB,gBAAgB5a,kBAAkB,CAC7DvG,YAAaA,EACbE,SAAUoiB,IAEZ7zB,KAAK2yB,kBAAoB3yB,KAAK2yB,iBAAiB7a,kBAAkB,CAC/DvG,YAAaqiB,EACbniB,SAAUoiB,IAEZ7zB,KAAKgzB,cAAgBhzB,KAAKgzB,aAAalb,kBAAkB,CACvDvG,YAAaA,EACbE,SAAUA,IAEZzR,KAAKizB,eAAiBjzB,KAAKizB,cAAcnb,kBAAkB,CACzDvG,YAAaqiB,EACbniB,SAAUA,IAEZzR,KAAK8zB,eAAiB,KACtB9zB,KAAK+zB,eAAiB,KAEtB/zB,KAAKozB,6BAA4B,KAElC,CACD12B,IAAK,oBACLT,MAAO,WACL,IAAI+3B,EAAeh0B,KAAKG,MACpByQ,EAAaojB,EAAapjB,WAC1BC,EAAYmjB,EAAanjB,UAE7B,GAAID,EAAa,GAAKC,EAAY,EAAG,CACnC,IAAIwB,EAAW,GAEXzB,EAAa,IACfyB,EAASzB,WAAaA,GAGpBC,EAAY,IACdwB,EAASxB,UAAYA,GAGvB7Q,KAAKI,SAASiS,GAGhBrS,KAAKsT,+BAEN,CACD5W,IAAK,qBACLT,MAAO,WACL+D,KAAKsT,+BAEN,CACD5W,IAAK,SACLT,MAAO,WACL,IAAIg4B,EAAej0B,KAAKG,MACpB0V,EAAWoe,EAAape,SACxB7H,EAAoBimB,EAAajmB,kBAGjCsC,GAF4B2jB,EAAa3b,0BACxB2b,EAAarjB,WACbqjB,EAAa3jB,gBAE9BE,GADgByjB,EAAapjB,UACfojB,EAAazjB,aAC3BoiB,EAAOvvB,EAAyB4wB,EAAc,CAAC,WAAY,oBAAqB,4BAA6B,aAAc,iBAAkB,YAAa,gBAO9J,GALAj0B,KAAKk0B,oBAKoB,IAArBl0B,KAAKG,MAAM+J,OAAqC,IAAtBlK,KAAKG,MAAMgK,OACvC,OAAO,KAIT,IAAIgqB,EAAen0B,KAAKD,MACpB6Q,EAAaujB,EAAavjB,WAC1BC,EAAYsjB,EAAatjB,UAC7B,OAAOvU,EAAAA,cAAoB,MAAO,CAChCqB,MAAOqC,KAAKo0B,sBACX93B,EAAAA,cAAoB,MAAO,CAC5BqB,MAAOqC,KAAKq0B,oBACXr0B,KAAKs0B,mBAAmB1B,GAAO5yB,KAAKu0B,oBAAoBrnB,GAAc,GAAI0lB,EAAM,CACjF/c,SAAUA,EACVjF,WAAYA,MACRtU,EAAAA,cAAoB,MAAO,CAC/BqB,MAAOqC,KAAKw0B,uBACXx0B,KAAKy0B,sBAAsBvnB,GAAc,GAAI0lB,EAAM,CACpD/c,SAAUA,EACVhF,UAAWA,KACR7Q,KAAK00B,uBAAuBxnB,GAAc,GAAI0lB,EAAM,CACvD/c,SAAUA,EACV7H,kBAAmBA,EACnB4C,WAAYA,EACZN,eAAgBA,EAChBE,YAAaA,EACbK,UAAWA,SAGd,CACDnU,IAAK,uBACLT,MAAO,SAA8BkE,GAKnC,OAJaA,EAAMgK,OAECnK,KAAK20B,kBAAkBx0B,KAI5C,CACDzD,IAAK,oBACLT,MAAO,SAA2BkE,GAChC,IAAI2yB,EAAmB3yB,EAAM2yB,iBACzBrjB,EAActP,EAAMsP,YAExB,GAA2B,MAAvBzP,KAAK8zB,eACP,GAA2B,oBAAhBrkB,EAA4B,CAGrC,IAFA,IAAImlB,EAAgB,EAEXrwB,EAAQ,EAAGA,EAAQuuB,EAAkBvuB,IAC5CqwB,GAAiBnlB,EAAY,CAC3BlL,MAAOA,IAIXvE,KAAK8zB,eAAiBc,OAEtB50B,KAAK8zB,eAAiBrkB,EAAcqjB,EAIxC,OAAO9yB,KAAK8zB,iBAEb,CACDp3B,IAAK,qBACLT,MAAO,SAA4BkE,GAKjC,OAJYA,EAAM+J,MAEElK,KAAK60B,kBAAkB10B,KAI5C,CACDzD,IAAK,oBACLT,MAAO,SAA2BkE,GAChC,IAAI0yB,EAAgB1yB,EAAM0yB,cACtBhjB,EAAY1P,EAAM0P,UAEtB,GAA2B,MAAvB7P,KAAK+zB,eACP,GAAyB,oBAAdlkB,EAA0B,CAGnC,IAFA,IAAIilB,EAAgB,EAEXvwB,EAAQ,EAAGA,EAAQsuB,EAAetuB,IACzCuwB,GAAiBjlB,EAAU,CACzBtL,MAAOA,IAIXvE,KAAK+zB,eAAiBe,OAEtB90B,KAAK+zB,eAAiBlkB,EAAYgjB,EAItC,OAAO7yB,KAAK+zB,iBAEb,CACDr3B,IAAK,6BACLT,MAAO,WACL,GAAmD,kBAAxC+D,KAAKuS,+BAA6C,CAC3D,IAAIhB,EAAcvR,KAAKuS,+BACnBd,EAAWzR,KAAKwS,4BACpBxS,KAAKuS,+BAAiC,KACtCvS,KAAKwS,4BAA8B,KACnCxS,KAAK8X,kBAAkB,CACrBvG,YAAaA,EACbE,SAAUA,IAEZzR,KAAKiT,iBAQR,CACDvW,IAAK,8BACLT,MAAO,SAAqC84B,GAC1C,IAAIC,EAAeh1B,KAAKG,MACpBsP,EAAculB,EAAavlB,YAC3BwlB,EAA0BD,EAAaC,wBACvCC,EAAuBF,EAAaE,qBACpC/qB,EAAS6qB,EAAa7qB,OACtB2oB,EAAmBkC,EAAalC,iBAChCD,EAAgBmC,EAAanC,cAC7BhjB,EAAYmlB,EAAanlB,UACzBlS,EAAQq3B,EAAar3B,MACrBw3B,EAAsBH,EAAaG,oBACnCC,EAAuBJ,EAAaI,qBACpCC,EAAmBL,EAAaK,iBAChCC,EAAoBN,EAAaM,kBACjCprB,EAAQ8qB,EAAa9qB,MACrBqrB,EAAaR,GAAY5qB,IAAWnK,KAAKw1B,qBAAuBtrB,IAAUlK,KAAKy1B,mBAC/EC,EAAiBX,GAAYtlB,IAAgBzP,KAAK21B,0BAA4B7C,IAAqB9yB,KAAK41B,8BACxGC,EAAgBd,GAAYlC,IAAkB7yB,KAAK81B,4BAA8BjmB,IAAc7P,KAAK+1B,wBAEpGhB,GAAYQ,GAAc53B,IAAUqC,KAAKg2B,sBAC3Ch2B,KAAKo0B,qBAAuBlnB,GAAc,CACxC/C,OAAQA,EACRC,SAAU,UAEVF,MAAOA,GACNvM,KAGDo3B,GAAYQ,GAAcM,KAC5B71B,KAAKq0B,mBAAqB,CACxBlqB,OAAQnK,KAAK20B,kBAAkB30B,KAAKG,OACpC6J,SAAU,WACVE,MAAOA,GAETlK,KAAKw0B,sBAAwB,CAC3BrqB,OAAQA,EAASnK,KAAK20B,kBAAkB30B,KAAKG,OAC7CiK,SAAU,UAEVJ,SAAU,WACVE,MAAOA,KAIP6qB,GAAYI,IAAwBn1B,KAAKi2B,oCAC3Cj2B,KAAKk2B,qBAAuBhpB,GAAc,CACxC2M,KAAM,EACNxE,UAAW,SACXC,UAAW2f,EAA0B,OAAS,SAC9CjrB,SAAU,YACTmrB,KAGDJ,GAAYW,GAAkBN,IAAyBp1B,KAAKm2B,qCAC9Dn2B,KAAKo2B,sBAAwBlpB,GAAc,CACzC2M,KAAM7Z,KAAK60B,kBAAkB70B,KAAKG,OAClC6J,SAAU,YACTorB,KAGDL,GAAYM,IAAqBr1B,KAAKq2B,iCACxCr2B,KAAKs2B,kBAAoBppB,GAAc,CACrC2M,KAAM,EACNxE,UAAW,SACXC,UAAW,SACXtL,SAAU,WACVC,IAAK,GACJorB,KAGDN,GAAYW,GAAkBJ,IAAsBt1B,KAAKu2B,kCAC3Dv2B,KAAKw2B,mBAAqBtpB,GAAc,CACtC2M,KAAM7Z,KAAK60B,kBAAkB70B,KAAKG,OAClCkV,UAAW6f,EAAuB,OAAS,SAC3C5f,UAAW,SACXtL,SAAU,WACVC,IAAK,GACJqrB,IAGLt1B,KAAK21B,yBAA2BlmB,EAChCzP,KAAK41B,8BAAgC9C,EACrC9yB,KAAK81B,2BAA6BjD,EAClC7yB,KAAKw1B,oBAAsBrrB,EAC3BnK,KAAK+1B,uBAAyBlmB,EAC9B7P,KAAKg2B,mBAAqBr4B,EAC1BqC,KAAKi2B,iCAAmCd,EACxCn1B,KAAKm2B,kCAAoCf,EACzCp1B,KAAKq2B,8BAAgChB,EACrCr1B,KAAKu2B,+BAAiCjB,EACtCt1B,KAAKy1B,mBAAqBvrB,IAE3B,CACDxN,IAAK,oBACLT,MAAO,WACD+D,KAAK21B,2BAA6B31B,KAAKG,MAAMsP,aAAezP,KAAK41B,gCAAkC51B,KAAKG,MAAM2yB,mBAChH9yB,KAAK8zB,eAAiB,MAGpB9zB,KAAK81B,6BAA+B91B,KAAKG,MAAM0yB,eAAiB7yB,KAAK+1B,yBAA2B/1B,KAAKG,MAAM0P,YAC7G7P,KAAK+zB,eAAiB,MAGxB/zB,KAAKozB,8BAELpzB,KAAK21B,yBAA2B31B,KAAKG,MAAMsP,YAC3CzP,KAAK41B,8BAAgC51B,KAAKG,MAAM2yB,iBAChD9yB,KAAK81B,2BAA6B91B,KAAKG,MAAM0yB,cAC7C7yB,KAAK+1B,uBAAyB/1B,KAAKG,MAAM0P,YAE1C,CACDnT,IAAK,wBACLT,MAAO,SAA+BkE,GACpC,IAAI80B,EAA0B90B,EAAM80B,wBAChCnC,EAAmB3yB,EAAM2yB,iBACzBD,EAAgB1yB,EAAM0yB,cACtBjjB,EAAWzP,EAAMyP,SACjB6mB,EAA8Bt2B,EAAMs2B,4BACpChE,EAAwBzyB,KAAKD,MAAM0yB,sBAEvC,IAAKK,EACH,OAAO,KAGT,IAAI4D,EAAqBjE,EAAwB,EAAI,EACjDtoB,EAASnK,KAAK22B,qBAAqBx2B,GACnC+J,EAAQlK,KAAK60B,kBAAkB10B,GAC/ByJ,EAAgB5J,KAAKD,MAAM0yB,sBAAwBzyB,KAAKD,MAAM6J,cAAgB,EAC9EgtB,EAAYH,EAA8BvsB,EAAQN,EAAgBM,EAElE2sB,EAAiBv6B,EAAAA,cAAoBiR,GAAMmI,EAAAA,EAAAA,SAAS,GAAIvV,EAAO,CACjE+V,aAAclW,KAAK82B,4BACnBj5B,UAAWmC,KAAKG,MAAM42B,wBACtBxnB,YAAaujB,EACb1c,yBAA0BpW,KAAKqzB,wCAC/BlpB,OAAQA,EACR0L,SAAUof,EAA0Bj1B,KAAKg3B,kBAAe54B,EACxD8Q,IAAKlP,KAAKi3B,mBACVrnB,SAAUlK,KAAKC,IAAI,EAAGiK,EAAWijB,GAAiB6D,EAClD7mB,UAAW7P,KAAKk3B,qBAChBv5B,MAAOqC,KAAKk2B,qBACZ5hB,SAAU,KACVpK,MAAO0sB,KAGT,OAAIH,EACKn6B,EAAAA,cAAoB,MAAO,CAChCuB,UAAW,+BACXF,MAAOuP,GAAc,GAAIlN,KAAKk2B,qBAAsB,CAClD/rB,OAAQA,EACRD,MAAOA,EACPoL,UAAW,YAEZuhB,GAGEA,IAER,CACDn6B,IAAK,yBACLT,MAAO,SAAgCkE,GACrC,IAAIoP,EAAcpP,EAAMoP,YACpBujB,EAAmB3yB,EAAM2yB,iBACzBD,EAAgB1yB,EAAM0yB,cACtBjjB,EAAWzP,EAAMyP,SACjBU,EAAiBnQ,EAAMmQ,eACvBE,EAAcrQ,EAAMqQ,YACxB,OAAOlU,EAAAA,cAAoBiR,GAAMmI,EAAAA,EAAAA,SAAS,GAAIvV,EAAO,CACnD+V,aAAclW,KAAKm3B,6BACnBt5B,UAAWmC,KAAKG,MAAMi3B,yBACtB7nB,YAAa7J,KAAKC,IAAI,EAAG4J,EAAcujB,GACvCrjB,YAAazP,KAAKq3B,sBAClBjhB,yBAA0BpW,KAAKszB,yCAC/BnpB,OAAQnK,KAAK22B,qBAAqBx2B,GAClC0V,SAAU7V,KAAK8V,UACfwC,0BAA2BtY,KAAKs3B,2BAChCpoB,IAAKlP,KAAKu3B,oBACV3nB,SAAUlK,KAAKC,IAAI,EAAGiK,EAAWijB,GACjChjB,UAAW7P,KAAKk3B,qBAChB5mB,eAAgBA,EAAiBwiB,EACjCtiB,YAAaA,EAAcqiB,EAC3Bl1B,MAAOqC,KAAKo2B,sBACZlsB,MAAOlK,KAAKw3B,mBAAmBr3B,QAGlC,CACDzD,IAAK,qBACLT,MAAO,SAA4BkE,GACjC,IAAI2yB,EAAmB3yB,EAAM2yB,iBACzBD,EAAgB1yB,EAAM0yB,cAE1B,OAAKC,GAAqBD,EAInBv2B,EAAAA,cAAoBiR,GAAMmI,EAAAA,EAAAA,SAAS,GAAIvV,EAAO,CACnDtC,UAAWmC,KAAKG,MAAMs3B,qBACtBloB,YAAaujB,EACb3oB,OAAQnK,KAAK20B,kBAAkBx0B,GAC/B+O,IAAKlP,KAAK03B,gBACV9nB,SAAUijB,EACVl1B,MAAOqC,KAAKs2B,kBACZhiB,SAAU,KACVpK,MAAOlK,KAAK60B,kBAAkB10B,MAXvB,OAcV,CACDzD,IAAK,sBACLT,MAAO,SAA6BkE,GAClC,IAAIoP,EAAcpP,EAAMoP,YACpB2lB,EAAuB/0B,EAAM+0B,qBAC7BpC,EAAmB3yB,EAAM2yB,iBACzBD,EAAgB1yB,EAAM0yB,cACtBjiB,EAAazQ,EAAMyQ,WACnB+mB,EAA4Bx3B,EAAMw3B,0BAClCC,EAAe53B,KAAKD,MACpByyB,EAA0BoF,EAAapF,wBACvC5oB,EAAgBguB,EAAahuB,cAEjC,IAAKipB,EACH,OAAO,KAGT,IAAIgF,EAAwBrF,EAA0B,EAAI,EACtDroB,EAASnK,KAAK20B,kBAAkBx0B,GAChC+J,EAAQlK,KAAKw3B,mBAAmBr3B,GAChC23B,EAAmBtF,EAA0B5oB,EAAgB,EAE7DmuB,EAAa5tB,EACbxM,EAAQqC,KAAKw2B,mBAEbmB,IACFI,EAAa5tB,EAAS2tB,EACtBn6B,EAAQuP,GAAc,GAAIlN,KAAKw2B,mBAAoB,CACjD3c,KAAM,KAIV,IAAIme,EAAe17B,EAAAA,cAAoBiR,GAAMmI,EAAAA,EAAAA,SAAS,GAAIvV,EAAO,CAC/D+V,aAAclW,KAAKi4B,0BACnBp6B,UAAWmC,KAAKG,MAAM+3B,sBACtB3oB,YAAa7J,KAAKC,IAAI,EAAG4J,EAAcujB,GAAoB+E,EAC3DpoB,YAAazP,KAAKq3B,sBAClBjhB,yBAA0BpW,KAAKuzB,sCAC/BppB,OAAQ4tB,EACRliB,SAAUqf,EAAuBl1B,KAAKm4B,mBAAgB/5B,EACtD8Q,IAAKlP,KAAKo4B,iBACVxoB,SAAUijB,EACVjiB,WAAYA,EACZjT,MAAOA,EACP2W,SAAU,KACVpK,MAAOA,KAGT,OAAIytB,EACKr7B,EAAAA,cAAoB,MAAO,CAChCuB,UAAW,6BACXF,MAAOuP,GAAc,GAAIlN,KAAKw2B,mBAAoB,CAChDrsB,OAAQA,EACRD,MAAOA,EACPmL,UAAW,YAEZ2iB,GAGEA,KAEP,CAAC,CACHt7B,IAAK,2BACLT,MAAO,SAAkCqE,EAAWC,GAClD,OAAID,EAAUsQ,aAAerQ,EAAUqQ,YAActQ,EAAUuQ,YAActQ,EAAUsQ,UAC9E,CACLD,WAAoC,MAAxBtQ,EAAUsQ,YAAsBtQ,EAAUsQ,YAAc,EAAItQ,EAAUsQ,WAAarQ,EAAUqQ,WACzGC,UAAkC,MAAvBvQ,EAAUuQ,WAAqBvQ,EAAUuQ,WAAa,EAAIvQ,EAAUuQ,UAAYtQ,EAAUsQ,WAIlG,SAIJ0hB,EA1uBT,CA2uBEj2B,EAAAA,gBAEF0H,EAAAA,EAAAA,GAAgBuuB,GAAW,eAAgB,CACzCwE,wBAAyB,GACzBK,yBAA0B,GAC1BK,qBAAsB,GACtBS,sBAAuB,GACvBjD,yBAAyB,EACzBC,sBAAsB,EACtBpC,iBAAkB,EAClBD,cAAe,EACfviB,gBAAiB,EACjBE,aAAc,EACd7S,MAAO,GACPw3B,oBAAqB,GACrBC,qBAAsB,GACtBC,iBAAkB,GAClBC,kBAAmB,GACnBqC,2BAA2B,EAC3BlB,6BAA6B,IAG/BlE,GAAU/N,UAiBN,GACJzjB,EAASwxB,KCnyBT,SAAU/kB,GAGR,SAAS6qB,EAAWl4B,EAAO+lB,GACzB,IAAIzY,EAcJ,OAZA1J,EAAAA,EAAAA,GAAgB/D,KAAMq4B,IAEtB5qB,GAAQC,EAAAA,EAAAA,GAA2B1N,MAAM2N,EAAAA,EAAAA,GAAgB0qB,GAAYx7B,KAAKmD,KAAMG,EAAO+lB,KACjFnmB,MAAQ,CACZmY,aAAc,EACd1N,YAAa,EACb2N,aAAc,EACdvH,WAAY,EACZC,UAAW,EACXuH,YAAa,GAEf3K,EAAMqI,UAAYrI,EAAMqI,UAAUtV,MAAKoN,EAAAA,EAAAA,GAAuBH,IACvDA,EA4CT,OA7DA0D,EAAAA,EAAAA,GAAUknB,EAAY7qB,IAoBtBpJ,EAAAA,EAAAA,GAAai0B,EAAY,CAAC,CACxB37B,IAAK,SACLT,MAAO,WACL,IAAI8e,EAAW/a,KAAKG,MAAM4a,SACtBjH,EAAc9T,KAAKD,MACnBmY,EAAepE,EAAYoE,aAC3B1N,EAAcsJ,EAAYtJ,YAC1B2N,EAAerE,EAAYqE,aAC3BvH,EAAakD,EAAYlD,WACzBC,EAAYiD,EAAYjD,UACxBuH,EAActE,EAAYsE,YAC9B,OAAO2C,EAAS,CACd7C,aAAcA,EACd1N,YAAaA,EACbqL,SAAU7V,KAAK8V,UACfqC,aAAcA,EACdvH,WAAYA,EACZC,UAAWA,EACXuH,YAAaA,MAGhB,CACD1b,IAAK,YACLT,MAAO,SAAmB0G,GACxB,IAAIuV,EAAevV,EAAKuV,aACpB1N,EAAc7H,EAAK6H,YACnB2N,EAAexV,EAAKwV,aACpBvH,EAAajO,EAAKiO,WAClBC,EAAYlO,EAAKkO,UACjBuH,EAAczV,EAAKyV,YACvBpY,KAAKI,SAAS,CACZ8X,aAAcA,EACd1N,YAAaA,EACb2N,aAAcA,EACdvH,WAAYA,EACZC,UAAWA,EACXuH,YAAaA,QAKZigB,EA9DT,CA+DE/7B,EAAAA,gBAGSkoB,UAOP,GCtFW,SAAS8T,GAAyB31B,GAC/C,IAAI9E,EAAY8E,EAAK9E,UACjB06B,EAAU51B,EAAK41B,QACf56B,EAAQgF,EAAKhF,MACjB,OAAOrB,EAAAA,cAAoB,MAAO,CAChCuB,UAAWA,EACXiB,KAAM,MACNnB,MAAOA,GACN46B,GAELD,GAAyB9T,UAAoD,KCX7E,IAaA,GAboB,CAKlBgU,IAAK,MAMLC,KAAM,QCHO,SAASC,GAAc/1B,GACpC,IAAIg2B,EAAgBh2B,EAAKg2B,cACrBlO,EAAa7U,EAAK,8CAA+C,CACnE,mDAAoD+iB,IAAkBC,GAAAA,IACtE,oDAAqDD,IAAkBC,GAAAA,OAEzE,OAAOt8B,EAAAA,cAAoB,MAAO,CAChCuB,UAAW4sB,EACXvgB,MAAO,GACPC,OAAQ,GACR0uB,QAAS,aACRF,IAAkBC,GAAAA,IAAoBt8B,EAAAA,cAAoB,OAAQ,CACnEoxB,EAAG,mBACApxB,EAAAA,cAAoB,OAAQ,CAC/BoxB,EAAG,mBACDpxB,EAAAA,cAAoB,OAAQ,CAC9BoxB,EAAG,gBACHoL,KAAM,UCnBK,SAASC,GAAsBp2B,GAC5C,IAAIq2B,EAAUr2B,EAAKq2B,QACfC,EAAQt2B,EAAKs2B,MACbC,EAASv2B,EAAKu2B,OACdP,EAAgBh2B,EAAKg2B,cACrBQ,EAAoBD,IAAWF,EAC/Bje,EAAW,CAACze,EAAAA,cAAoB,OAAQ,CAC1CuB,UAAW,+CACXnB,IAAK,QACL08B,MAAwB,kBAAVH,EAAqBA,EAAQ,MAC1CA,IASH,OAPIE,GACFpe,EAAS/N,KAAK1Q,EAAAA,cAAoBo8B,GAAe,CAC/Ch8B,IAAK,gBACLi8B,cAAeA,KAIZ5d,ECnBM,SAASse,GAAmB12B,GACzC,IAAI9E,EAAY8E,EAAK9E,UACjB06B,EAAU51B,EAAK41B,QACfh0B,EAAQ5B,EAAK4B,MACb7H,EAAMiG,EAAKjG,IACX48B,EAAa32B,EAAK22B,WAClBC,EAAmB52B,EAAK42B,iBACxBC,EAAgB72B,EAAK62B,cACrBC,EAAiB92B,EAAK82B,eACtBC,EAAkB/2B,EAAK+2B,gBACvBC,EAAUh3B,EAAKg3B,QACfh8B,EAAQgF,EAAKhF,MACbi8B,EAAY,CACd,gBAAiBr1B,EAAQ,GA0D3B,OAvDI+0B,GAAcC,GAAoBC,GAAiBC,GAAkBC,KACvEE,EAAU,cAAgB,MAC1BA,EAAUtlB,SAAW,EAEjBglB,IACFM,EAAUC,QAAU,SAAUzqB,GAC5B,OAAOkqB,EAAW,CAChBlqB,MAAOA,EACP7K,MAAOA,EACPo1B,QAASA,MAKXJ,IACFK,EAAUE,cAAgB,SAAU1qB,GAClC,OAAOmqB,EAAiB,CACtBnqB,MAAOA,EACP7K,MAAOA,EACPo1B,QAASA,MAKXH,IACFI,EAAUG,WAAa,SAAU3qB,GAC/B,OAAOoqB,EAAc,CACnBpqB,MAAOA,EACP7K,MAAOA,EACPo1B,QAASA,MAKXF,IACFG,EAAUI,YAAc,SAAU5qB,GAChC,OAAOqqB,EAAe,CACpBrqB,MAAOA,EACP7K,MAAOA,EACPo1B,QAASA,MAKXD,IACFE,EAAUK,cAAgB,SAAU7qB,GAClC,OAAOsqB,EAAgB,CACrBtqB,MAAOA,EACP7K,MAAOA,EACPo1B,QAASA,OAMVr9B,EAAAA,cAAoB,OAAOoZ,EAAAA,EAAAA,SAAS,GAAIkkB,EAAW,CACxD/7B,UAAWA,EACXnB,IAAKA,EACLoC,KAAM,MACNnB,MAAOA,IACL46B,GFtDNG,GAAclU,UAEV,GCHJuU,GAAsBvU,UAAoD,KCyD1E6U,GAAmB7U,UAAoD,KCrEvE,IAAI0V,GAEJ,SAAU7a,GAGR,SAAS6a,IAGP,OAFAn2B,EAAAA,EAAAA,GAAgB/D,KAAMk6B,IAEfxsB,EAAAA,EAAAA,GAA2B1N,MAAM2N,EAAAA,EAAAA,GAAgBusB,GAAQjtB,MAAMjN,KAAM9B,YAG9E,OARAiT,EAAAA,EAAAA,GAAU+oB,EAAQ7a,GAQX6a,EATT,CAUE59B,EAAAA,WClBF,SAASkQ,GAAQC,EAAQC,GAAkB,IAAIhN,EAAO5D,OAAO4D,KAAK+M,GAAS,GAAI3Q,OAAO2H,sBAAuB,CAAE,IAAIkJ,EAAU7Q,OAAO2H,sBAAsBgJ,GAAaC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO/Q,OAAOgR,yBAAyBL,EAAQI,GAAKE,eAAgBrN,EAAKsN,KAAKC,MAAMvN,EAAMiN,GAAY,OAAOjN,EAE9U,SAASwN,GAAcvN,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,UAAUC,OAAQyB,IAAK,CAAE,IAAI0D,EAAyB,MAAhBpF,UAAU0B,GAAa1B,UAAU0B,GAAK,GAAQA,EAAI,EAAK4M,GAAQlJ,GAAQ,GAAM6J,SAAQ,SAAUzQ,IAAOsH,EAAAA,EAAAA,GAAgBrE,EAAQjD,EAAK4G,EAAO5G,OAAsBZ,OAAOsR,0BAA6BtR,OAAOuR,iBAAiB1N,EAAQ7D,OAAOsR,0BAA0B9J,IAAmBkJ,GAAQlJ,GAAQ6J,SAAQ,SAAUzQ,GAAOZ,OAAOC,eAAe4D,EAAQjD,EAAKZ,OAAOgR,yBAAyBxJ,EAAQ5G,OAAe,OAAOiD,GDkB7fqE,EAAAA,EAAAA,GAAgBk2B,GAAQ,eAAgB,CACtCC,eEzBa,SAA+Bx3B,GAC5C,IAAIq2B,EAAUr2B,EAAKq2B,QACfW,EAAUh3B,EAAKg3B,QAEnB,MAA2B,oBAAhBA,EAAQ7K,IACV6K,EAAQ7K,IAAIkK,GAEZW,EAAQX,IFmBjB9iB,aG3Ba,SAA6BvT,GAC1C,IAAIy3B,EAAWz3B,EAAKy3B,SAEpB,OAAgB,MAAZA,EACK,GAEAC,OAAOD,IHsBhBE,qBAAsB1B,GAAAA,IACtB2B,SAAU,EACVC,WAAY,EACZC,eAAgB1B,GAChBp7B,MAAO,KAITu8B,GAAO1V,UAkEH,GC/EJ,IAAIkW,GAEJ,SAAUltB,GAGR,SAASktB,EAAMv6B,GACb,IAAIsN,EAaJ,OAXA1J,EAAAA,EAAAA,GAAgB/D,KAAM06B,IAEtBjtB,GAAQC,EAAAA,EAAAA,GAA2B1N,MAAM2N,EAAAA,EAAAA,GAAgB+sB,GAAO79B,KAAKmD,KAAMG,KACrEJ,MAAQ,CACZ46B,eAAgB,GAElBltB,EAAMmtB,cAAgBntB,EAAMmtB,cAAcp6B,MAAKoN,EAAAA,EAAAA,GAAuBH,IACtEA,EAAMotB,WAAaptB,EAAMotB,WAAWr6B,MAAKoN,EAAAA,EAAAA,GAAuBH,IAChEA,EAAMqI,UAAYrI,EAAMqI,UAAUtV,MAAKoN,EAAAA,EAAAA,GAAuBH,IAC9DA,EAAM0N,mBAAqB1N,EAAM0N,mBAAmB3a,MAAKoN,EAAAA,EAAAA,GAAuBH,IAChFA,EAAMmT,QAAUnT,EAAMmT,QAAQpgB,MAAKoN,EAAAA,EAAAA,GAAuBH,IACnDA,EAygBT,OAzhBA0D,EAAAA,EAAAA,GAAUupB,EAAOltB,IAmBjBpJ,EAAAA,EAAAA,GAAas2B,EAAO,CAAC,CACnBh+B,IAAK,kBACLT,MAAO,WACD+D,KAAKuN,MACPvN,KAAKuN,KAAK0F,gBAKb,CACDvW,IAAK,kBACLT,MAAO,SAAyB0G,GAC9B,IAAI0O,EAAY1O,EAAK0O,UACjB9M,EAAQ5B,EAAK4B,MAEjB,OAAIvE,KAAKuN,KACqBvN,KAAKuN,KAAK4c,iBAAiB,CACrD9Y,UAAWA,EACXI,SAAUlN,IAE0BsM,UAKjC,IAIR,CACDnU,IAAK,gCACLT,MAAO,SAAuCoI,GAC5C,IAAIkN,EAAclN,EAAMkN,YACpBE,EAAWpN,EAAMoN,SAEjBzR,KAAKuN,MACPvN,KAAKuN,KAAKgV,8BAA8B,CACtC9Q,SAAUA,EACVF,YAAaA,MAMlB,CACD7U,IAAK,iBACLT,MAAO,WACD+D,KAAKuN,MACPvN,KAAKuN,KAAK6c,oBAKb,CACD1tB,IAAK,oBACLT,MAAO,WACL,IAAI8I,EAAQ7G,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC5E48B,EAAoB/1B,EAAMwM,YAC1BA,OAAoC,IAAtBupB,EAA+B,EAAIA,EACjDC,EAAiBh2B,EAAM0M,SACvBA,OAA8B,IAAnBspB,EAA4B,EAAIA,EAE3C/6B,KAAKuN,MACPvN,KAAKuN,KAAKuK,kBAAkB,CAC1BrG,SAAUA,EACVF,YAAaA,MAMlB,CACD7U,IAAK,sBACLT,MAAO,WACL,IAAIsI,EAAQrG,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAE5E8B,KAAKuN,MACPvN,KAAKuN,KAAKuK,kBAAkB,CAC1BrG,SAAUlN,MAMf,CACD7H,IAAK,mBACLT,MAAO,WACL,IAAI4U,EAAY3S,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAEhF8B,KAAKuN,MACPvN,KAAKuN,KAAKgd,iBAAiB,CACzB1Z,UAAWA,MAMhB,CACDnU,IAAK,cACLT,MAAO,WACL,IAAIsI,EAAQrG,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAE5E8B,KAAKuN,MACPvN,KAAKuN,KAAKqV,aAAa,CACrBrR,YAAa,EACbE,SAAUlN,MAIf,CACD7H,IAAK,oBACLT,MAAO,WACL,GAAI+D,KAAKuN,KAAM,CACb,IAAIytB,GAAQhZ,EAAAA,GAAAA,aAAYhiB,KAAKuN,MAEzB/C,EAAcwwB,EAAMxwB,aAAe,EAEvC,OADkBwwB,EAAMzwB,aAAe,GAClBC,EAGvB,OAAO,IAER,CACD9N,IAAK,oBACLT,MAAO,WACL+D,KAAKi7B,uBAEN,CACDv+B,IAAK,qBACLT,MAAO,WACL+D,KAAKi7B,uBAEN,CACDv+B,IAAK,SACLT,MAAO,WACL,IAAI2X,EAAS5T,KAETgS,EAAchS,KAAKG,MACnB4a,EAAW/I,EAAY+I,SACvBld,EAAYmU,EAAYnU,UACxBq9B,EAAgBlpB,EAAYkpB,cAC5BC,EAAgBnpB,EAAYmpB,cAC5B1mB,EAAYzC,EAAYyC,UACxB2mB,EAAeppB,EAAYopB,aAC3BC,EAAoBrpB,EAAYqpB,kBAChClxB,EAAS6H,EAAY7H,OACrBuB,EAAKsG,EAAYtG,GACjB8e,EAAiBxY,EAAYwY,eAC7B8Q,EAAetpB,EAAYspB,aAC3BC,EAAWvpB,EAAYupB,SACvBp4B,EAAgB6O,EAAY7O,cAC5BxF,EAAQqU,EAAYrU,MACpBuM,EAAQ8H,EAAY9H,MACpBywB,EAAiB36B,KAAKD,MAAM46B,eAC5Ba,EAAsBN,EAAgB/wB,EAASA,EAASixB,EACxDK,EAAmC,oBAAjBH,EAA8BA,EAAa,CAC/D/2B,OAAQ,IACL+2B,EACDI,EAAqC,oBAAbH,EAA0BA,EAAS,CAC7Dh3B,OAAQ,IACLg3B,EAaL,OAXAv7B,KAAK27B,oBAAsB,GAC3Br/B,EAAAA,SAAAA,QAAuBye,GAAU5N,SAAQ,SAAUyuB,EAAQr3B,GACzD,IAAIs3B,EAAajoB,EAAOkoB,uBAAuBF,EAAQA,EAAOz7B,MAAMxC,OAEpEiW,EAAO+nB,oBAAoBp3B,GAAS2I,GAAc,CAChD9C,SAAU,UACTyxB,MAKEv/B,EAAAA,cAAoB,MAAO,CAChC,aAAc0D,KAAKG,MAAM,cACzB,kBAAmBH,KAAKG,MAAM,mBAC9B,gBAAiB7D,EAAAA,SAAAA,QAAuBye,GAAU5c,OAClD,gBAAiB6B,KAAKG,MAAMyP,SAC5B/R,UAAW+X,EAAK,0BAA2B/X,GAC3C6N,GAAIA,EACJ5M,KAAM,OACNnB,MAAOA,IACLu9B,GAAiBG,EAAkB,CACrCx9B,UAAW+X,EAAK,qCAAsC6lB,GACtDlD,QAASv4B,KAAK+7B,oBACdp+B,MAAOuP,GAAc,CACnB/C,OAAQixB,EACRhxB,SAAU,SACV0V,aAAc6a,EACdzwB,MAAOA,GACNwxB,KACDp/B,EAAAA,cAAoBiR,GAAMmI,EAAAA,EAAAA,SAAS,GAAI1V,KAAKG,MAAO,CACrD,gBAAiB,KACjB8T,oBAAoB,EACpBpW,UAAW+X,EAAK,gCAAiCulB,GACjDjlB,aAAclW,KAAK66B,WACnBprB,YAAavF,EACbqF,YAAa,EACbpF,OAAQqxB,EACR9vB,QAAItN,EACJiW,kBAAmBmW,EACnB3U,SAAU7V,KAAK8V,UACf9H,kBAAmBhO,KAAKmb,mBACxBjM,IAAKlP,KAAK4gB,QACV9hB,KAAM,WACN67B,eAAgBA,EAChBnqB,YAAarN,EACbxF,MAAOuP,GAAc,GAAIuH,EAAW,CAClCY,UAAW,iBAIhB,CACD3Y,IAAK,gBACLT,MAAO,SAAuB6L,GAC5B,IAAI8zB,EAAS9zB,EAAM8zB,OACfrqB,EAAczJ,EAAMyJ,YACpBzD,EAAchG,EAAMgG,YACpB4J,EAAS5P,EAAM4P,OACfiiB,EAAU7xB,EAAM6xB,QAChBloB,EAAW3J,EAAM2J,SACjBuqB,EAAgBh8B,KAAKG,MAAM67B,cAC3BC,EAAgBL,EAAOz7B,MACvBg6B,EAAiB8B,EAAc9B,eAC/BjkB,EAAe+lB,EAAc/lB,aAC7BrY,EAAYo+B,EAAcp+B,UAC1Bq+B,EAAaD,EAAcC,WAC3BlD,EAAUiD,EAAcjD,QACxBttB,EAAKuwB,EAAcvwB,GAMnBqO,EAAe7D,EAAa,CAC9BkkB,SANaD,EAAe,CAC5B+B,WAAYA,EACZlD,QAASA,EACTW,QAASA,IAITuC,WAAYA,EACZ3qB,YAAaA,EACbynB,QAASA,EACTlrB,YAAaA,EACb4J,OAAQA,EACRiiB,QAASA,EACTloB,SAAUA,IAWR9T,EAAQqC,KAAK27B,oBAAoBpqB,GACjC6nB,EAAgC,kBAAjBrf,EAA4BA,EAAe,KAI9D,OAAOzd,EAAAA,cAAoB,MAAO,CAChC,gBAAiBiV,EAAc,EAC/B,mBAAoB7F,EACpB7N,UAAW+X,EAAK,qCAAsC/X,GACtDnB,IAAK,MAAQ+U,EAAR,OAAiCF,EACtCsoB,QAlBY,SAAiBzqB,GAC7B4sB,GAAiBA,EAAc,CAC7BE,WAAYA,EACZlD,QAASA,EACT5pB,MAAOA,KAeTtQ,KAAM,WACNnB,MAAOA,EACPy7B,MAAOA,GACNrf,KAEJ,CACDrd,IAAK,gBACLT,MAAO,SAAuBgM,GAC5B,IAgCIk0B,EAAeC,EAAiBC,EAAgBC,EAAgBC,EAhChEX,EAAS3zB,EAAM2zB,OACfr3B,EAAQ0D,EAAM1D,MACdkO,EAAezS,KAAKG,MACpBq8B,EAAkB/pB,EAAa+pB,gBAC/BC,EAAchqB,EAAagqB,YAC3BC,EAAgBjqB,EAAaiqB,cAC7B7O,EAAOpb,EAAaob,KACpBqL,EAASzmB,EAAaymB,OACtBP,EAAgBlmB,EAAakmB,cAC7BgE,EAAiBf,EAAOz7B,MACxB+7B,EAAaS,EAAeT,WAC5BlD,EAAU2D,EAAe3D,QACzBsB,EAAuBqC,EAAerC,qBACtCsC,EAAcD,EAAeC,YAC7BnC,EAAiBkC,EAAelC,eAChC/uB,EAAKixB,EAAejxB,GACpButB,EAAQ0D,EAAe1D,MACvB4D,GAAeD,GAAe/O,EAC9BpD,EAAa7U,EAAK,wCAAyC4mB,EAAiBZ,EAAOz7B,MAAMq8B,gBAAiB,CAC5GM,8CAA+CD,IAG7Cl/B,EAAQqC,KAAK87B,uBAAuBF,EAAQ1uB,GAAc,GAAIuvB,EAAa,GAAIb,EAAOz7B,MAAMs8B,cAE5FM,EAAiBtC,EAAe,CAClCyB,WAAYA,EACZlD,QAASA,EACT4D,YAAaA,EACb3D,MAAOA,EACPC,OAAQA,EACRP,cAAeA,IAIjB,GAAIkE,GAAeH,EAAe,CAEhC,IAGIM,EAHkB9D,IAAWF,EAGQsB,EAAuB3B,IAAkBC,GAAAA,KAAqBA,GAAAA,IAAoBA,GAAAA,KAEvHiB,EAAU,SAAiBzqB,GAC7BytB,GAAehP,EAAK,CAClByM,qBAAsBA,EACtBlrB,MAAOA,EACP8pB,OAAQF,EACRL,cAAeqE,IAEjBN,GAAiBA,EAAc,CAC7BR,WAAYA,EACZlD,QAASA,EACT5pB,MAAOA,KAUXmtB,EAAkBX,EAAOz7B,MAAM,eAAiB84B,GAASD,EACzDsD,EAAiB,OACjBD,EAAiB,EACjBF,EAAgBtC,EAChBuC,EAVgB,SAAmBhtB,GACf,UAAdA,EAAM1S,KAAiC,MAAd0S,EAAM1S,KACjCm9B,EAAQzqB,IAkBd,OAPI8pB,IAAWF,IACbsD,EAAiB3D,IAAkBC,GAAAA,IAAoB,YAAc,cAMhEt8B,EAAAA,cAAoB,MAAO,CAChC,aAAcigC,EACd,YAAaD,EACbz+B,UAAW4sB,EACX/e,GAAIA,EACJhP,IAAK,aAAe6H,EACpBs1B,QAASsC,EACTlhB,UAAWmhB,EACXt9B,KAAM,eACNnB,MAAOA,EACP2W,SAAU+nB,GACTU,KAEJ,CACDrgC,IAAK,aACLT,MAAO,SAAoBiM,GACzB,IAAI6P,EAAS/X,KAETuE,EAAQ2D,EAAMuJ,SACd3D,EAAc5F,EAAM4F,YACpBpR,EAAMwL,EAAMxL,IACZgb,EAASxP,EAAMwP,OACf/Z,EAAQuK,EAAMvK,MACdiV,EAAe5S,KAAKG,MACpB4a,EAAWnI,EAAamI,SACxBue,EAAa1mB,EAAa0mB,WAC1BC,EAAmB3mB,EAAa2mB,iBAChCG,EAAkB9mB,EAAa8mB,gBAC/BD,EAAiB7mB,EAAa6mB,eAC9BD,EAAgB5mB,EAAa4mB,cAC7B8B,EAAe1oB,EAAa0oB,aAC5B2B,EAAYrqB,EAAaqqB,UACzBjT,EAAcpX,EAAaoX,YAC3BuR,EAAW3oB,EAAa2oB,SACxBZ,EAAiB36B,KAAKD,MAAM46B,eAC5Bc,EAAmC,oBAAjBH,EAA8BA,EAAa,CAC/D/2B,MAAOA,IACJ+2B,EACDI,EAAqC,oBAAbH,EAA0BA,EAAS,CAC7Dh3B,MAAOA,IACJg3B,EACD5B,EAAUsD,EAAU,CACtB14B,MAAOA,IAELg0B,EAAUj8B,EAAAA,SAAAA,QAAuBye,GAAUqK,KAAI,SAAUwW,EAAQrqB,GACnE,OAAOwG,EAAO6iB,cAAc,CAC1BgB,OAAQA,EACRrqB,YAAaA,EACbzD,YAAaA,EACb4J,OAAQA,EACRiiB,QAASA,EACTloB,SAAUlN,EACVo2B,eAAgBA,OAGhB98B,EAAY+X,EAAK,+BAAgC6lB,GAEjDyB,EAAiBhwB,GAAc,GAAIvP,EAAO,CAC5CwM,OAAQnK,KAAKm9B,cAAc54B,GAC3B6F,SAAU,SACV0V,aAAc6a,GACbe,GAEH,OAAO1R,EAAY,CACjBnsB,UAAWA,EACX06B,QAASA,EACTh0B,MAAOA,EACPuJ,YAAaA,EACbpR,IAAKA,EACL48B,WAAYA,EACZC,iBAAkBA,EAClBG,gBAAiBA,EACjBD,eAAgBA,EAChBD,cAAeA,EACfG,QAASA,EACTh8B,MAAOu/B,MAOV,CACDxgC,IAAK,yBACLT,MAAO,SAAgC2/B,GACrC,IAAIwB,EAAcl/B,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAClFm/B,EAAY,GAAG74B,OAAOo3B,EAAOz7B,MAAMo6B,SAAU,KAAK/1B,OAAOo3B,EAAOz7B,MAAMq6B,WAAY,KAAKh2B,OAAOo3B,EAAOz7B,MAAM+J,MAAO,MAElHvM,EAAQuP,GAAc,GAAIkwB,EAAa,CACzCE,KAAMD,EACNE,OAAQF,EACRG,WAAYH,IAWd,OARIzB,EAAOz7B,MAAM4V,WACfpY,EAAMoY,SAAW6lB,EAAOz7B,MAAM4V,UAG5B6lB,EAAOz7B,MAAMs9B,WACf9/B,EAAM8/B,SAAW7B,EAAOz7B,MAAMs9B,UAGzB9/B,IAER,CACDjB,IAAK,oBACLT,MAAO,WACL,IAAIyhC,EAAS19B,KAEToT,EAAepT,KAAKG,MACpB4a,EAAW3H,EAAa2H,SAG5B,OAFoB3H,EAAa8nB,cACL,GAAK5+B,EAAAA,SAAAA,QAAuBye,IAC3CqK,KAAI,SAAUwW,EAAQr3B,GACjC,OAAOm5B,EAAOC,cAAc,CAC1B/B,OAAQA,EACRr3B,MAAOA,SAIZ,CACD7H,IAAK,gBACLT,MAAO,SAAuBwV,GAC5B,IAAI5B,EAAY7P,KAAKG,MAAM0P,UAC3B,MAA4B,oBAAdA,EAA2BA,EAAU,CACjDtL,MAAOkN,IACJ5B,IAEN,CACDnT,IAAK,YACLT,MAAO,SAAmBkM,GACxB,IAAI+P,EAAe/P,EAAM+P,aACrBC,EAAehQ,EAAMgQ,aACrBtH,EAAY1I,EAAM0I,WAEtBgF,EADe7V,KAAKG,MAAM0V,UACjB,CACPqC,aAAcA,EACdC,aAAcA,EACdtH,UAAWA,MAGd,CACDnU,IAAK,qBACLT,MAAO,SAA4Bwc,GACjC,IAAI/J,EAAwB+J,EAAM/J,sBAC9BE,EAAuB6J,EAAM7J,qBAC7BE,EAAgB2J,EAAM3J,cACtBE,EAAeyJ,EAAMzJ,cAEzBoZ,EADqBpoB,KAAKG,MAAMioB,gBACjB,CACbhR,mBAAoB1I,EACpB2I,kBAAmBzI,EACnBqI,WAAYnI,EACZoI,UAAWlI,MAGd,CACDtS,IAAK,UACLT,MAAO,SAAiBiT,GACtBlP,KAAKuN,KAAO2B,IAEb,CACDxS,IAAK,qBACLT,MAAO,WACL,IAAI0+B,EAAiB36B,KAAK49B,oBAC1B59B,KAAKI,SAAS,CACZu6B,eAAgBA,QAKfD,EA1hBT,CA2hBEp+B,EAAAA,gBAEF0H,EAAAA,EAAAA,GAAgB02B,GAAO,eAAgB,CACrCQ,eAAe,EACfliB,iBAAkB,GAClBoiB,aAAc,EACdqB,YAAa,GACbjS,eAAgB,WACd,OAAO,MAETpC,eAAgB,WACd,OAAO,MAETvS,SAAU,WACR,OAAO,MAETS,sBAAuBqU,EACvBpU,iBAAkB,GAClByT,YAAaqP,GACbgC,kBAAmB/C,GACnBiD,SAAU,GACVjyB,kBAAmB,OACnBnG,eAAgB,EAChBxF,MAAO,KAIT+8B,GAAMlW,UAoNF,GG7xBJ,ICTIqZ,GAAmB,GACnBC,GAA4B,KAC5BC,GAAgC,KAEpC,SAASC,KACHD,KACFA,GAAgC,KAE5Bp0B,SAASU,MAAqC,MAA7ByzB,KACnBn0B,SAASU,KAAK1M,MAAMsY,cAAgB6nB,IAGtCA,GAA4B,MAIhC,SAASG,KACPD,KACAH,GAAiB1wB,SAAQ,SAAU+wB,GACjC,OAAOA,EAASC,wBAgBpB,SAASC,GAAehvB,GAClBA,EAAMwgB,gBAAkBhpB,QAAuC,MAA7Bk3B,IAAqCn0B,SAASU,OAClFyzB,GAA4Bn0B,SAASU,KAAK1M,MAAMsY,cAChDtM,SAASU,KAAK1M,MAAMsY,cAAgB,QAfxC,WACM8nB,IACFjyB,EAAuBiyB,IAGzB,IAAIM,EAAiB,EACrBR,GAAiB1wB,SAAQ,SAAU+wB,GACjCG,EAAiB34B,KAAKC,IAAI04B,EAAgBH,EAAS/9B,MAAMyX,+BAE3DmmB,GAAgC/xB,EAAwBiyB,GAAuCI,GAS/FC,GACAT,GAAiB1wB,SAAQ,SAAU+wB,GAC7BA,EAAS/9B,MAAMo+B,gBAAkBnvB,EAAMwgB,eACzCsO,EAASM,+BAKR,SAASC,GAAuB7V,EAAW5M,GAC3C6hB,GAAiBl1B,MAAK,SAAUu1B,GACnC,OAAOA,EAAS/9B,MAAMo+B,gBAAkBviB,MAExCA,EAAQ8C,iBAAiB,SAAUsf,IAGrCP,GAAiB7wB,KAAK4b,GAEjB,SAAS8V,GAAyB9V,EAAW5M,IAClD6hB,GAAmBA,GAAiBjxB,QAAO,SAAUsxB,GACnD,OAAOA,IAAatV,MAGAzqB,SACpB6d,EAAQmD,oBAAoB,SAAUif,IAElCL,KACFjyB,EAAuBiyB,IACvBC,OChEN,ICGItzB,GAAQC,GDHRg0B,GAAW,SAAkB3iB,GAC/B,OAAOA,IAAYpV,QAGjBg4B,GAAiB,SAAwB5iB,GAC3C,OAAOA,EAAQ6iB,yBAGV,SAASC,GAAcP,EAAep+B,GAC3C,GAAKo+B,EAKE,IAAII,GAASJ,GAAgB,CAClC,IAAI9iB,EAAU7U,OACVm4B,EAActjB,EAAQsjB,YACtBC,EAAavjB,EAAQujB,WACzB,MAAO,CACL70B,OAA+B,kBAAhB40B,EAA2BA,EAAc,EACxD70B,MAA6B,kBAAf80B,EAA0BA,EAAa,GAGvD,OAAOJ,GAAeL,GAbtB,MAAO,CACLp0B,OAAQhK,EAAM8+B,aACd/0B,MAAO/J,EAAM++B,aAqBZ,SAASC,GAAkBnjB,EAASojB,GACzC,GAAIT,GAASS,IAAcz1B,SAAS01B,gBAAiB,CACnD,IAAIC,EAAmB31B,SAAS01B,gBAC5BE,EAAcX,GAAe5iB,GAC7BwjB,EAAgBZ,GAAeU,GACnC,MAAO,CACLr1B,IAAKs1B,EAAYt1B,IAAMu1B,EAAcv1B,IACrC4P,KAAM0lB,EAAY1lB,KAAO2lB,EAAc3lB,MAGzC,IAAIxQ,EAAeo2B,GAAgBL,GAE/BM,EAAed,GAAe5iB,GAE9B2jB,EAAiBf,GAAeQ,GAEpC,MAAO,CACLn1B,IAAKy1B,EAAaz1B,IAAMZ,EAAaY,IAAM01B,EAAe11B,IAC1D4P,KAAM6lB,EAAa7lB,KAAOxQ,EAAawQ,KAAO8lB,EAAe9lB,MAS5D,SAAS4lB,GAAgBzjB,GAC9B,OAAI2iB,GAAS3iB,IAAYrS,SAAS01B,gBACzB,CACLp1B,IAAK,YAAarD,OAASA,OAAOg5B,QAAUj2B,SAAS01B,gBAAgBxuB,UACrEgJ,KAAM,YAAajT,OAASA,OAAOi5B,QAAUl2B,SAAS01B,gBAAgBzuB,YAGjE,CACL3G,IAAK+R,EAAQnL,UACbgJ,KAAMmC,EAAQpL,YChEpB,SAASpE,GAAQC,EAAQC,GAAkB,IAAIhN,EAAO5D,OAAO4D,KAAK+M,GAAS,GAAI3Q,OAAO2H,sBAAuB,CAAE,IAAIkJ,EAAU7Q,OAAO2H,sBAAsBgJ,GAAaC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO/Q,OAAOgR,yBAAyBL,EAAQI,GAAKE,eAAgBrN,EAAKsN,KAAKC,MAAMvN,EAAMiN,GAAY,OAAOjN,EAE9U,SAASwN,GAAcvN,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,UAAUC,OAAQyB,IAAK,CAAE,IAAI0D,EAAyB,MAAhBpF,UAAU0B,GAAa1B,UAAU0B,GAAK,GAAQA,EAAI,EAAK4M,GAAQlJ,GAAQ,GAAM6J,SAAQ,SAAUzQ,IAAOsH,EAAAA,EAAAA,GAAgBrE,EAAQjD,EAAK4G,EAAO5G,OAAsBZ,OAAOsR,0BAA6BtR,OAAOuR,iBAAiB1N,EAAQ7D,OAAOsR,0BAA0B9J,IAAmBkJ,GAAQlJ,GAAQ6J,SAAQ,SAAUzQ,GAAOZ,OAAOC,eAAe4D,EAAQjD,EAAKZ,OAAOgR,yBAAyBxJ,EAAQ5G,OAAe,OAAOiD,EAYtf,IAEHmgC,GAAY,WACd,MAAyB,qBAAXl5B,OAAyBA,YAASxI,GAG9C2hC,IAAkBp1B,GAAQD,GAE9B,SAAU8C,GAGR,SAASuyB,IACP,IAAI7lB,EAEAzM,GAEJ1J,EAAAA,EAAAA,GAAgB/D,KAAM+/B,GAEtB,IAAK,IAAI5lB,EAAOjc,UAAUC,OAAQic,EAAO,IAAI9X,MAAM6X,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQnc,UAAUmc,GAuGzB,OApGA5M,GAAQC,EAAAA,EAAAA,GAA2B1N,MAAOka,GAAmBvM,EAAAA,EAAAA,GAAgBoyB,IAAiBljC,KAAKoQ,MAAMiN,EAAkB,CAACla,MAAMwE,OAAO4V,MAEzIpW,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,UAAWqyB,OAE1D97B,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,cAAc,IAE7DzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,mBAAoB,IAEnEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,oBAAqB,IAEpEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,4BAAwB,IAEvEzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,cAAU,IAEzDzJ,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,QAASP,GAAc,GAAI4xB,GAAcrxB,EAAMtN,MAAMo+B,cAAe9wB,EAAMtN,OAAQ,CAC/H2N,aAAa,EACb8C,WAAY,EACZC,UAAW,MAGb7M,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,kBAAkB,SAAUuO,IACrEA,GAAaA,aAAmBsF,SAClCC,QAAQC,KAAK,qEAGf/T,EAAMgU,OAASzF,EAEfvO,EAAMuyB,qBAGRh8B,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,kBAAkB,SAAU9K,GACzE,IAAIkO,EAAYlO,EAAKkO,UAErB,GAAIpD,EAAM1N,MAAM8Q,YAAcA,EAA9B,CAIA,IAAI0tB,EAAgB9wB,EAAMtN,MAAMo+B,cAE5BA,IACoC,oBAA3BA,EAAc0B,SACvB1B,EAAc0B,SAAS,EAAGpvB,EAAYpD,EAAMyyB,kBAE5C3B,EAAc1tB,UAAYA,EAAYpD,EAAMyyB,uBAKlDl8B,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,2BAA2B,SAAUuO,GAC9EA,IAAYpV,OACdA,OAAOkY,iBAAiB,SAAUrR,EAAMgT,WAAW,GAEnDhT,EAAM+S,qBAAqB9C,kBAAkB1B,EAASvO,EAAMgT,eAIhEzc,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,6BAA6B,SAAUuO,GAChFA,IAAYpV,OACdA,OAAOuY,oBAAoB,SAAU1R,EAAMgT,WAAW,GAC7CzE,GACTvO,EAAM+S,qBAAqBxB,qBAAqBhD,EAASvO,EAAMgT,eAInEzc,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,aAAa,WAC1DA,EAAMuyB,qBAGRh8B,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,6BAA6B,WAC1E,GAAKA,EAAM0yB,WAAX,CAIA,IAAItqB,EAAWpI,EAAMtN,MAAM0V,SACvB0oB,EAAgB9wB,EAAMtN,MAAMo+B,cAEhC,GAAIA,EAAe,CACjB,IAAIl1B,EAAeo2B,GAAgBlB,GAC/B3tB,EAAalL,KAAKC,IAAI,EAAG0D,EAAawQ,KAAOpM,EAAM2yB,mBACnDvvB,EAAYnL,KAAKC,IAAI,EAAG0D,EAAaY,IAAMwD,EAAMyyB,kBAErDzyB,EAAMrN,SAAS,CACb0N,aAAa,EACb8C,WAAYA,EACZC,UAAWA,IAGbgF,EAAS,CACPjF,WAAYA,EACZC,UAAWA,UAKjB7M,EAAAA,EAAAA,IAAgB4J,EAAAA,EAAAA,GAAuBH,GAAQ,sBAAsB,WACnEA,EAAMrN,SAAS,CACb0N,aAAa,OAIVL,EAkGT,OAnNA0D,EAAAA,EAAAA,GAAU4uB,EAAgBvyB,IAoH1BpJ,EAAAA,EAAAA,GAAa27B,EAAgB,CAAC,CAC5BrjC,IAAK,iBACLT,MAAO,WACL,IAAIsiC,EAAgBrgC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK8B,KAAKG,MAAMo+B,cAC/F7e,EAAW1f,KAAKG,MAAMuf,SACtB5L,EAAc9T,KAAKD,MACnBoK,EAAS2J,EAAY3J,OACrBD,EAAQ4J,EAAY5J,MACpBm2B,EAAWrgC,KAAKyhB,QAAU6e,GAAAA,YAAqBtgC,MAEnD,GAAIqgC,aAAoB/e,SAAWid,EAAe,CAChD,IAAI55B,EAASw6B,GAAkBkB,EAAU9B,GACzCv+B,KAAKkgC,iBAAmBv7B,EAAOsF,IAC/BjK,KAAKogC,kBAAoBz7B,EAAOkV,KAGlC,IAAI0mB,EAAazB,GAAcP,EAAev+B,KAAKG,OAE/CgK,IAAWo2B,EAAWp2B,QAAUD,IAAUq2B,EAAWr2B,QACvDlK,KAAKI,SAAS,CACZ+J,OAAQo2B,EAAWp2B,OACnBD,MAAOq2B,EAAWr2B,QAEpBwV,EAAS,CACPvV,OAAQo2B,EAAWp2B,OACnBD,MAAOq2B,EAAWr2B,WAIvB,CACDxN,IAAK,oBACLT,MAAO,WACL,IAAIsiC,EAAgBv+B,KAAKG,MAAMo+B,cAC/Bv+B,KAAKwgB,qBAAuBlF,IAC5Btb,KAAKggC,eAAezB,GAEhBA,IACFE,GAAuBz+B,KAAMu+B,GAE7Bv+B,KAAKwgC,wBAAwBjC,IAG/Bv+B,KAAKmgC,YAAa,IAEnB,CACDzjC,IAAK,qBACLT,MAAO,SAA4B0E,EAAWJ,GAC5C,IAAIg+B,EAAgBv+B,KAAKG,MAAMo+B,cAC3BkC,EAAoB9/B,EAAU49B,cAE9BkC,IAAsBlC,GAAsC,MAArBkC,GAA8C,MAAjBlC,IACtEv+B,KAAKggC,eAAezB,GACpBG,GAAyB1+B,KAAMygC,GAC/BhC,GAAuBz+B,KAAMu+B,GAE7Bv+B,KAAK0gC,0BAA0BD,GAE/BzgC,KAAKwgC,wBAAwBjC,MAGhC,CACD7hC,IAAK,uBACLT,MAAO,WACL,IAAIsiC,EAAgBv+B,KAAKG,MAAMo+B,cAE3BA,IACFG,GAAyB1+B,KAAMu+B,GAE/Bv+B,KAAK0gC,0BAA0BnC,IAGjCv+B,KAAKmgC,YAAa,IAEnB,CACDzjC,IAAK,SACLT,MAAO,WACL,IAAI8e,EAAW/a,KAAKG,MAAM4a,SACtBxG,EAAevU,KAAKD,MACpB+N,EAAcyG,EAAazG,YAC3B+C,EAAY0D,EAAa1D,UACzBD,EAAa2D,EAAa3D,WAC1BzG,EAASoK,EAAapK,OACtBD,EAAQqK,EAAarK,MACzB,OAAO6Q,EAAS,CACd4lB,cAAe3gC,KAAK4gC,eACpB/e,cAAe7hB,KAAK8hB,eACpB3X,OAAQA,EACR2D,YAAaA,EACb8C,WAAYA,EACZC,UAAWA,EACX3G,MAAOA,QAKN61B,EApNT,CAqNEzjC,EAAAA,gBAAsB0H,EAAAA,EAAAA,GAAgB0G,GAAQ,YAAqD,MA6BjGC,KAEJ3G,EAAAA,EAAAA,GAAgB+7B,GAAgB,eAAgB,CAC9CrgB,SAAU,aACV7J,SAAU,aACV+B,2BA/PgC,IAgQhC2mB,cAAeuB,KACfb,aAAc,EACdC,YAAa,K,oNCjRX2B,EAAS,SAAUC,GAGrB,SAASD,IACP,IAAIl+B,EAEAgI,EAAO8C,EAAOszB,GAElBh9B,EAAAA,EAAAA,SAAgB/D,KAAM6gC,GAEtB,IAAK,IAAI1mB,EAAOjc,UAAUC,OAAQic,EAAO9X,MAAM6X,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQnc,UAAUmc,GAGzB,OAAe1P,EAAS8C,GAAQC,EAAAA,EAAAA,SAA2B1N,MAAO2C,EAAOk+B,EAAOG,WAAallC,OAAOmlC,eAAeJ,IAAShkC,KAAKoQ,MAAMtK,EAAM,CAAC3C,MAAMwE,OAAO4V,KAAiB3M,EAAMyzB,MAAQ,WACxLzzB,EAAM0zB,kBACN1zB,EAAMtN,MAAMlB,WACXwO,EAAM2zB,gBAAkB,WACrB3zB,EAAMtN,MAAMjD,WACduQ,EAAM4zB,WAAal2B,YAAW,WAC5BsC,EAAMyzB,UACkB,IAAvBzzB,EAAMtN,MAAMjD,YAEhBuQ,EAAM0zB,gBAAkB,WACrB1zB,EAAM4zB,aACR11B,aAAa8B,EAAM4zB,YACnB5zB,EAAM4zB,WAAa,OAZhBN,EAcJp2B,GAAQ+C,EAAAA,EAAAA,SAA2BD,EAAOszB,GAsC/C,OAjEA5vB,EAAAA,EAAAA,SAAU0vB,EAAQC,IA8BlB18B,EAAAA,EAAAA,SAAay8B,EAAQ,CAAC,CACpBnkC,IAAK,oBACLT,MAAO,WACL+D,KAAKohC,oBAEN,CACD1kC,IAAK,uBACLT,MAAO,WACL+D,KAAKmhC,oBAEN,CACDzkC,IAAK,SACLT,MAAO,WACL,IAAIqlC,EAEAnhC,EAAQH,KAAKG,MACbohC,EAAiBphC,EAAM9C,UAAY,UACnCQ,GAAayjC,EAAa,IAAIt9B,EAAAA,EAAAA,SAAgBs9B,EAAY,GAAKC,EAAgB,IAAIv9B,EAAAA,EAAAA,SAAgBs9B,EAAYC,EAAiB,YAAaphC,EAAMnB,WAAWgF,EAAAA,EAAAA,SAAgBs9B,EAAYnhC,EAAMtC,YAAasC,EAAMtC,WAAYyjC,GACnO,OAAOhlC,EAAAA,cACL,MACA,CAAEuB,UAAW4sB,GAAAA,CAAW5sB,GAAYF,MAAOwC,EAAMxC,OACjDrB,EAAAA,cACE,MACA,CAAEuB,UAAW0jC,EAAiB,YAC9BphC,EAAM4a,UAER5a,EAAMnB,SAAW1C,EAAAA,cACf,IACA,CAAEgY,SAAU,IAAKulB,QAAS75B,KAAKkhC,MAAOrjC,UAAW0jC,EAAiB,UAClEjlC,EAAAA,cAAoB,OAAQ,CAAEuB,UAAW0jC,EAAiB,cACxD,UAKHV,EAlEI,CAmEX7/B,EAAAA,WAEF6/B,EAAOrc,UAAY,CACjBtnB,SAAUskC,IAAAA,OACVviC,QAASuiC,IAAAA,KACTzmB,SAAUymB,IAAAA,KAEZX,EAAOY,aAAe,CACpBC,MAAO,aACPziC,QAAS,aAET/B,SAAU,IACVS,MAAO,CACLymB,MAAO,QAGX,QC7EIud,EAAO,EACPr1B,EAAMD,KAAKC,MAEf,SAASs1B,IACP,MAAO,kBAAoBt1B,EAAM,IAAMq1B,IAGzC,IAAIE,EAAe,SAAUf,GAG3B,SAASe,IACP,IAAIl/B,EAEAgI,EAAO8C,EAAOszB,GAElBh9B,EAAAA,EAAAA,SAAgB/D,KAAM6hC,GAEtB,IAAK,IAAI1nB,EAAOjc,UAAUC,OAAQic,EAAO9X,MAAM6X,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQnc,UAAUmc,GAGzB,OAAe1P,EAAS8C,GAAQC,EAAAA,EAAAA,SAA2B1N,MAAO2C,EAAOk/B,EAAab,WAAallC,OAAOmlC,eAAeY,IAAehlC,KAAKoQ,MAAMtK,EAAM,CAAC3C,MAAMwE,OAAO4V,KAAiB3M,EAAM1N,MAAQ,CACpM+hC,QAAS,IACRr0B,EAAMs0B,IAAM,SAAUhkC,GACvB,IAAIrB,EAAMqB,EAAOrB,IAAMqB,EAAOrB,KAAOklC,IACrCn0B,EAAMrN,UAAS,SAAU4hC,GACvB,IAAIF,EAAUE,EAAcF,QAC5B,IAAKA,EAAQl1B,QAAO,SAAUq1B,GAC5B,OAAOA,EAAEvlC,MAAQA,KAChByB,OACD,MAAO,CACL2jC,QAASA,EAAQt9B,OAAOzG,QAI7B0P,EAAMghB,OAAS,SAAU/xB,GAC1B+Q,EAAMrN,UAAS,SAAU4hC,GACvB,MAAO,CACLF,QAASE,EAAcF,QAAQl1B,QAAO,SAAU7O,GAC9C,OAAOA,EAAOrB,MAAQA,UAlBvBqkC,EAsBJp2B,GAAQ+C,EAAAA,EAAAA,SAA2BD,EAAOszB,GA6C/C,OAhFA5vB,EAAAA,EAAAA,SAAU0wB,EAAcf,IAsCxB18B,EAAAA,EAAAA,SAAay9B,EAAc,CAAC,CAC1BnlC,IAAK,oBACLT,MAAO,WACL,IAAIkE,EAAQH,KAAKG,MACbvC,EAAiBuC,EAAMvC,eAI3B,OAHKA,GAAkBuC,EAAM4c,YAC3Bnf,EAAiBuC,EAAM9C,UAAY,IAAM8C,EAAM4c,WAE1Cnf,IAER,CACDlB,IAAK,SACLT,MAAO,WACL,IACIqlC,EADA1tB,EAAS5T,KAGTG,EAAQH,KAAKG,MACb+hC,EAAcliC,KAAKD,MAAM+hC,QAAQ1c,KAAI,SAAUrnB,GACjD,IAAIkB,ECvEG,WACb,IAAImb,EAAO,GAAG8T,MAAMrxB,KAAKqB,UAAW,GAEpC,OAAoB,IAAhBkc,EAAKjc,OACAic,EAAK,GAGP,WACL,IAAK,IAAIxa,EAAI,EAAGA,EAAIwa,EAAKjc,OAAQyB,IAC3Bwa,EAAKxa,IAAMwa,EAAKxa,GAAGqN,OACrBmN,EAAKxa,GAAGqN,MAAMjN,KAAM9B,YD6DNikC,CAAsBvuB,EAAO6a,OAAOjuB,KAAKoT,EAAQ7V,EAAOrB,KAAMqB,EAAOkB,SACnF,OAAO3C,EAAAA,cACLukC,GACAnrB,EAAAA,EAAAA,SAAS,CACPrY,UAAW8C,EAAM9C,WAChBU,EAAQ,CACTkB,QAASA,IAEXlB,EAAOC,YAGPH,GAAayjC,EAAa,IAAIt9B,EAAAA,EAAAA,SAAgBs9B,EAAYnhC,EAAM9C,UAAW,IAAI2G,EAAAA,EAAAA,SAAgBs9B,EAAYnhC,EAAMtC,YAAasC,EAAMtC,WAAYyjC,GACpJ,OAAOhlC,EAAAA,cACL,MACA,CAAEuB,UAAWukC,GAAAA,CAAWvkC,GAAYF,MAAOwC,EAAMxC,OACjDrB,EAAAA,cACE+lC,EAAAA,EACA,CAAEzkC,eAAgBoC,KAAKsiC,qBACvBJ,QAMDL,EAjFU,CAkFjB7gC,EAAAA,WAEF6gC,EAAard,UAAY,CACvBnnB,UAAWmkC,IAAAA,OACX5jC,eAAgB4jC,IAAAA,OAChBzkB,UAAWykB,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,SAClD7jC,MAAO6jC,IAAAA,QAETK,EAAaJ,aAAe,CAC1BpkC,UAAW,mBACX0f,UAAW,OACXpf,MAAO,CACLsM,IAAK,GACL4P,KAAM,QAKVgoB,EAAankC,YAAc,SAAiC6kC,EAAYhlC,GACtE,IAAI8G,EAAQk+B,GAAc,GACtBC,EAAen+B,EAAMm+B,aACrBriC,GAAQkD,EAAAA,EAAAA,GAAyBgB,EAAO,CAAC,iBAEzCo+B,OAAM,EACND,EACFC,EAAMD,KAENC,EAAM94B,SAAS9K,cAAc,OAC7B8K,SAASU,KAAKC,YAAYm4B,IAE5B,IAAIC,GAAS,EAuBbpC,EAAAA,OAAgBhkC,EAAAA,cAAoBulC,GAAcnsB,EAAAA,EAAAA,SAAS,GAAIvV,EAAO,CAAE+O,IAtBxE,SAAapR,GACP4kC,IAGJA,GAAS,EACTnlC,EAAS,CACPQ,OAAQ,SAAgB4kC,GACtB7kC,EAAaikC,IAAIY,IAEnBC,aAAc,SAAsBlmC,GAClCoB,EAAa2wB,OAAO/xB,IAGtBksB,UAAW9qB,EACXL,QAAS,WACP6iC,EAAAA,uBAAgCmC,GAC3BD,GACH74B,SAASU,KAAKI,YAAYg4B,WAKoDA,IAGxF,IE/JA,EF+JA,G,4BG/JA,c,qBCDe,SAASI,EAA8Bv/B,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEI5G,EAAKkD,EAFLD,EAAS,GACTmjC,EAAahnC,OAAO4D,KAAK4D,GAG7B,IAAK1D,EAAI,EAAGA,EAAIkjC,EAAW3kC,OAAQyB,IACjClD,EAAMomC,EAAWljC,GACb2D,EAAS1D,QAAQnD,IAAQ,IAC7BiD,EAAOjD,GAAO4G,EAAO5G,IAGvB,OAAOiD,E,6HCRM,SAASiqB,EAAmBqD,GACzC,OCJa,SAA4BA,GACzC,GAAI3qB,MAAMC,QAAQ0qB,GAAM,OAAO,EAAA8V,EAAA,GAAiB9V,GDGzC,CAAkBA,IELZ,SAA0B+V,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAO1gC,MAAM6gC,KAAKH,GFInF,CAAgB/V,KAAQ,EAAAmW,EAAA,GAA2BnW,IGLvE,WACb,MAAM,IAAIoW,UAAU,wIHIwE","sources":["../node_modules/antd-mobile/lib/toast/index.js","../node_modules/antd-mobile/lib/toast/style/css.js","../node_modules/babel-runtime/helpers/objectWithoutProperties.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/clsx/dist/clsx.m.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/react-virtualized/dist/es/Grid/types.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/rmc-notification/es/Notice.js","../node_modules/rmc-notification/es/Notification.js","../node_modules/rc-util/es/createChainedFunction.js","../node_modules/rmc-notification/es/index.js","webpack://my-app/./node_modules/antd-mobile/lib/toast/style/index.css?f821","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _classnames2 = require('classnames');\n\nvar _classnames3 = _interopRequireDefault(_classnames2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _rmcNotification = require('rmc-notification');\n\nvar _rmcNotification2 = _interopRequireDefault(_rmcNotification);\n\nvar _icon = require('../icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar SHORT = 3;\nvar _config = {\n    duration: SHORT,\n    mask: true\n};\nvar messageInstance = void 0;\nvar prefixCls = 'am-toast';\nfunction getMessageInstance(mask, callback) {\n    var _classnames;\n\n    if (messageInstance) {\n        messageInstance.destroy();\n        messageInstance = null;\n    }\n    _rmcNotification2['default'].newInstance({\n        prefixCls: prefixCls,\n        style: {},\n        transitionName: 'am-fade',\n        className: (0, _classnames3['default'])((_classnames = {}, (0, _defineProperty3['default'])(_classnames, prefixCls + '-mask', mask), (0, _defineProperty3['default'])(_classnames, prefixCls + '-nomask', !mask), _classnames))\n    }, function (notification) {\n        return callback && callback(notification);\n    });\n}\nfunction notice(content, type) {\n    var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _config.duration;\n    var _onClose = arguments[3];\n    var mask = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : _config.mask;\n\n    var iconTypes = {\n        info: '',\n        success: 'success',\n        fail: 'fail',\n        offline: 'dislike',\n        loading: 'loading'\n    };\n    var iconType = iconTypes[type];\n    getMessageInstance(mask, function (notification) {\n        messageInstance = notification;\n        notification.notice({\n            duration: duration,\n            style: {},\n            content: !!iconType ? React.createElement(\n                'div',\n                { className: prefixCls + '-text ' + prefixCls + '-text-icon', role: 'alert', 'aria-live': 'assertive' },\n                React.createElement(_icon2['default'], { type: iconType, size: 'lg' }),\n                React.createElement(\n                    'div',\n                    { className: prefixCls + '-text-info' },\n                    content\n                )\n            ) : React.createElement(\n                'div',\n                { className: prefixCls + '-text', role: 'alert', 'aria-live': 'assertive' },\n                React.createElement(\n                    'div',\n                    null,\n                    content\n                )\n            ),\n            closable: true,\n            onClose: function onClose() {\n                if (_onClose) {\n                    _onClose();\n                }\n                notification.destroy();\n                notification = null;\n                messageInstance = null;\n            }\n        });\n    });\n}\nexports['default'] = {\n    SHORT: SHORT,\n    LONG: 8,\n    show: function show(content, duration, mask) {\n        return notice(content, 'info', duration, function () {}, mask);\n    },\n    info: function info(content, duration, onClose, mask) {\n        return notice(content, 'info', duration, onClose, mask);\n    },\n    success: function success(content, duration, onClose, mask) {\n        return notice(content, 'success', duration, onClose, mask);\n    },\n    fail: function fail(content, duration, onClose, mask) {\n        return notice(content, 'fail', duration, onClose, mask);\n    },\n    offline: function offline(content, duration, onClose, mask) {\n        return notice(content, 'offline', duration, onClose, mask);\n    },\n    loading: function loading(content, duration, onClose, mask) {\n        return notice(content, 'loading', duration, onClose, mask);\n    },\n    hide: function hide() {\n        if (messageInstance) {\n            messageInstance.destroy();\n            messageInstance = null;\n        }\n    },\n    config: function config() {\n        var conf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var _conf$duration = conf.duration,\n            duration = _conf$duration === undefined ? SHORT : _conf$duration,\n            mask = conf.mask;\n\n        _config.duration = duration;\n        if (mask === false) {\n            _config.mask = false;\n        }\n    }\n};\nmodule.exports = exports['default'];","'use strict';\n\nrequire('../../style/css');\n\nrequire('../../icon/style/css');\n\nrequire('./index.css');","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import * as React from 'react';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.node.isRequired);\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.object.isRequired);\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": PropTypes.objectOf(PropTypes.node.isRequired).isRequired,\n  \"cellRenderer\": PropTypes.func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"deferredMeasurementCache\": PropTypes.object,\n  \"horizontalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"styleCache\": PropTypes.objectOf(PropTypes.object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"visibleColumnIndices\": PropTypes.object.isRequired,\n  \"visibleRowIndices\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOfType([PropTypes.func, PropTypes.number]);\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"clientWidth\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"scrollWidth\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": PropTypes.bool.isRequired,\n  \"vertical\": PropTypes.bool.isRequired,\n  \"size\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": PropTypes.number.isRequired,\n  \"columnOverscanStopIndex\": PropTypes.number.isRequired,\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStartIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStopIndex\": PropTypes.number.isRequired,\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": PropTypes.oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": PropTypes.oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": PropTypes.number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": PropTypes.number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": PropTypes.number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": PropTypes.number,\n  \"stop\": PropTypes.number\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellPosition };\nexport { bpfrpt_proptype_CellRendererParams };\nexport { bpfrpt_proptype_CellRenderer };\nexport { bpfrpt_proptype_CellCache };\nexport { bpfrpt_proptype_StyleCache };\nexport { bpfrpt_proptype_CellRangeRendererParams };\nexport { bpfrpt_proptype_CellRangeRenderer };\nexport { bpfrpt_proptype_CellSizeGetter };\nexport { bpfrpt_proptype_CellSize };\nexport { bpfrpt_proptype_NoContentRenderer };\nexport { bpfrpt_proptype_Scroll };\nexport { bpfrpt_proptype_ScrollbarPresenceChange };\nexport { bpfrpt_proptype_RenderedSection };\nexport { bpfrpt_proptype_OverscanIndicesGetterParams };\nexport { bpfrpt_proptype_OverscanIndices };\nexport { bpfrpt_proptype_OverscanIndicesGetter };\nexport { bpfrpt_proptype_Alignment };\nexport { bpfrpt_proptype_VisibleCellRange };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nvar Notice = function (_Component) {\n  _inherits(Notice, _Component);\n\n  function Notice() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Notice);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Notice.__proto__ || Object.getPrototypeOf(Notice)).call.apply(_ref, [this].concat(args))), _this), _this.close = function () {\n      _this.clearCloseTimer();\n      _this.props.onClose();\n    }, _this.startCloseTimer = function () {\n      if (_this.props.duration) {\n        _this.closeTimer = setTimeout(function () {\n          _this.close();\n        }, _this.props.duration * 1000);\n      }\n    }, _this.clearCloseTimer = function () {\n      if (_this.closeTimer) {\n        clearTimeout(_this.closeTimer);\n        _this.closeTimer = null;\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Notice, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.startCloseTimer();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.clearCloseTimer();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _className;\n\n      var props = this.props;\n      var componentClass = props.prefixCls + '-notice';\n      var className = (_className = {}, _defineProperty(_className, '' + componentClass, 1), _defineProperty(_className, componentClass + '-closable', props.closable), _defineProperty(_className, props.className, !!props.className), _className);\n      return React.createElement(\n        'div',\n        { className: classNames(className), style: props.style },\n        React.createElement(\n          'div',\n          { className: componentClass + '-content' },\n          props.children\n        ),\n        props.closable ? React.createElement(\n          'a',\n          { tabIndex: '0', onClick: this.close, className: componentClass + '-close' },\n          React.createElement('span', { className: componentClass + '-close-x' })\n        ) : null\n      );\n    }\n  }]);\n\n  return Notice;\n}(Component);\n\nNotice.propTypes = {\n  duration: PropTypes.number,\n  onClose: PropTypes.func,\n  children: PropTypes.any\n};\nNotice.defaultProps = {\n  onEnd: function onEnd() {},\n  onClose: function onClose() {},\n\n  duration: 1.5,\n  style: {\n    right: '50%'\n  }\n};\nexport default Notice;","import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport Animate from 'rc-animate';\nimport createChainedFunction from 'rc-util/es/createChainedFunction';\nimport classnames from 'classnames';\nimport Notice from './Notice';\n\nvar seed = 0;\nvar now = Date.now();\n\nfunction getUuid() {\n  return 'rcNotification_' + now + '_' + seed++;\n}\n\nvar Notification = function (_Component) {\n  _inherits(Notification, _Component);\n\n  function Notification() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Notification);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Notification.__proto__ || Object.getPrototypeOf(Notification)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      notices: []\n    }, _this.add = function (notice) {\n      var key = notice.key = notice.key || getUuid();\n      _this.setState(function (previousState) {\n        var notices = previousState.notices;\n        if (!notices.filter(function (v) {\n          return v.key === key;\n        }).length) {\n          return {\n            notices: notices.concat(notice)\n          };\n        }\n      });\n    }, _this.remove = function (key) {\n      _this.setState(function (previousState) {\n        return {\n          notices: previousState.notices.filter(function (notice) {\n            return notice.key !== key;\n          })\n        };\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Notification, [{\n    key: 'getTransitionName',\n    value: function getTransitionName() {\n      var props = this.props;\n      var transitionName = props.transitionName;\n      if (!transitionName && props.animation) {\n        transitionName = props.prefixCls + '-' + props.animation;\n      }\n      return transitionName;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this,\n          _className;\n\n      var props = this.props;\n      var noticeNodes = this.state.notices.map(function (notice) {\n        var onClose = createChainedFunction(_this2.remove.bind(_this2, notice.key), notice.onClose);\n        return React.createElement(\n          Notice,\n          _extends({\n            prefixCls: props.prefixCls\n          }, notice, {\n            onClose: onClose\n          }),\n          notice.content\n        );\n      });\n      var className = (_className = {}, _defineProperty(_className, props.prefixCls, 1), _defineProperty(_className, props.className, !!props.className), _className);\n      return React.createElement(\n        'div',\n        { className: classnames(className), style: props.style },\n        React.createElement(\n          Animate,\n          { transitionName: this.getTransitionName() },\n          noticeNodes\n        )\n      );\n    }\n  }]);\n\n  return Notification;\n}(Component);\n\nNotification.propTypes = {\n  prefixCls: PropTypes.string,\n  transitionName: PropTypes.string,\n  animation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  style: PropTypes.object\n};\nNotification.defaultProps = {\n  prefixCls: 'rmc-notification',\n  animation: 'fade',\n  style: {\n    top: 65,\n    left: '50%'\n  }\n};\n\n\nNotification.newInstance = function newNotificationInstance(properties, callback) {\n  var _ref2 = properties || {},\n      getContainer = _ref2.getContainer,\n      props = _objectWithoutProperties(_ref2, ['getContainer']);\n\n  var div = void 0;\n  if (getContainer) {\n    div = getContainer();\n  } else {\n    div = document.createElement('div');\n    document.body.appendChild(div);\n  }\n  var called = false;\n  function ref(notification) {\n    if (called) {\n      return;\n    }\n    called = true;\n    callback({\n      notice: function notice(noticeProps) {\n        notification.add(noticeProps);\n      },\n      removeNotice: function removeNotice(key) {\n        notification.remove(key);\n      },\n\n      component: notification,\n      destroy: function destroy() {\n        ReactDOM.unmountComponentAtNode(div);\n        if (!getContainer) {\n          document.body.removeChild(div);\n        }\n      }\n    });\n  }\n  ReactDOM.render(React.createElement(Notification, _extends({}, props, { ref: ref })), div);\n};\n\nexport default Notification;","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  var args = [].slice.call(arguments, 0);\n\n  if (args.length === 1) {\n    return args[0];\n  }\n\n  return function chainedFunction() {\n    for (var i = 0; i < args.length; i++) {\n      if (args[i] && args[i].apply) {\n        args[i].apply(this, arguments);\n      }\n    }\n  };\n}","import Notification from './Notification';\nexport default Notification;","// extracted by mini-css-extract-plugin\nexport default {};","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["Object","defineProperty","exports","value","_defineProperty3","_interopRequireDefault","require","_classnames3","React","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","_interopRequireWildcard","_rmcNotification2","_icon2","_config","duration","mask","messageInstance","prefixCls","getMessageInstance","callback","_classnames","destroy","newInstance","style","transitionName","className","notification","notice","content","type","arguments","length","undefined","_onClose","iconTypes","info","success","fail","offline","loading","iconType","createElement","role","size","closable","onClose","SHORT","LONG","show","hide","config","conf","_conf$duration","module","keys","target","i","indexOf","componentWillMount","state","this","constructor","getDerivedStateFromProps","props","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","name","newApiName","componentDidUpdate","maybeSnapshot","snapshot","__suppressDeprecationWarning","toVal","mix","k","y","str","Array","isArray","tmp","x","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","_objectWithoutProperties","source","excluded","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","index","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","cachedIndices","indices","allInitialized","every","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","document","scrollbarSize","recalc","canUseDOM","scrollDiv","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_extends","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","nonce","hostWindow","_window","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","offsetHeight","scrollListener","e","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","writable","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","result","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","get","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","keyMapper","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","sortDirection","SortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","minWidth","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","Notice","_Component","_ret","__proto__","getPrototypeOf","close","clearCloseTimer","startCloseTimer","closeTimer","_className","componentClass","PropTypes","defaultProps","onEnd","seed","getUuid","Notification","notices","add","previousState","v","noticeNodes","createChainedFunction","classnames","Animate","getTransitionName","properties","getContainer","div","called","noticeProps","removeNotice","_objectWithoutPropertiesLoose","sourceKeys","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}