{"version":3,"file":"static/js/756.47567ae5.chunk.js","mappings":"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","sources":["components/NavHeader/index.js","pages/CityList/index.js","../node_modules/antd-mobile/lib/nav-bar/index.js","../node_modules/antd-mobile/lib/nav-bar/style/css.js","webpack://my-app/./node_modules/antd-mobile/lib/nav-bar/style/index.css?4997"],"sourcesContent":["import React from 'react'\r\nimport { NavBar } from 'antd-mobile'\r\nimport { useNavigate } from 'react-router-dom'\r\n// 导入 props 校验的包\r\nimport PropTypes from 'prop-types'\r\n// 导入样式\r\nimport './index.css'\r\n\r\n// 添加 className 和 rightContent（导航栏右侧内容）属性\r\nfunction NavHeader({ children, onLeftClick, className, rightContent }) {\r\n  const navigate = useNavigate()\r\n  // 默认点击行为\r\n  const defaultHandle = () => navigate(-1)\r\n  return (\r\n    <NavBar\r\n      className={['navBar', className || ''].join(' ')}\r\n      mode=\"light\"\r\n      icon={<i className=\"iconfont icon-back\" />}\r\n      onLeftClick={onLeftClick || defaultHandle}\r\n      rightContent={rightContent}\r\n    >\r\n      {children}\r\n    </NavBar>\r\n  )\r\n}\r\n\r\n// 添加 props 校验\r\nNavHeader.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  onLeftClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  rightContent: PropTypes.array,\r\n}\r\n\r\nexport default NavHeader\r\n","import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n// 导入 axios\r\nimport axios from 'axios'\r\n// 导入 NavBar 组件\r\nimport { Toast } from 'antd-mobile'\r\n// 导入 List 组件\r\nimport { AutoSizer, List } from 'react-virtualized'\r\n// 导入样式\r\nimport './index.css'\r\n// 导入 utils 中获取当前定位城市的方法\r\nimport { getCurrentCity } from '../../utils'\r\n// 导入 NavHeader 组件\r\nimport NavHeader from '../../components/NavHeader'\r\n// 导入 CSSModules 的样式文件\r\n// import styles from './index.module.css'\r\n// console.log(styles)\r\n\r\n// 数据格式化的方法\r\n// list:[{},{}]\r\nconst formatCityData = (list) => {\r\n  let cityList = {}\r\n  let cityIndex = []\r\n  // 1. 遍历 list 数组\r\n  list.forEach((item) => {\r\n    // 2. 获取每一个城市的首字母\r\n    const first = item.short.substr(0, 1)\r\n    // 3. 判断 cityList 中是否有该分类\r\n    if (cityList[first]) {\r\n      // 4. 如果有,直接往该分类中 push 数据\r\n      // cityList[first] => [{},{}]\r\n      cityList[first].push(item)\r\n    } else {\r\n      // 5. 如果没有,就先创建一个数组,然后,把当前城市信息添加到数组中\r\n      cityList[first] = [item]\r\n    }\r\n  })\r\n  // 获取索引数据\r\n  cityIndex = Object.keys(cityList).sort()\r\n  return {\r\n    cityList,\r\n    cityIndex,\r\n  }\r\n}\r\n\r\n// 列表数据的数据源\r\n// const list = Array(100).fill('react')\r\n\r\n// 渲染每一行数据的渲染函数\r\n// 函数的返回值就表示最终渲染在页面中的内容\r\n// function rowRenderer({\r\n//   key, // Unique key within array of rows\r\n//   index, // 索引号\r\n//   isScrolling, // 当前项是否在滚动中\r\n//   isVisible, // 当前项在 List 中式可见的\r\n//   style, // 注意:重点属性,一定要给每一个行数据添加该样式!作用:指定每一行的位置\r\n// }) {\r\n//   return (\r\n//     <div key={key} style={style}>\r\n//       {list[index]}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// 索引（A、B等）的高度\r\nconst TITLE_HEIGHT = 36\r\n// 每个城市名称的高度\r\nconst NAME_HEIGHT = 50\r\n\r\n// 封装处理字母索引的方法\r\nconst formatCityIndex = (letter) => {\r\n  switch (letter) {\r\n    case '#':\r\n      return '当前定位'\r\n    case 'hot':\r\n      return '热门城市'\r\n    default:\r\n      return letter.toUpperCase()\r\n  }\r\n}\r\n\r\n// 有房源的城市\r\nconst HOUSE_CITY = ['北京', '上海', '广州', '深圳']\r\n\r\nclass CityList extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      cityList: {},\r\n      cityIndex: [],\r\n      // 指定右侧字母索引列表高亮的索引号\r\n      activeIndex: 0,\r\n    }\r\n    // 创建 ref 对象\r\n    this.cityListComponent = React.createRef()\r\n  }\r\n  // 获取城市列表数据的方法\r\n  async getCityList() {\r\n    const res = await axios.get('http://localhost:8080/area/city', {\r\n      params: { level: 1 },\r\n    })\r\n    const { cityList, cityIndex } = formatCityData(res.data.body)\r\n    const hotRes = await axios.get('http://localhost:8080/area/hot')\r\n    // 将数据添加到 cityList 中\r\n    cityList['hot'] = hotRes.data.body\r\n    // 将索引添加到 cityIndex 中\r\n    cityIndex.unshift('hot')\r\n    // 获取当前定位城市\r\n    const curCity = await getCurrentCity()\r\n    // 1. 将当前定位城市数据添加到 cityList 中\r\n    cityList['#'] = [curCity]\r\n    // 2. 将当前定位城市的索引添加到 cityIndex 中\r\n    cityIndex.unshift('#')\r\n    this.setState(() => {\r\n      return {\r\n        cityList,\r\n        cityIndex,\r\n      }\r\n    })\r\n  }\r\n  changeCity = ({ label, value }) => {\r\n    const { navigate } = this.props\r\n    if (HOUSE_CITY.indexOf(label) !== -1) {\r\n      localStorage.setItem('hkzf_city', JSON.stringify({ label, value }))\r\n      navigate(-1)\r\n    } else {\r\n      Toast.info('该城市暂无房源数据', 1, null, false)\r\n    }\r\n  }\r\n  // 渲染每一行的方法\r\n  rowRenderer = ({\r\n    key, // Unique key within array of rows\r\n    index, // 索引号\r\n    isScrolling, // 当前项是否在滚动中\r\n    isVisible, // 当前项在 List 中式可见的\r\n    style, // 注意:重点属性,一定要给每一个行数据添加该样式!作用:指定每一行的位置\r\n  }) => {\r\n    // 获取每一行的字母索引\r\n    const { cityIndex, cityList } = this.state\r\n    const letter = cityIndex[index]\r\n    // 获取指定字母索引下的城市列表数据\r\n    // cityList[letter]\r\n    return (\r\n      <div key={key} style={style} className=\"city\">\r\n        <div className=\"title\">{formatCityIndex(letter)}</div>\r\n        {cityList[letter].map((item) => (\r\n          <div\r\n            className=\"name\"\r\n            key={item.value}\r\n            onClick={() => {\r\n              this.changeCity(item)\r\n            }}\r\n          >\r\n            {item.label}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n  // 创建动态计算每一行高度的方法\r\n  getRowHeight = ({ index }) => {\r\n    // 索引标题高度 + 城市数量 * 城市名称的高度\r\n    // TITLE_HEIGHT + cityList[cityIndex[index]].length * NAME_HEIGHT\r\n    const { cityIndex, cityList } = this.state\r\n    return TITLE_HEIGHT + cityList[cityIndex[index]].length * NAME_HEIGHT\r\n  }\r\n  // 封装渲染右侧索引列表的方法\r\n  renderCityIndex = () => {\r\n    // 获取到 cityIndex，并遍历其，实现渲染\r\n    return this.state.cityIndex.map((item, index) => (\r\n      <li\r\n        className=\"city-index-item\"\r\n        key={item}\r\n        onClick={() => {\r\n          this.cityListComponent.current.scrollToRow(index)\r\n        }}\r\n      >\r\n        <span className={this.state.activeIndex === index ? 'index-active' : ''}>\r\n          {item === 'hot' ? '热' : item.toUpperCase()}\r\n        </span>\r\n      </li>\r\n    ))\r\n  }\r\n  // 用于获取 List 组件中渲染行的信息\r\n  onRowsRendered = ({ startIndex }) => {\r\n    if (startIndex !== this.state.activeIndex) {\r\n      this.setState(() => {\r\n        return {\r\n          activeIndex: startIndex,\r\n        }\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"citylist\">\r\n        {/* 顶部导航栏 */}\r\n        <NavHeader>城市选择</NavHeader>\r\n        {/* 城市列表 */}\r\n        <AutoSizer>\r\n          {({ height, width }) => (\r\n            <List\r\n              width={width}\r\n              height={height}\r\n              rowCount={this.state.cityIndex.length}\r\n              rowHeight={this.getRowHeight}\r\n              rowRenderer={this.rowRenderer}\r\n              onRowsRendered={this.onRowsRendered}\r\n              ref={this.cityListComponent}\r\n              scrollToAlignment=\"start\"\r\n            />\r\n          )}\r\n        </AutoSizer>\r\n        {/* 右侧索引列表 */}\r\n        <ul className=\"city-index\">{this.renderCityIndex()}</ul>\r\n      </div>\r\n    )\r\n  }\r\n  componentDidMount() {\r\n    this.getCityList()\r\n    // 调用 measureAllRows，提前计算 List 中每一行的高度，实现 scrollToRow 的精确跳转\r\n    // 注意：调用这个方法的时候，需要保证 List 组件中已经有了数据！如果 List 组件中的数据为空，就会导致调用方法报错！\r\n    // 解决：只要保证这个方法是在 获取数据之后 调用即可\r\n    // 只需要给 获取数据的方法 加上 await 即可\r\n    // 但是现在好像不需要 measureAllRows 方法，也可以实现精确跳转\r\n    // this.cityListComponent.current.measureAllRows()\r\n  }\r\n}\r\n\r\nexport default function History(props) {\r\n  const navigate = useNavigate()\r\n  return <CityList {...props} navigate={navigate} />\r\n}\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n    }return t;\n};\n\nvar NavBar = function (_React$Component) {\n    (0, _inherits3['default'])(NavBar, _React$Component);\n\n    function NavBar() {\n        (0, _classCallCheck3['default'])(this, NavBar);\n        return (0, _possibleConstructorReturn3['default'])(this, (NavBar.__proto__ || Object.getPrototypeOf(NavBar)).apply(this, arguments));\n    }\n\n    (0, _createClass3['default'])(NavBar, [{\n        key: 'render',\n        value: function render() {\n            var _a = this.props,\n                prefixCls = _a.prefixCls,\n                className = _a.className,\n                children = _a.children,\n                mode = _a.mode,\n                icon = _a.icon,\n                onLeftClick = _a.onLeftClick,\n                leftContent = _a.leftContent,\n                rightContent = _a.rightContent,\n                restProps = __rest(_a, [\"prefixCls\", \"className\", \"children\", \"mode\", \"icon\", \"onLeftClick\", \"leftContent\", \"rightContent\"]);\n            return React.createElement(\n                'div',\n                (0, _extends3['default'])({}, restProps, { className: (0, _classnames2['default'])(className, prefixCls, prefixCls + '-' + mode) }),\n                React.createElement(\n                    'div',\n                    { className: prefixCls + '-left', role: 'button', onClick: onLeftClick },\n                    icon ?\n                    // tslint:disable-next-line:jsx-no-multiline-js\n                    React.createElement(\n                        'span',\n                        { className: prefixCls + '-left-icon', 'aria-hidden': 'true' },\n                        icon\n                    ) : null,\n                    leftContent\n                ),\n                React.createElement(\n                    'div',\n                    { className: prefixCls + '-title' },\n                    children\n                ),\n                React.createElement(\n                    'div',\n                    { className: prefixCls + '-right' },\n                    rightContent\n                )\n            );\n        }\n    }]);\n    return NavBar;\n}(React.Component);\n\nexports['default'] = NavBar;\n\nNavBar.defaultProps = {\n    prefixCls: 'am-navbar',\n    mode: 'dark',\n    onLeftClick: function onLeftClick() {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nrequire('../../style/css');\n\nrequire('./index.css');","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["children","onLeftClick","className","rightContent","navigate","useNavigate","join","mode","icon","formatCityData","list","cityIndex","cityList","forEach","item","first","short","substr","push","Object","keys","sort","formatCityIndex","letter","toUpperCase","HOUSE_CITY","CityList","props","changeCity","label","value","indexOf","localStorage","setItem","JSON","stringify","rowRenderer","key","index","style","isScrolling","isVisible","state","map","onClick","getRowHeight","length","renderCityIndex","cityListComponent","current","scrollToRow","activeIndex","onRowsRendered","startIndex","setState","React","axios","params","level","res","data","body","hotRes","unshift","getCurrentCity","curCity","this","NavHeader","height","width","rowCount","rowHeight","ref","scrollToAlignment","getCityList","History","defineProperty","exports","_extends3","_interopRequireDefault","require","_classCallCheck3","_createClass3","_possibleConstructorReturn3","_inherits3","_classnames2","obj","__esModule","newObj","prototype","hasOwnProperty","call","_interopRequireWildcard","__rest","s","e","t","p","getOwnPropertySymbols","i","NavBar","_React$Component","__proto__","getPrototypeOf","apply","arguments","_a","prefixCls","leftContent","restProps","createElement","role","Component","defaultProps","module"],"sourceRoot":""}