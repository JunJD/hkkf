{"version":3,"file":"static/js/499.41741ff8.chunk.js","mappings":"+LAkCA,MAzBA,YAAwE,IAAnDA,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,aAC/CC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,cACEH,UAAW,CAAC,SAAUA,GAAa,IAAII,KAAK,KAC5CC,KAAK,QACLC,MAAM,cAAGN,UAAU,uBACnBD,YAAaA,GANK,kBAAMG,GAAU,IAOlCD,aAAcA,EALhB,SAOGH,M,4UCpBP,EAAuB,oBAAvB,EAAuD,yBAAvD,EAA2F,wBAA3F,EAA8H,wBAA9H,EAA8J,qBAA9J,EAAgM,0BAAhM,EAAmO,sBAAnO,EAAiQ,qB,SC8B3PS,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAwCH,OAxCGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACJ,WACE,OACE,iBAAKP,UAAWQ,EAAhB,WAEE,SAACC,EAAA,EAAD,CAAWT,UAAWQ,EAAtB,uCACA,cAAYE,KAAK,QAGjB,0BACE,UAAC,KAAD,YAEE,gBAAKV,UAAWQ,EAAhB,UACE,SAAC,KAAD,CAAOR,UAAWQ,EAAcG,KAAK,WAAWC,YAAY,sCAE9D,SAAC,KAAD,CAAcZ,UAAWQ,EAAcG,KAAK,WAAWE,UAAU,SAEjE,gBAAKb,UAAWQ,EAAhB,UACE,SAAC,KAAD,CACER,UAAWQ,EACXG,KAAK,WACLG,KAAK,WACLF,YAAY,sCAGhB,SAAC,KAAD,CAAcZ,UAAWQ,EAAcG,KAAK,WAAWE,UAAU,SACjE,gBAAKb,UAAWQ,EAAhB,UACE,mBAAQR,UAAWQ,EAAeM,KAAK,SAAvC,iCAKJ,cAAMd,UAAWQ,EAAjB,UACE,6BACE,SAAC,KAAD,CAAMO,GAAG,WAAT,mFAMX,EAxCGR,CAAcS,EAAAA,WAoGL,SAASC,EAAQC,GAC9B,IAAMhB,GAAWC,EAAAA,EAAAA,MACXgB,GAAWC,EAAAA,EAAAA,MACjB,OAAO,SAACb,GAAD,kBAAWW,GAAX,IAAkBhB,SAAUA,EAAUiB,SAAUA,KA3DzDZ,GAAQc,EAAAA,EAAAA,IAAW,CAEjBC,iBAAkB,iBAAO,CAAEC,SAAU,GAAIC,SAAU,KAGnDC,iBAAkBC,EAAAA,KAAaC,MAAM,CACnCJ,SAAUG,EAAAA,KACPE,SAAS,wCACTC,QAhEW,qBAgEQ,wHACtBL,SAAUE,EAAAA,KACPE,SAAS,wCACTC,QAlES,sBAkEQ,2HAItBC,aAAa,WAAD,wBAAE,WAAOC,EAAP,+FAAiBb,EAAjB,EAAiBA,MAErBK,EAAuBQ,EAAvBR,SAAUC,EAAaO,EAAbP,SAFN,SAMMQ,EAAAA,GAAAA,KAAS,cAAe,CACxCT,SAAAA,EACAC,SAAAA,IARU,OAMNS,EANM,SAW0BA,EAAIC,KAAlCC,EAXI,EAWJA,OAAQC,EAXJ,EAWIA,KAAMC,EAXV,EAWUA,YAEP,MAAXF,GAEFG,aAAaC,QAAQ,aAAcH,EAAKI,OAOnCtB,EAAMC,SAASsB,MAMlBvB,EAAMwB,QAAQC,QAAQzB,EAAMC,SAASsB,MAAMG,KAAKC,UAJhD3B,EAAMwB,QAAQI,IAAI,IAWpB,SAAWT,EAAa,EAAG,MAAM,GAnCvB,2CAAF,qDAAC,IAfPhB,CAqDLd","sources":["components/NavHeader/index.js","webpack://my-app/./src/pages/Login/index.module.css?6687","pages/Login/index.js"],"sourcesContent":["import React from 'react'\r\nimport { NavBar } from 'antd-mobile'\r\nimport { useNavigate } from 'react-router-dom'\r\n// 导入 props 校验的包\r\nimport PropTypes from 'prop-types'\r\n// 导入样式\r\nimport './index.css'\r\n\r\n// 添加 className 和 rightContent（导航栏右侧内容）属性\r\nfunction NavHeader({ children, onLeftClick, className, rightContent }) {\r\n  const navigate = useNavigate()\r\n  // 默认点击行为\r\n  const defaultHandle = () => navigate(-1)\r\n  return (\r\n    <NavBar\r\n      className={['navBar', className || ''].join(' ')}\r\n      mode=\"light\"\r\n      icon={<i className=\"iconfont icon-back\" />}\r\n      onLeftClick={onLeftClick || defaultHandle}\r\n      rightContent={rightContent}\r\n    >\r\n      {children}\r\n    </NavBar>\r\n  )\r\n}\r\n\r\n// 添加 props 校验\r\nNavHeader.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  onLeftClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  rightContent: PropTypes.array,\r\n}\r\n\r\nexport default NavHeader\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Login_root__mzoMe\",\"navHeader\":\"Login_navHeader__V4gmt\",\"backHome\":\"Login_backHome__SWpdy\",\"formItem\":\"Login_formItem__JlrX4\",\"input\":\"Login_input__qexBw\",\"formSubmit\":\"Login_formSubmit__Mfvhr\",\"submit\":\"Login_submit__-Oqr+\",\"error\":\"Login_error__JNYsf\"};","import React, { Component } from 'react'\r\nimport { Flex, WingBlank, WhiteSpace, Toast } from 'antd-mobile'\r\n\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\n\r\n// 导入withFormik\r\nimport { withFormik, Form, Field, ErrorMessage } from 'formik'\r\n\r\n// 导入Yup\r\nimport * as Yup from 'yup'\r\n\r\n// 导入 API\r\nimport { API } from '../../utils'\r\n\r\nimport NavHeader from '../../components/NavHeader'\r\n\r\nimport styles from './index.module.css'\r\n\r\n// 验证规则：\r\nconst REG_UNAME = /^[a-zA-Z_\\d]{5,8}$/\r\nconst REG_PWD = /^[a-zA-Z_\\d]{5,12}$/\r\n\r\n/*\r\n  简化表单处理：\r\n\r\n  1 导入 Form 组件，替换 form 元素，去掉 onSubmit。\r\n  2 导入 Field 组件，替换 input 表单元素，去掉 onChange、onBlur、value。\r\n  3 导入 ErrorMessage 组件，原来的错误消息逻辑代码。\r\n  4 去掉所有 props。\r\n*/\r\n\r\nclass Login extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.root}>\r\n        {/* 顶部导航 */}\r\n        <NavHeader className={styles.navHeader}>账号登录</NavHeader>\r\n        <WhiteSpace size=\"xl\" />\r\n\r\n        {/* 登录表单 */}\r\n        <WingBlank>\r\n          <Form>\r\n            {/* 账号 */}\r\n            <div className={styles.formItem}>\r\n              <Field className={styles.input} name=\"username\" placeholder=\"请输入账号\" />\r\n            </div>\r\n            <ErrorMessage className={styles.error} name=\"username\" component=\"div\" />\r\n            {/* 密码 */}\r\n            <div className={styles.formItem}>\r\n              <Field\r\n                className={styles.input}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"请输入密码\"\r\n              />\r\n            </div>\r\n            <ErrorMessage className={styles.error} name=\"password\" component=\"div\" />\r\n            <div className={styles.formSubmit}>\r\n              <button className={styles.submit} type=\"submit\">\r\n                登 录\r\n              </button>\r\n            </div>\r\n          </Form>\r\n          <Flex className={styles.backHome}>\r\n            <Flex.Item>\r\n              <Link to=\"/registe\">还没有账号，去注册~</Link>\r\n            </Flex.Item>\r\n          </Flex>\r\n        </WingBlank>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// 使用 withFormik 高阶组件包装 Login 组件，为 Login 组件提供属性和方法\r\nLogin = withFormik({\r\n  // 提供状态：\r\n  mapPropsToValues: () => ({ username: '', password: '' }),\r\n\r\n  // 添加表单校验规则\r\n  validationSchema: Yup.object().shape({\r\n    username: Yup.string()\r\n      .required('账号为必填项')\r\n      .matches(REG_UNAME, '长度为5到8位，只能出现数字、字母、下划线'),\r\n    password: Yup.string()\r\n      .required('密码为必填项')\r\n      .matches(REG_PWD, '长度为5到12位，只能出现数字、字母、下划线'),\r\n  }),\r\n\r\n  // 表单的提交事件\r\n  handleSubmit: async (values, { props }) => {\r\n    // 获取账号和密码\r\n    const { username, password } = values\r\n\r\n    // console.log('表单提交了', username, password, props)\r\n    // 发送请求\r\n    const res = await API.post('/user/login', {\r\n      username,\r\n      password,\r\n    })\r\n\r\n    const { status, body, description } = res.data\r\n\r\n    if (status === 200) {\r\n      // 登录成功\r\n      localStorage.setItem('hkzf_token', body.token)\r\n\r\n      /* \r\n        1 登录成功后，判断是否需要跳转到用户想要访问的页面（判断 props.location.state 是否有值）。\r\n        2 如果不需要（没有值），则直接调用 history.go(-1) 返回上一页。\r\n        3 如果需要，就跳转到 from.pathname 指定的页面（推荐使用 replace 方法模式，而不是 push）。\r\n      */\r\n      if (!props.location.state) {\r\n        // 此时，表示是直接进入到了该页面，直接调用 go(-1) 即可\r\n        props.history.go(-1)\r\n      } else {\r\n        // push：[home, login, map]\r\n        // replace: [home, map]\r\n        props.history.replace(props.location.state.from.pathname)\r\n      }\r\n      // 注意：无法在该方法中，通过 this 来获取到路由信息\r\n      // 所以，需要通过 第二个对象参数中获取到 props 来使用 props\r\n      // props.history.go(-1)\r\n    } else {\r\n      // 登录失败\r\n      Toast.info(description, 2, null, false)\r\n    }\r\n  },\r\n})(Login)\r\n\r\n// 注意：此处返回的是 高阶组件 包装后的组件\r\nexport default function History(props) {\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  return <Login {...props} navigate={navigate} location={location} />\r\n}\r\n"],"names":["children","onLeftClick","className","rightContent","navigate","useNavigate","join","mode","icon","Login","styles","NavHeader","size","name","placeholder","component","type","to","Component","History","props","location","useLocation","withFormik","mapPropsToValues","username","password","validationSchema","Yup","shape","required","matches","handleSubmit","values","API","res","data","status","body","description","localStorage","setItem","token","state","history","replace","from","pathname","go"],"sourceRoot":""}